{"version":3,"sources":["PersonalKanban/constants/index.ts","PersonalKanban/components/Radio/Radio.tsx","PersonalKanban/components/Radio/index.ts","PersonalKanban/components/ColumnForm/ColumnForm.tsx","PersonalKanban/components/ColumnForm/index.ts","PersonalKanban/components/RecordForm/RecordForm.tsx","PersonalKanban/components/RecordForm/index.ts","PersonalKanban/services/StorageService.ts","PersonalKanban/providers/ThemeProvider.tsx","PersonalKanban/components/RecordDetails/ActionDueDate.tsx","PersonalKanban/components/RecordDetails/ActionTaskMembers.tsx","PersonalKanban/components/RecordDetails/ItemChecklist.tsx","PersonalKanban/components/RecordDetails/ItemRelatedDocs.tsx","PersonalKanban/components/RecordDetails/ItemTags.tsx","PersonalKanban/components/RecordDetails/RecordTitle.tsx","PersonalKanban/components/RecordDetails/RecordDetails.tsx","PersonalKanban/components/RecordDetails/mockData.ts","PersonalKanban/components/Card/Card.tsx","PersonalKanban/components/Card/index.ts","PersonalKanban/components/Column/ColumnCardList.tsx","PersonalKanban/components/Column/ColumnFooter.tsx","PersonalKanban/components/Column/ColumnHeader.tsx","PersonalKanban/components/Column/Column.tsx","PersonalKanban/components/Column/index.ts","PersonalKanban/components/Board/Board.tsx","PersonalKanban/components/Board/index.ts","PersonalKanban/components/KanbanCard/index.ts","PersonalKanban/components/KanbanCard/KanbanCard.tsx","PersonalKanban/components/KanbanColumn/KanbanColumn.tsx","PersonalKanban/components/KanbanColumn/index.ts","PersonalKanban/components/KanbanBoard/KanbanBoard.tsx","PersonalKanban/components/KanbanBoard/index.ts","PersonalKanban/components/IconButton/IconButton.tsx","PersonalKanban/components/IconButton/index.ts","PersonalKanban/containers/Toolbar/index.tsx","PersonalKanban/services/utils.ts","PersonalKanban/containers/KanbanBoard/AddColumnDialog.tsx","PersonalKanban/containers/KanbanBoard/index.tsx","PersonalKanban/index.tsx","PivotTable/utils/constants.ts","PivotTable/Toolbar/Toolbar.tsx","PivotTable/plugin/useExpandAll/useExpandAll.tsx","PivotTable/Table/HeaderCell.tsx","PivotTable/filter/TextFilter/TextFilter.tsx","PivotTable/plugin/useControlledFilters/useControlledFilters.ts","PivotTable/plugin/useControlledPagination/useControlledPagination.ts","PivotTable/plugin/useControlledSortBy/useControlledSortBy.ts","PivotTable/_internal/zIndex.ts","PivotTable/plugin/useRowSelect/useRowSelect.style.ts","PivotTable/plugin/useRowSelect/useRowSelect.tsx","PivotTable/useTable/useTable.tsx","PivotTable/_internal/useMergedRef.ts","PivotTable/Table/LoadingOverlay.tsx","PivotTable/Table/LoadingRow.tsx","PivotTable/Table/Table.style.ts","PivotTable/Table/TableCell.tsx","PivotTable/Table/TableFooter.tsx","PivotTable/Table/TableOptions/TableOptions.style.ts","PivotTable/Table/TableOptions/TableDensity.tsx","PivotTable/Table/TableOptions/TablePagination.tsx","PivotTable/Table/TableRow.tsx","PivotTable/Table/Table.tsx","PivotTable/Table/hooks/useGridTemplateColumns.ts","PivotTable/Table/hooks/useVirtualize.ts","PivotTable/Table/hooks/useScrollbarWidth.ts","PivotTable/filter/BooleanFilter/BooleanFilter.tsx","PivotTable/cell/IconCell/IconCell.style.ts","PivotTable/filter/RangeFilter/RangeFilter.tsx","PivotTable/cell/IconCell/IconCell.tsx","PivotTable/cell/ImageCell/ImageCell.style.ts","PivotTable/cell/BooleanCell/BooleanCell.style.ts","PivotTable/plugin/useDensity/useDensity.ts","PivotTable/_internal/useRemainingActionsTime.ts","PivotTable/plugin/useInfiniteScroll/useInfiniteScrollErrors.ts","PivotTable/imex/export/useExportTable.ts","PivotTable/components/LoadingBar/LoadingBar.tsx","PivotTable/components/LoadingOverlay/LoadingOverlay.style.ts","PivotTable/imex/import/useImportTable.utils.ts","PivotTable/imex/import/useImportTable.style.ts","PivotTable/TableVariant/PivotTableStandard.tsx","PivotTable/TableVariant/PivotTable.tsx","PivotTable/TableVariant/tableData.tsx","index.tsx"],"names":["RecordColor","Purple","purple","RECORD_SHADE","Indigo","indigo","Blue","blue","Green","green","Yellow","yellow","Orange","orange","Red","red","Default","DarkRecordColor","DARK_RECORD_SHADE","ColumnColor","COLUMN_SHADE","DarkColumnColor","DARK_COLUMN_SHADE","useStyles","makeStyles","root","color","props","checked","Radio","React","forwardRef","ref","rest","classes","ColumnForm","column","disabled","formTitle","onSubmit","onCancel","enableWipLimit","useFormik","initialValues","Object","assign","listGroupTitle","desc","wipEnabled","wipLimit","values","validate","errors","handleChange","handleSubmit","handleWipLimitChange","useCallback","e","persist","value","target","test","Grid","container","spacing","item","xs","Typography","gutterBottom","variant","Divider","TextField","name","label","error","Boolean","helperText","onChange","multiline","rows","FormControlLabel","control","Checkbox","FormControl","component","FormLabel","RadioGroup","row","keys","map","key","colorKey","Button","onClick","type","RecordForm","record","cardTitle","DARK_MODE","COLUMNS","getItem","JSON","parse","localStorage","setItem","stringify","StorageService","getDarkMode","setDarkMode","getColumns","setColumns","ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","darkTheme","setDarkTheme","handleToggleDarkTheme","theme","createTheme","palette","overrides","MuiPaper","cursor","padding","MuiDivider","backgroundColor","light","MuiTextField","margin","fullWidth","MuiButton","size","MuiRadio","custom","colors","pastel","violet","pastelCode","useMemo","Provider","createStyles","dueDatePicker","width","marginRight","border","outline","boxShadow","visibilityHidden","visibility","ActionDueDate","setIsSelectingDueDate","dueDateContent","selectedDueDate","handleDueDateChange","isSelectingDueDate","startIcon","utils","DateFnsUtils","locale","localeCN","DatePicker","open","onOpen","onClose","disableToolbar","format","id","className","cx","console","log","taskMembersList","ActionTaskMembers","handleSelectingTaskMembersPanelOpen","taskMembers","taskMembersText","isSelectingTaskMembersPanelOpen","taskMembersAnchorEl","handleSelectingTaskMembersPanelClose","handleSetTaskMembersToEmpty","availableUsers","handleToggleSelectTaskMember","length","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","List","dense","ListItem","selected","button","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","edge","user","userId","username","isCurrUserSelected","avatar","indexOf","disableRipple","configItemFormControl","configItemTitle","subTaskCheckbox","fontSize","text","secondary","ItemChecklist","doesSubTaskListExist","subTasksChecklist","handleSubTaskChecklistChange","isAddingSubTask","newSubTaskChecklistItemName","handleInputSubTaskChecklistItemName","handleUpdateSubTasksData","handleAddSubTaskChecklistItem","FormGroup","task","state","relatedDocsItemIcon","opacity","minWidth","relatedDocsDocIcon","relatedDocListItem","textSecondary","ItemRelatedDocs","docName","handleDocNameChange","handleAddRelatedDocs","doesRelatedDocsExist","relatedDocs","disableElevation","doc","docId","docTitle","stopPropagation","disableGutters","ListItemIcon","title","slice","addTagBtn","height","addTagBtnML","marginLeft","tagBtn","textTransform","ItemTags","tags","isAddingNewTag","newTagName","handleInputNewTagName","handleUpdateTagsData","handleStartAddNewTag","tag","tagName","Chip","onDelete","RecordTitle","isEditingCardTitle","handleCardTitleChange","setIsEditingCardTitle","onBlur","cardDesc","tagsSpacing","RecordDetails","useReducer","x","forceUpdate","onSubmitDataWithDialogOpen","cardTitleProp","cardLabels","cardTitleEmoji","status","priority","createdAt","cardMembers","cardChecklists","cardRelatedDocs","cardDueTime","isEditingCardDesc","setIsEditingCardDesc","updateCardData","subField","handleCardFormChange","setCardTitle","handleInputCardTitle","event","userCount","retUsers","i","push","fullName","avatarUrl","memberType","generateUserList","setTaskMembersAnchorEl","currentTarget","setSelectedTaskMembers","prev","filter","uid","retText","firstMember","find","u","setSelectedDueDate","toISOString","latestSubTaskList","checkItems","isAddingChecklistItem","setIsAddingChecklistItem","newChecklistItemName","setNewChecklistItemName","handleStartAddingChecklistItem","handleInputChecklistItemName","itemName","handleUpdateChecklistData","_subTaskList","Math","random","toFixed","setIsAddingNewTag","setNewTagName","handleStartAddingNewTag","_tags","latestTags","idBoard","setDocName","trim","_relatedDocs","latestRelatedDocs","docList","url","date","Date","isNaN","offset","getTimezoneOffset","setHours","trunc","formControl","style","paper","minHeight","maxHeight","paperNoBoder","description","overflow","whiteSpace","marginBottom","tagBtnFullPage","taskDueTimeBtn","subTaskListBtn","relatedDocsTitle","relatedDocsCollapseBtn","cardBottomIconBtn","paddingTop","paddingBottom","Card","innerRef","showEditAction","showDeleteAction","onEdit","kanbanVariant","forceColumnUpdate","handleEdit","cardSubTasksTotalCount","cardSubTasksDoneCount","forEach","isRelatedDocsListOpen","setIsRelatedDocsListOpen","handleToggleRelatedDocsListOpen","Paper","elevation","alignItems","justifyContent","Box","display","Number","Collapse","in","timeout","unmountOnExit","disablePadding","alert","useColumnCardListStyles","card","ColumnCardList","CardComponent","onRecordEdit","onRecordDelete","cardsRecords","index","useColumnFooterStyles","divider","marginTop","addCardButton","borderColor","noBorder","ColumnFooter","content","handleOpenAddRecordDialog","noWrap","useColumnHeaderStyles","headerBorder","columnMoreActionsBtn","main","ColumnHeader","bgcolor","fontWeight","useColumnStyles","dialogPaper","maxWidth","dialogContent","Column","onAddRecord","onAllRecordDelete","forceBoardUpdate","showAddRecordAction","showDeleteAllRecordAction","ColumnHeaderComponent","ColumnActionComponent","ColumnCardListComponent","ColumnFooterComponent","caption","columnColor","actions","dialog","setDialog","handleDelete","handleAddRecord","handleRecordEdit","handleRecordDelete","handleAllRecordDelete","handleOpenDialog","handleCloseDialog","handleOpenDeleteDialog","handleOpenEditDialog","handleOpenEditRecordDialog","handleOpenDeleteRecordDialog","Dialog","DialogContent","DialogActions","useBoardStyles","addColButton","Board","columns","ColumnComponent","placeholder","onColumnEdit","onColumnDelete","handleOpenAddColumnDialog","KanbanCard","recordColor","draggableId","provided","draggableProps","dragHandleProps","KanbanInnerColumnCardList","memo","KanbanColumnCardList","columnId","isDropDisabled","droppableId","droppableProps","KanbanColumn","_column","KanbanBoard","onCardMove","onColumnMove","getColumnById","getColumnByIndex","handleDragEnd","result","source","destination","onDragEnd","direction","icons","edit","EditIcon","delete","DeleteIcon","add","AddIcon","deleteSweep","DeleteSweepIcon","deleteForever","DeleteForeverIcon","invertColors","InvertColorsIcon","invertColorsOff","InvertColorsOffIcon","gitHub","GitHubIcon","language","LanguageIcon","personalKanban","DeveloperBoardIcon","info","InfoIcon","IconButton","icon","iconProps","Icon","AddColumnButton","setOpen","ClearBoardButton","onClear","handleClear","useToolbarStyles","buttonGridItem","textAlign","Toolbar","clearButtonDisabled","onNewColumn","onClearBoard","muiTheme","useMuiTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","flexGrow","getId","uuidv4","getDateNowISOStrWithTimezone","timezoneOffset","now","getCreatedAt","reorder","list","startIndex","endIndex","Array","from","splice","removed","AddColumnDialog","initialState","cardStartTime","idCard","idChecklist","nameData","emoji","pos","due","idMember","attachments","comments","taskDueTime","useKanbanBoardStyles","fullPageRoot","toolbar","mixins","KanbanBoardContainer","kanbanData","updateKanbanData","cloneColumns","getColumnIndex","findIndex","c","getRecordIndex","recordId","r","handleClearBoard","handleAddColumn","handleColumnMove","updatedColumns","handleColumnEdit","_columns","columnIndex","handleColumnDelete","handleCardMove","sourceColumn","destinationColumn","sourceIndex","destinationIndex","getRecords","current","next","reordered","newColumns","reorderCards","recordIndex","_record","isAddColumnDialogOpen","setIsAddColumnDialogOpen","handleCloseAddColumnDialog","useEffect","PersonalKanban","NOOP","showToolbar","showToolbarActionsMenuButtons","setToggleShowGroupedTable","pvtViews","setPvtViews","handleClickGroupTableMenu","toolbarActionsMenuData","handler","handlePvtTitleClick","toolbarActionsMenuButtonsReElem","actionMenu","IconElem","toolbarRootReElem","endIcon","useInstance","instance","data","expandedRows","toggleRowExpanded","plugins","ensurePluginOrder","useExpandAll","hooks","pluginName","HeaderCellContainer","styled","div","HeaderCell","TextFilter","filterValue","liveValue","setLiveValue","handleSetFilter","setFilter","debounce","TextInput","bare","small","elementLeft","undefined","EMPTY_FILTERS","useControlledState","rawState","meta","filters","reducer","action","rawPrevState","rawInstance","prevState","onFiltersChange","shouldIgnoreEmptyFilter","isEqual","newFilters","isArray","useControlledFilters","stateReducers","pagination","onPaginationChange","gotoPage","updater","pageIndex","pageSize","setPageSize","useControlledPagination","EMPTY_SORT_BY","sortBy","onSortByChange","useControlledSortBy","zIndex","CheckboxContainer","useRowSelect","visibleColumns","Header","getToggleAllRowsSelectedProps","canSelectAll","Tooltip","Cell","getCheckboxProps","getToggleRowSelectedProps","EMPTY_DATA","COLUMN_ENABLED_CONDITION","useTable","options","rawData","rawColumns","rawDefaultColumn","defaultColumn","restOptions","isValidColumn","includes","enabled","preProcessColumn","HeaderIcon","subColumns","restColumn","preProcessedColumn","accessor","Filter","plugin","manualPagination","manualFilters","manualSortBy","ReactTable","useMergedRef","LoadingContainer","LoadingOverlay","Loader","LoaderContainer","neutralColor","LoadingRow","css","TableContent","table","font","TableHead","thead","TableHeadRow","tr","TableHeadCell","th","TableBodyRow","TableBody","tbody","rowsHeight","TableContainer","TableBodySubRow","TableCellZoom","shadow","TableCellContainer","td","TableHeaderCellContainer","TableHeadCellContent","Text","TableHeaderCellSort","TableOptionBar","ExpandToggleContainer","span","NoDataContainer","TableFooterContainer","tfoot","TableFooterRow","TableCell","isLargerThanCell","setLargerThanCell","cellRefCallback","cellRef","firstChild","clientHeight","TableFooter","footerGroups","group","headers","every","Footer","emptyRenderer","getFooterGroupProps","getFooterProps","render","PaginationContainer","PagesPagination","attrs","PagesChevrons","PageSizeContainer","DensityIcon","tiny","variation","DensityContainer","TableDensity","density","setDensity","PAGE_SIZE_OPTIONS","TablePagination","pageCount","page","total","Select","canReset","pageSizeOptions","canPreviousPage","RoundIconButton","canNextPage","TableRow","prepareRow","getRowCharacteristics","renderRowSubComponent","isRowSubComponentAboveRow","temp","isActive","isInteractive","rowProps","getRowProps","isExpanded","isGrouped","cells","cell","cellIndex","expandedToggleProps","getToggleRowExpandedProps","cellProps","getCellProps","align","isAggregated","isPlaceholder","DEFAULT_LOAD_MORE","Table","loading","NoDataComponent","noDataComponent","renderHeaderGroups","onRowClick","rawRowsHeight","virtualized","getTableProps","getTableBodyProps","headerGroups","hasPagination","pageOptions","hasDensity","gridTemplateColumns","hasRowSelectPlugin","some","flatColumns","flatMap","screenWidth","window","innerWidth","realMaxWidth","join","useGridTemplateColumns","virtualState","config","scrollContainerRef","dimensions","setDimensions","skip","infiniteScroll","isEmpty","clientWidth","itemSize","handleResize","addEventListener","removeEventListener","initialized","useVirtualize","currentRows","isItemLoaded","VirtualRow","rowIndex","rawStyle","loadingRowComponent","tableBodyRef","scrollbarWidth","offsetWidth","useScrollbarWidth","firstElementChild","currentTableReElem","setGlobalFilter","headerGroup","headerGroupIndex","getHeaderGroupProps","col","headerCellIndex","headerProps","getHeaderProps","getSortByToggleProps","renderHeader","isBig","isSorted","isSortedDesc","canFilter","itemCount","loadMoreItems","loadMore","onItemsRendered","OPTIONS_WITHOUT_NULL","IconCellContainer","inputStyle","textColor","IconContainer","LabelContainer","IconCell","large","IMAGE_ZOOM_SIZE","img","ActionTypes","Error","Set","ParseCellError","NewCell","BasActionBar","ChangedCell","NOT_A_NUMBER","INVALID","REQUIRED","PivotTableStandard","tableData","tableColumns","tableOptions","tablePlugins","showGroupedTable","groupOptions","tableInstance","PivotTable","count","fill","__","idx","descData","dueReminder","dueComplete","closed","idList","idListDetails","idBoardDetails","idLabels","idLabelsDetails","idMembers","idMembersDetails","idMembersVoted","idChecklists","idChecklistsDetails","idRelatedDocs","idRelatedDocsDetails","isTemplate","pluginData","customFieldItems","createdBy","createdTime","pvtData","toolbarConfig","kanbanConfig","tableConfig","tableKey","currentPvtView","processData","firstView","retView","groupField","dataFields","kanbanColumnsDefinitions","unshift","groupHeader","groupByVal","getTableColumnsForKanban","rowData","tableDefaultColumns","field","getPivotTableStandardColumns","groupBy","useGroupBy","useExpanded","tableProps","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9dfb0c6c.chunk.js","sourcesContent":["import blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\nimport indigo from '@material-ui/core/colors/indigo';\nimport orange from '@material-ui/core/colors/orange';\nimport purple from '@material-ui/core/colors/purple';\nimport red from '@material-ui/core/colors/red';\nimport yellow from '@material-ui/core/colors/yellow';\n\nexport const COLUMN_WIDTH = 280;\nconst RECORD_SHADE = 200;\n\nexport const RecordColor = {\n  Purple: purple[RECORD_SHADE],\n  Indigo: indigo[RECORD_SHADE],\n  Blue: blue[RECORD_SHADE],\n  Green: green[RECORD_SHADE],\n  Yellow: yellow[RECORD_SHADE],\n  Orange: orange[RECORD_SHADE],\n  Red: red[RECORD_SHADE],\n  Default: '',\n};\n\nexport const DARK_RECORD_SHADE = 500;\n\nexport const DarkRecordColor = {\n  Purple: purple[DARK_RECORD_SHADE],\n  Indigo: indigo[DARK_RECORD_SHADE],\n  Blue: blue[DARK_RECORD_SHADE],\n  Green: green[DARK_RECORD_SHADE],\n  Yellow: yellow[700],\n  Orange: orange[DARK_RECORD_SHADE],\n  Red: red[DARK_RECORD_SHADE],\n  Default: '',\n};\n\nconst COLUMN_SHADE = 100;\n\nexport const ColumnColor = {\n  Purple: purple[COLUMN_SHADE],\n  Indigo: indigo[COLUMN_SHADE],\n  Blue: blue[COLUMN_SHADE],\n  Green: green[COLUMN_SHADE],\n  Yellow: yellow[COLUMN_SHADE],\n  Orange: orange[COLUMN_SHADE],\n  Red: red[COLUMN_SHADE],\n  Default: '',\n};\n\nexport const DARK_COLUMN_SHADE = 400;\n\nexport const DarkColumnColor = {\n  Purple: purple[DARK_COLUMN_SHADE],\n  Indigo: indigo[DARK_COLUMN_SHADE],\n  Blue: blue[DARK_COLUMN_SHADE],\n  Green: green[DARK_COLUMN_SHADE],\n  Yellow: yellow[700],\n  Orange: orange[DARK_COLUMN_SHADE],\n  Red: red[DARK_COLUMN_SHADE],\n  Default: '',\n};\n","import React from \"react\";\nimport MuiRadio, { RadioProps as MuiRadioProps } from \"@material-ui/core/Radio\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    color: (props: any) => props.color,\n  },\n  checked: {},\n}));\n\ntype RadioProps = Omit<MuiRadioProps, \"color\"> & { color?: string };\n\nconst Radio = React.forwardRef((props: RadioProps, ref: any) => {\n  const { color, ...rest } = props;\n\n  const classes = useStyles({ color });\n\n  return (\n    <MuiRadio\n      ref={ref}\n      color=\"default\"\n      classes={color ? classes : {}}\n      {...rest}\n    />\n  );\n});\n\nexport default Radio;\n","import Radio from \"./Radio\";\n\nexport default Radio;\n","import { useFormik } from 'formik';\nimport React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Radio from '../../components/Radio';\nimport { ColumnColor } from '../../constants';\nimport type { Column } from '../../types';\n\ntype ColumnFormProps = {\n  column?: Partial<Column>;\n  onSubmit: any;\n  onCancel: any;\n  disabled?: boolean;\n  formTitle?: string;\n  enableWipLimit?: boolean;\n};\n\nexport function ColumnForm(props: ColumnFormProps) {\n  const {\n    column,\n    disabled,\n    formTitle = '添加分组 (任务清单)',\n    onSubmit,\n    onCancel,\n    enableWipLimit = false,\n  } = props;\n\n  const { values, errors, handleChange, handleSubmit } = useFormik({\n    initialValues: Object.assign(\n      {\n        listGroupTitle: '',\n        desc: '',\n        color: '',\n        wipEnabled: false,\n        wipLimit: 0,\n      },\n      column,\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.listGroupTitle) {\n        // errors.title = t('titleRequired');\n        errors.listGroupTitle = '* 必填项';\n      }\n\n      if (values.wipEnabled && !values.wipLimit) {\n        // errors.wipLimit = t('limitRequired');\n        errors.wipLimit = '* 必填项 卡片数量上限';\n      }\n\n      return errors;\n    },\n  });\n\n  const handleWipLimitChange = React.useCallback(\n    (e) => {\n      e.persist();\n      const { value } = e.target;\n      const integerRegex = /^[0-9]*$/;\n      if (value && !integerRegex.test(value)) {\n        return;\n      }\n\n      handleChange(e);\n    },\n    [handleChange],\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography gutterBottom variant='h6'>\n            {formTitle}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name='listGroupTitle'\n            label={'分组名称'}\n            value={values.listGroupTitle}\n            error={Boolean(errors.listGroupTitle)}\n            helperText={errors.listGroupTitle}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            rows={3}\n            name='desc'\n            label={'分组描述或任务清单描述'}\n            value={values.desc}\n            error={Boolean(errors.desc)}\n            helperText={errors.desc}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {enableWipLimit ? (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={values.wipEnabled}\n                  onChange={handleChange}\n                  name='wipEnabled'\n                />\n              }\n              label={'wipLimitEnabled'}\n            />\n          ) : null}\n        </Grid>\n        <Grid item xs={12}>\n          {enableWipLimit ? (\n            <TextField\n              name='wipLimit'\n              label={'wipLimit'}\n              value={values.wipLimit}\n              error={Boolean(errors.wipLimit)}\n              helperText={errors.wipLimit}\n              disabled={disabled || !values.wipEnabled}\n              onChange={handleWipLimitChange}\n            />\n          ) : null}\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl component='fieldset'>\n            <FormLabel component='legend'>背景色</FormLabel>\n            <RadioGroup\n              row\n              aria-label='background'\n              name='color'\n              value={values.color}\n              onChange={handleChange}\n            >\n              {Object.keys(ColumnColor).map((key) => {\n                const colorKey = key as keyof typeof ColumnColor;\n                return (\n                  <Radio\n                    key={colorKey}\n                    value={colorKey}\n                    color={ColumnColor[colorKey]}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant='outlined' disabled={disabled} onClick={onCancel}>\n            取消\n          </Button>\n          &emsp;\n          <Button\n            type='submit'\n            color='primary'\n            variant='contained'\n            disabled={disabled}\n          >\n            添加\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default ColumnForm;\n","import ColumnForm from \"./ColumnForm\";\n\nexport default ColumnForm;\n","import { useFormik } from 'formik';\nimport React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Radio from '../../components/Radio';\nimport { RecordColor } from '../../constants';\nimport type { Record } from '../../types';\n\ntype RecordFormProps = {\n  record?: Record;\n  onSubmit: any;\n  onCancel?: any;\n  disabled?: boolean;\n  formTitle?: string;\n};\n\nexport function RecordForm(props: RecordFormProps) {\n  const {\n    record,\n    disabled,\n    formTitle = '添加任务卡片',\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const { values, errors, handleChange, handleSubmit } = useFormik({\n    initialValues: Object.assign(\n      {\n        cardTitle: '',\n        desc: '',\n        color: '',\n      },\n      record,\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.cardTitle) {\n        errors.cardTitle = '* 必填项';\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography gutterBottom variant='h6'>\n            {formTitle}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name='cardTitle'\n            label={'任务名称'}\n            value={values.cardTitle}\n            error={Boolean(errors.cardTitle)}\n            helperText={errors.cardTitle}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            rows={3}\n            name='desc'\n            label={'任务描述(选填)'}\n            value={values.desc}\n            error={Boolean(errors.desc)}\n            helperText={errors.desc}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl component='fieldset'>\n            <FormLabel component='legend'>背景色</FormLabel>\n            <RadioGroup\n              row\n              aria-label='background'\n              name='color'\n              value={values.color}\n              onChange={handleChange}\n            >\n              {Object.keys(RecordColor).map((key) => {\n                const colorKey = key as keyof typeof RecordColor;\n                return (\n                  <Radio\n                    key={colorKey}\n                    value={colorKey}\n                    color={RecordColor[colorKey]}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant='outlined' disabled={disabled} onClick={onCancel}>\n            取消\n          </Button>\n          &emsp;\n          <Button\n            type='submit'\n            color='primary'\n            variant='contained'\n            disabled={disabled}\n          >\n            添加\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default RecordForm;\n","import RecordForm from \"./RecordForm\";\n\nexport default RecordForm;\n","import type { Column } from '../types';\n\nconst DARK_MODE = 'dark_mode';\nconst COLUMNS = 'columns';\n\nexport function getItem(key: string) {\n  return JSON.parse(localStorage.getItem(key)!);\n}\n\nexport function setItem(key: string, value: any) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value: boolean) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setColumns(value: Column[]) {\n  return setItem(COLUMNS, value);\n}\n\n/** 从localStorage中读取看板数据 */\nexport function getColumns() {\n  return getItem(COLUMNS);\n}\n\nconst StorageService = {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  getColumns,\n  setColumns,\n};\n\nexport default StorageService;\n","import React from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  blue,\n  blueGrey,\n  brown,\n  green,\n  indigo,\n  lightGreen,\n  orange,\n  purple,\n  red,\n  yellow,\n} from '@material-ui/core/colors';\nimport { MuiThemeProvider, Theme, createTheme } from '@material-ui/core/styles';\n\nimport StorageService from '../services/StorageService';\n\ndeclare module '@material-ui/core/styles/createTheme' {\n  interface Theme {\n    custom?: any;\n  }\n  interface ThemeOptions {\n    custom?: any;\n  }\n}\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {\n  darkTheme?: boolean;\n};\n\nconst pastelCode = 50;\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    props.darkTheme || StorageService.getDarkMode(),\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean | undefined) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createTheme({\n    palette: {\n      // primary: darkTheme ? lightGreen : brown,\n      // secondary: blueGrey,\n      type: darkTheme ? 'dark' : 'light',\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          cursor: 'pointer',\n          padding: 8,\n        },\n      },\n      MuiDivider: {\n        root: {\n          backgroundColor: 'rgba(255,255,255,0.5)',\n        },\n      },\n    },\n    props: {\n      MuiDivider: {\n        light: darkTheme ? false : true,\n      },\n      MuiTextField: {\n        variant: 'outlined',\n        margin: 'dense',\n        fullWidth: true,\n      },\n      MuiButton: {\n        size: 'small',\n      },\n      MuiRadio: {\n        size: 'small',\n      },\n    },\n    custom: {\n      colors: {\n        pastel: {\n          violet: purple[pastelCode],\n          indigo: indigo[pastelCode],\n          blue: blue[pastelCode],\n          green: green[pastelCode],\n          yellow: yellow[pastelCode],\n          orange: orange[pastelCode],\n          red: red[pastelCode],\n        },\n      },\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      darkTheme,\n      handleToggleDarkTheme,\n    }),\n    [darkTheme, handleToggleDarkTheme],\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        {/* <CssBaseline /> */}\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import cx from \"clsx\";\nimport localeCN from \"date-fns/locale/zh-CN\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  RadioGroup,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport EventAvailableOutlinedIcon from \"@material-ui/icons/EventAvailableOutlined\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    dueDatePicker: {\n      width: 120,\n      marginRight: \"2rem\",\n      \"& .MuiInputBase-input\": {\n        border: \"none\",\n        outline: \"none\",\n        boxShadow: \"none\",\n      },\n    },\n    visibilityHidden: {\n      visibility: \"hidden\",\n    },\n  })\n);\n\nexport function ActionDueDate(props) {\n  const classes = useStyles();\n\n  const {\n    setIsSelectingDueDate,\n    dueDateContent,\n    selectedDueDate,\n    handleDueDateChange,\n    isSelectingDueDate,\n  } = props;\n\n  return (\n    <>\n      <Button\n        variant=\"text\"\n        // className={`${\n        //   isSelectingDueDate ? '' : classes.taskCommonActionsBtn\n        // }`}\n        startIcon={<EventAvailableOutlinedIcon />}\n        onClick={() => setIsSelectingDueDate(true)}\n      >\n        截止日期 &ensp; {dueDateContent}\n      </Button>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={localeCN}>\n        <DatePicker\n          open={isSelectingDueDate}\n          onOpen={() => setIsSelectingDueDate(true)}\n          onClose={() => setIsSelectingDueDate(false)}\n          value={selectedDueDate}\n          onChange={handleDueDateChange}\n          disableToolbar\n          variant=\"inline\"\n          format=\"yyyy-MM-dd\"\n          id=\"date-picker-inline\"\n          className={cx(classes.dueDatePicker, {\n            [classes.visibilityHidden]: !isSelectingDueDate,\n          })}\n          // label='选择截止日期/到期时间'\n        />\n      </MuiPickersUtilsProvider>\n      {isSelectingDueDate ? (\n        <Button\n          variant=\"text\"\n          // startIcon={<EventAvailableOutlinedIcon />}\n          onClick={() => {\n            setIsSelectingDueDate(true);\n            console.log(\";; 清除日期\");\n          }}\n        >\n          清除日期\n        </Button>\n      ) : null}\n    </>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  RadioGroup,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport FaceIcon from '@material-ui/icons/Face';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PersonAddDisabledOutlinedIcon from '@material-ui/icons/PersonAddDisabledOutlined';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport SortOutlinedIcon from '@material-ui/icons/SortOutlined';\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    taskMembersList: {\n      width: 240,\n    },\n  }),\n);\n\nexport function ActionTaskMembers(props) {\n  const classes = useStyles();\n\n  const {\n    handleSelectingTaskMembersPanelOpen,\n    taskMembers,\n    taskMembersText,\n    isSelectingTaskMembersPanelOpen,\n    taskMembersAnchorEl,\n    handleSelectingTaskMembersPanelClose,\n    handleSetTaskMembersToEmpty,\n    availableUsers,\n    handleToggleSelectTaskMember,\n  } = props;\n\n  return (\n    <>\n      <Button\n        onClick={handleSelectingTaskMembersPanelOpen}\n        variant='text'\n        startIcon={\n          !taskMembers || (taskMembers && taskMembers.length < 1) ? (\n            <PersonOutlineOutlinedIcon />\n          ) : (\n            <FaceIcon />\n          )\n        }\n      >\n        {taskMembersText}\n      </Button>\n      <Popover\n        open={isSelectingTaskMembersPanelOpen}\n        onClose={handleSelectingTaskMembersPanelClose}\n        id={`idMembersPopover`}\n        anchorEl={taskMembersAnchorEl}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <List dense={true} className={classes.taskMembersList}>\n          <ListItem\n            selected={!taskMembers || (taskMembers && taskMembers.length) === 0}\n            onClick={handleSetTaskMembersToEmpty}\n            button\n            key=''\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <PersonAddDisabledOutlinedIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary='无负责人' />\n            {!taskMembers || (taskMembers && taskMembers.length === 0) ? (\n              <ListItemSecondaryAction>\n                <IconButton\n                  onClick={handleSetTaskMembersToEmpty}\n                  edge='end'\n                  aria-label='选为负责人'\n                >\n                  <CheckIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            ) : null}\n          </ListItem>\n          {availableUsers.map((user) => {\n            const { id: userId, username, avatar } = user;\n            const isCurrUserSelected =\n              taskMembers && taskMembers.indexOf(userId) !== -1;\n            return (\n              <ListItem\n                button\n                key={userId}\n                selected={isCurrUserSelected}\n                onClick={() => {\n                  handleToggleSelectTaskMember(userId);\n                }}\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <PersonOutlineOutlinedIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={username} />\n                {isCurrUserSelected ? (\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      disableRipple\n                      edge='end'\n                      aria-label='选中为负责人'\n                      onClick={() => {\n                        handleToggleSelectTaskMember(userId);\n                      }}\n                    >\n                      <CheckIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                ) : null}\n              </ListItem>\n            );\n          })}\n        </List>\n      </Popover>\n    </>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  RadioGroup,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    configItemFormControl: {\n      width: '100%',\n      // paddingBottom: 0,\n    },\n    configItemTitle: {\n      margin: '8px 0 4px',\n    },\n\n    subTaskCheckbox: {\n      '& svg': {\n        fontSize: '1.3rem',\n      },\n      '&+span': {\n        color: theme.palette.text.secondary,\n      },\n    },\n  }),\n);\n\nexport function ItemChecklist(props) {\n  const classes = useStyles();\n\n  const {\n    doesSubTaskListExist,\n    subTasksChecklist,\n    handleSubTaskChecklistChange,\n    isAddingSubTask,\n    newSubTaskChecklistItemName,\n    handleInputSubTaskChecklistItemName,\n    handleUpdateSubTasksData,\n    handleAddSubTaskChecklistItem,\n  } = props;\n\n  return (\n    <>\n      <FormControl\n        component='fieldset'\n        className={classes.configItemFormControl}\n      >\n        <FormLabel component='legend' className={classes.configItemTitle}>\n          子任务/待办事项\n        </FormLabel>\n        <FormGroup>\n          {doesSubTaskListExist\n            ? subTasksChecklist.map((task) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={task.state === 'done'}\n                      onChange={handleSubTaskChecklistChange}\n                      name={task.id}\n                      disableRipple\n                      color='primary'\n                      className={classes.subTaskCheckbox}\n                    />\n                  }\n                  label={task.name}\n                  key={task.id}\n                />\n              ))\n            : null}\n        </FormGroup>\n      </FormControl>\n      <Grid item xs={12}>\n        {isAddingSubTask ? (\n          <>\n            <TextField\n              value={newSubTaskChecklistItemName}\n              onChange={handleInputSubTaskChecklistItemName}\n              id='newSubTaskChecklistItemName'\n              label='输入子任务名称或待办事件名称'\n            />\n            <Button\n              onClick={handleUpdateSubTasksData}\n              variant='contained'\n              color='primary'\n              // className={classes.button}\n              startIcon={<AddIcon />}\n            >\n              添加子任务\n            </Button>\n          </>\n        ) : (\n          <Button\n            onClick={handleAddSubTaskChecklistItem}\n            variant='text'\n            color='default'\n            // className={classes.button}\n            startIcon={<AddIcon />}\n          >\n            添加子任务\n          </Button>\n        )}\n      </Grid>\n    </>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  RadioGroup,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\nimport FaceIcon from '@material-ui/icons/Face';\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    relatedDocsItemIcon: {\n      opacity: 0.75,\n      minWidth: 24,\n    },\n    relatedDocsDocIcon: {\n      fontSize: '1.1rem',\n    },\n    relatedDocListItem: {\n      // paddingLeft: theme.spacing(2),\n      padding: '0 0 0 0',\n    },\n    textSecondary: {\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nexport function ItemRelatedDocs(props) {\n  const classes = useStyles();\n\n  const {\n    docName,\n    handleDocNameChange,\n    handleAddRelatedDocs,\n    doesRelatedDocsExist,\n    relatedDocs,\n  } = props;\n\n  return (\n    <>\n      <TextField\n        id='inputAddNewDocOrLinkedDoc'\n        // label='先输入文档名，然后选择创建新文档或链接已有文档'\n        label='输入文档名'\n        value={docName}\n        onChange={handleDocNameChange}\n      />\n      <Button\n        onClick={handleAddRelatedDocs}\n        // disabled\n        variant='contained'\n        color='primary'\n        startIcon={<AddIcon />}\n        disableRipple\n        disableElevation\n      >\n        创建并添加文档\n      </Button>\n      &emsp;\n      <Button\n        disabled\n        variant='contained'\n        // color='default'\n        // className={classes.button}\n        startIcon={<LinkIcon />}\n      >\n        添加已有文档的链接\n      </Button>\n      <List aria-label='相关文档列表'>\n        {doesRelatedDocsExist\n          ? relatedDocs[0]['docList'].map((doc) => {\n              const { docId, docTitle } = doc;\n\n              return (\n                <ListItem\n                  onClick={(e) => e.stopPropagation()}\n                  key={docId}\n                  button\n                  disableGutters\n                  className={classes.relatedDocListItem}\n                >\n                  <ListItemIcon className={classes.relatedDocsItemIcon}>\n                    <DescriptionOutlinedIcon\n                      className={classes.relatedDocsDocIcon}\n                    />\n                  </ListItemIcon>\n                  <ListItemText>\n                    {/* <Link\n                            href={`/doc2/${\n                              Math.floor(Math.random() * (20000 - 1 + 1)) + 1\n                            }`}\n                          > */}\n                    <a className={classes.textSecondary} title={docTitle}>\n                      {docTitle.length > 120\n                        ? docTitle.slice(0, 120) + '...'\n                        : docTitle}\n                    </a>\n                    {/* </Link> */}\n                  </ListItemText>\n                </ListItem>\n              );\n            })\n          : null}\n      </List>\n    </>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  RadioGroup,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\nimport FaceIcon from '@material-ui/icons/Face';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PersonAddDisabledOutlinedIcon from '@material-ui/icons/PersonAddDisabledOutlined';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SortOutlinedIcon from '@material-ui/icons/SortOutlined';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport type { Record } from '../../types';\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    addTagBtn: {\n      // 若宽度过小，按钮上的文本会换行\n      width: '12rem',\n      height: 36,\n      margin: '8px 0px',\n    },\n    addTagBtnML: {\n      marginLeft: theme.spacing(2),\n    },\n    tagBtn: {\n      backgroundColor: '#d4c5f9',\n      textTransform: 'none',\n      // backgroundColor: '#a2eeef',\n      '&:hover': {\n        backgroundColor: '#d4c5f9',\n      },\n    },\n  }),\n);\n\nexport function ItemTags(props) {\n  const classes = useStyles();\n\n  const {\n    tags,\n    isAddingNewTag,\n    newTagName,\n    handleInputNewTagName,\n    handleUpdateTagsData,\n    handleStartAddNewTag,\n  } = props;\n\n  return (\n    <>\n      {tags\n        ? tags.map((tag) => {\n            const { name: tagName } = tag;\n            return (\n              <Chip\n                label={tagName}\n                onClick={() => {}}\n                onDelete={() => {}}\n                className={classes.tagBtn}\n                key={tagName}\n              />\n            );\n          })\n        : null}\n      {isAddingNewTag ? (\n        <>\n          <TextField\n            value={newTagName}\n            onChange={handleInputNewTagName}\n            id='inputAddNewTag'\n            label='输入标签名'\n          />\n          <Button\n            onClick={handleUpdateTagsData}\n            variant='contained'\n            color='primary'\n            className={cx(classes.addTagBtn, {\n              [classes.addTagBtnML]: true,\n            })}\n            startIcon={<AddIcon />}\n          >\n            添加标签\n          </Button>\n        </>\n      ) : (\n        <Button\n          onClick={handleStartAddNewTag}\n          variant='outlined'\n          className={cx(classes.addTagBtn, {\n            [classes.addTagBtnML]: tags && tags.length > 0,\n          })}\n          startIcon={<AddIcon />}\n        >\n          添加标签\n        </Button>\n      )}\n    </>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n\nexport function RecordTitle(props) {\n  const {\n    cardTitle,\n    isEditingCardTitle,\n    handleCardTitleChange,\n    setIsEditingCardTitle,\n  } = props;\n\n  return isEditingCardTitle ? (\n    <TextField\n      value={cardTitle}\n      onChange={handleCardTitleChange}\n      name='cardTitle'\n      label={'名称或标题'}\n      multiline={cardTitle.length > 20 ? true : false}\n      onBlur={() => {\n        setIsEditingCardTitle(false);\n      }}\n    />\n  ) : (\n    <Typography\n      onClick={() => {\n        setIsEditingCardTitle(true);\n      }}\n      gutterBottom\n      variant='h6'\n    >\n      {cardTitle}\n    </Typography>\n  );\n}\n","import cx from 'clsx';\nimport { useFormik } from 'formik';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Avatar,\n  Button,\n  Checkbox,\n  Chip,\n  Collapse,\n  Container,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  RadioGroup,\n  Select,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\nimport FaceIcon from '@material-ui/icons/Face';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PersonAddDisabledOutlinedIcon from '@material-ui/icons/PersonAddDisabledOutlined';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SortOutlinedIcon from '@material-ui/icons/SortOutlined';\n\nimport Radio from '../../components/Radio';\nimport { RecordColor } from '../../constants';\nimport type { Record } from '../../types';\nimport { ActionDueDate } from './ActionDueDate';\nimport { ActionTaskMembers } from './ActionTaskMembers';\nimport { ItemChecklist } from './ItemChecklist';\nimport { ItemRelatedDocs } from './ItemRelatedDocs';\nimport { ItemTags } from './ItemTags';\nimport { RecordTitle } from './RecordTitle';\nimport { generateUserList } from './mockData';\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    configItemFormControl: {\n      width: '100%',\n    },\n    configItemTitle: {\n      margin: '8px 0 4px',\n    },\n    cardDesc: {\n      color: theme.palette.text.secondary,\n    },\n    tagsSpacing: {\n      '& > *': {\n        margin: theme.spacing(0.8),\n      },\n    },\n  }),\n);\n\ntype RecordDetailsProps = {\n  record?: Record;\n  /** 提交后会更新看板数据 */\n  onSubmit: Function;\n  onSubmitDataWithDialogOpen?: Function;\n  onCancel?: Function;\n  forceBoardUpdate?: Function;\n  disabled?: boolean;\n  formTitle?: string;\n};\n\nexport function RecordDetails(props: RecordDetailsProps) {\n  const classes = useStyles();\n  const [__, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  const {\n    record,\n    disabled,\n    formTitle = '卡片详情',\n    onSubmit,\n    onSubmitDataWithDialogOpen,\n    onCancel,\n  } = props;\n  const {\n    cardTitle: cardTitleProp,\n    cardTitleEmoji,\n    desc,\n    status,\n    priority,\n    createdAt,\n    cardLabels,\n    cardMembers,\n    cardChecklists,\n    cardRelatedDocs,\n    cardDueTime,\n  } = record;\n\n  const [isEditingCardDesc, setIsEditingCardDesc] = useState(false);\n\n  /** 更新卡片数据到看板顶层，同时不关闭卡片弹窗 */\n  const updateCardData = useCallback(\n    (subField: Partial<Record>) => {\n      onSubmitDataWithDialogOpen({ ...record, ...subField });\n      forceUpdate();\n    },\n    [onSubmitDataWithDialogOpen, record],\n  );\n\n  // todo 重构后删除掉\n  const {\n    values,\n    errors,\n    handleChange: handleCardFormChange,\n    handleSubmit: handleCardFormSubmit,\n  } = useFormik({\n    initialValues: Object.assign(\n      {\n        cardTitle: '',\n        desc: '',\n        color: '',\n      },\n      record,\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.cardTitle) {\n        errors.cardTitle = '* 必填项';\n      }\n      return errors;\n    },\n  });\n\n  const [isEditingCardTitle, setIsEditingCardTitle] = useState(false);\n  const [cardTitle, setCardTitle] = useState(cardTitleProp);\n  const handleInputCardTitle = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCardTitle(event.target.value);\n      // if (!event.target.value || !event.target.value.trim()) return;\n      // todo 显示不能为空的提示信息\n      updateCardData({ cardTitle: event.target.value });\n    },\n    [updateCardData],\n  );\n\n  const availableUsers = generateUserList(5);\n  const [taskMembersAnchorEl, setTaskMembersAnchorEl] =\n    useState<HTMLButtonElement | null>(null);\n  const handleSelectingTaskMembersPanelOpen = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setTaskMembersAnchorEl(event.currentTarget);\n    },\n    [],\n  );\n  const handleSelectingTaskMembersPanelClose = useCallback(() => {\n    setTaskMembersAnchorEl(null);\n  }, []);\n  const isSelectingTaskMembersPanelOpen = Boolean(taskMembersAnchorEl);\n  // todo use taskMembers instead of selectedTaskMembers\n  const [selectedTaskMembers, setSelectedTaskMembers] = useState<string[]>([]);\n  const handleToggleSelectTaskMember = useCallback(\n    (userId: string) => {\n      setSelectedTaskMembers((prev) => {\n        if (prev.length === 0 || (prev.length > 0 && prev[0] !== userId)) {\n          updateCardData({\n            // taskMembers: taskMembers\n            //   ? [userId, ...taskMembers.slice(1)]\n            //   : [userId],\n            cardMembers: [\n              {\n                id: userId,\n                username: 'uptonking1',\n                fullName: 'uptonking',\n                avatarUrl: '',\n                memberType: 'normal',\n              },\n            ],\n          });\n        }\n        handleSelectingTaskMembersPanelClose();\n\n        if (prev.indexOf(userId) !== -1) {\n          // 若已选中，则取消\n          return prev.filter((uid) => uid !== userId);\n        }\n        // return [...prev, userId];\n        return [userId];\n      });\n    },\n    [handleSelectingTaskMembersPanelClose, updateCardData],\n  );\n  const handleSetTaskMembersToEmpty = useCallback(() => {\n    updateCardData({\n      cardMembers: [],\n    });\n    setSelectedTaskMembers([]);\n    handleSelectingTaskMembersPanelClose();\n  }, [handleSelectingTaskMembersPanelClose, updateCardData]);\n\n  const taskMembersText = useMemo(() => {\n    let retText = '无负责人';\n    if (cardMembers && cardMembers.length > 0) {\n      const firstMember = availableUsers.find(\n        (u) => u.id === cardMembers[0].id,\n      );\n      if (firstMember) {\n        retText = firstMember.fullName || firstMember.username;\n      }\n    }\n    return retText;\n  }, [availableUsers, cardMembers]);\n\n  const [isSelectingDueDate, setIsSelectingDueDate] = useState(false);\n  // todo 传入的截止日期应该作为初始值\n  const [selectedDueDate, setSelectedDueDate] = useState<Date | null>();\n  // new Date('2014-08-18T21:11:54'),\n  // new Date(),\n  const handleDueDateChange = (date: Date | null) => {\n    if (date instanceof Date && !isNaN(date as any)) {\n      // move the time away from midnight, opposite direction of utc offset\n      const offset = -date.getTimezoneOffset();\n      // using trunc() because there could be negative offsets, too.\n      date.setHours(Math.trunc(offset / 60), offset % 60);\n    }\n    setSelectedDueDate(date);\n    updateCardData({ cardDueTime: date.toISOString().slice(0, 10) });\n    setIsSelectingDueDate(false);\n  };\n  const dueDateContent = useMemo(() => {\n    let dueDateContent = '';\n    if (cardDueTime) {\n      dueDateContent = cardDueTime;\n    }\n    if (selectedDueDate) {\n      dueDateContent = selectedDueDate.toISOString().slice(0, 10);\n    }\n    if (isSelectingDueDate) {\n      dueDateContent = '';\n    }\n    return dueDateContent;\n  }, [isSelectingDueDate, selectedDueDate, cardDueTime]);\n\n  const doesSubTaskListExist =\n    cardChecklists &&\n    cardChecklists.length &&\n    cardChecklists[0]['checkItems'] &&\n    cardChecklists[0]['checkItems'].length > 0;\n  let subTasksChecklist = [];\n  if (doesSubTaskListExist) {\n    // subTasksChecklist = convertSubTasksDataToViewChecklist(cardChecklists);\n    subTasksChecklist = cardChecklists[0]['checkItems'];\n  }\n  const handleSubTaskChecklistChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      // console.log(';;checkbox-click ', event.target.name, event.target);\n      const latestSubTaskList = {\n        ...cardChecklists[0],\n        checkItems: cardChecklists[0]['checkItems'].map((task) =>\n          task.id === event.target.name\n            ? {\n                ...task,\n                state: task.state === 'done' ? 'todo' : 'done',\n              }\n            : task,\n        ),\n      };\n      // console.log(';;latestSubTaskList ', latestSubTaskList.records);\n      updateCardData({ cardChecklists: [latestSubTaskList] });\n    },\n    [cardChecklists, updateCardData],\n  );\n  const [isAddingChecklistItem, setIsAddingChecklistItem] = useState(false);\n  const [newChecklistItemName, setNewChecklistItemName] = useState('');\n  const handleStartAddingChecklistItem = useCallback(() => {\n    setIsAddingChecklistItem(true);\n    setNewChecklistItemName('');\n  }, []);\n  const handleInputChecklistItemName = useCallback((event) => {\n    const itemName = event.target.value;\n    setNewChecklistItemName(itemName);\n  }, []);\n  const handleUpdateChecklistData = useCallback(() => {\n    let _subTaskList = {};\n    if (cardChecklists) {\n      _subTaskList = cardChecklists[0];\n    }\n    if (!_subTaskList['checkItems']) {\n      _subTaskList['checkItems'] = [];\n    }\n    const latestSubTaskList = {\n      ..._subTaskList,\n      checkItems: [\n        ..._subTaskList['checkItems'],\n        {\n          id: 'taskId-' + Math.random().toFixed(6),\n          name: newChecklistItemName,\n          state: 'todo',\n        },\n      ],\n    };\n    updateCardData({ cardChecklists: [latestSubTaskList] });\n\n    setIsAddingChecklistItem(false);\n  }, [newChecklistItemName, cardChecklists, updateCardData]);\n\n  const [isAddingNewTag, setIsAddingNewTag] = useState(false);\n  const [newTagName, setNewTagName] = useState('');\n  const handleInputNewTagName = useCallback((event) => {\n    setNewTagName(event.target.value);\n  }, []);\n  const handleStartAddingNewTag = useCallback(() => {\n    setIsAddingNewTag(true);\n    setNewTagName('');\n  }, []);\n  const handleUpdateTagsData = useCallback(() => {\n    let _tags = [];\n    if (cardLabels) {\n      _tags = cardLabels;\n    }\n    const latestTags = [\n      ..._tags,\n      {\n        id: 'idLabel' + Math.random(),\n        idBoard: 'idBoard',\n        name: newTagName,\n        color: 'purple',\n        // bgColor: '',\n      },\n    ];\n    updateCardData({ cardLabels: latestTags });\n\n    setIsAddingNewTag(false);\n  }, [newTagName, cardLabels, updateCardData]);\n\n  const doesRelatedDocsExist =\n    cardRelatedDocs &&\n    cardRelatedDocs.length > 0 &&\n    cardRelatedDocs[0]['docList'] &&\n    cardRelatedDocs[0]['docList'].length > 0;\n  const [docName, setDocName] = useState('');\n  const handleDocNameChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setDocName(event.target.value);\n    },\n    [],\n  );\n  const handleAddRelatedDocs = useCallback(() => {\n    if (!docName || !docName.trim()) return;\n    let _relatedDocs = {};\n    if (cardRelatedDocs) {\n      _relatedDocs = cardRelatedDocs[0];\n    }\n    if (!_relatedDocs['docList']) {\n      _relatedDocs['docList'] = [];\n    }\n    const latestRelatedDocs = {\n      ..._relatedDocs,\n      docList: [\n        ..._relatedDocs['docList'],\n        {\n          docId: 'docId-' + Math.random().toFixed(6),\n          docTitle: docName,\n          url: '',\n        },\n      ],\n    };\n\n    updateCardData({ cardRelatedDocs: [latestRelatedDocs] });\n  }, [docName, cardRelatedDocs, updateCardData]);\n  // console.log(';;selectedTaskMembers-len ', selectedTaskMembers.length);\n\n  return (\n    // <form onSubmit={handleCardFormSubmit}>\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <RecordTitle\n          cardTitle={cardTitle}\n          handleCardTitleChange={handleInputCardTitle}\n          isEditingCardTitle={isEditingCardTitle}\n          setIsEditingCardTitle={setIsEditingCardTitle}\n        />\n        <Divider />\n      </Grid>\n      <Grid item container xs={12}>\n        <Grid item xs={3}>\n          <ActionTaskMembers\n            handleSelectingTaskMembersPanelOpen={\n              handleSelectingTaskMembersPanelOpen\n            }\n            taskMembers={cardMembers}\n            taskMembersText={taskMembersText}\n            isSelectingTaskMembersPanelOpen={isSelectingTaskMembersPanelOpen}\n            taskMembersAnchorEl={taskMembersAnchorEl}\n            handleSelectingTaskMembersPanelClose={\n              handleSelectingTaskMembersPanelClose\n            }\n            handleSetTaskMembersToEmpty={handleSetTaskMembersToEmpty}\n            availableUsers={availableUsers}\n            handleToggleSelectTaskMember={handleToggleSelectTaskMember}\n          />\n        </Grid>\n        <Grid item xs={5}>\n          <ActionDueDate\n            setIsSelectingDueDate={setIsSelectingDueDate}\n            dueDateContent={dueDateContent}\n            selectedDueDate={selectedDueDate}\n            handleDueDateChange={handleDueDateChange}\n            isSelectingDueDate={isSelectingDueDate}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant='text'\n            // className={classes.taskCommonActionsBtn}\n            startIcon={<SortOutlinedIcon />}\n          >\n            优先级(未实现)\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl component='fieldset' className={classes.formControl}>\n          <FormLabel component='legend' className={classes.configItemTitle}>\n            标签\n          </FormLabel>\n          <Grid container className={classes.tagsSpacing}>\n            <ItemTags\n              tags={cardLabels}\n              isAddingNewTag={isAddingNewTag}\n              newTagName={newTagName}\n              handleInputNewTagName={handleInputNewTagName}\n              handleUpdateTagsData={handleUpdateTagsData}\n              handleStartAddNewTag={handleStartAddingNewTag}\n            />\n          </Grid>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl\n          component='fieldset'\n          className={classes.configItemFormControl}\n        >\n          <FormLabel\n            onClick={() => {\n              setIsEditingCardDesc(true);\n            }}\n            component='legend'\n            className={classes.configItemTitle}\n          >\n            任务描述或内容描述\n            {values.desc ? (\n              <IconButton aria-label='edit'>\n                <EditOutlinedIcon style={{ fontSize: '1rem' }} />\n              </IconButton>\n            ) : (\n              <IconButton aria-label='add'>\n                <AddIcon style={{ fontSize: '1rem' }} />\n              </IconButton>\n            )}\n          </FormLabel>\n          {isEditingCardDesc ? (\n            <TextField\n              value={values.desc}\n              onChange={handleCardFormChange}\n              onBlur={() => {\n                setIsEditingCardDesc(false);\n              }}\n              multiline\n              name='desc'\n              label={'内容描述'}\n              error={Boolean(errors.desc)}\n              helperText={errors.desc}\n              disabled={disabled}\n            />\n          ) : (\n            <Typography className={classes.cardDesc} gutterBottom>\n              {values.desc}\n            </Typography>\n          )}\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <ItemChecklist\n          doesSubTaskListExist={doesSubTaskListExist}\n          subTasksChecklist={subTasksChecklist}\n          handleSubTaskChecklistChange={handleSubTaskChecklistChange}\n          isAddingSubTask={isAddingChecklistItem}\n          newSubTaskChecklistItemName={newChecklistItemName}\n          handleInputSubTaskChecklistItemName={handleInputChecklistItemName}\n          handleUpdateSubTasksData={handleUpdateChecklistData}\n          handleAddSubTaskChecklistItem={handleStartAddingChecklistItem}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl component='fieldset' className={classes.formControl}>\n          <FormLabel component='legend' className={classes.configItemTitle}>\n            相关文档\n          </FormLabel>\n        </FormControl>\n        <ItemRelatedDocs\n          docName={docName}\n          handleDocNameChange={handleDocNameChange}\n          handleAddRelatedDocs={handleAddRelatedDocs}\n          doesRelatedDocsExist={doesRelatedDocsExist}\n          relatedDocs={cardRelatedDocs}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl component='fieldset'>\n          <FormLabel component='legend' className={classes.configItemTitle}>\n            卡片背景色(开发中)\n          </FormLabel>\n          <RadioGroup\n            row\n            aria-label='background'\n            name='color'\n            value={values.color}\n            onChange={handleCardFormChange}\n          >\n            {Object.keys(RecordColor).map((key) => {\n              const colorKey = key as keyof typeof RecordColor;\n              return (\n                <Radio\n                  key={colorKey}\n                  value={colorKey}\n                  color={RecordColor[colorKey]}\n                />\n              );\n            })}\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n    </Grid>\n    // </form>\n  );\n}\n\nexport default RecordDetails;\n","export function generateUserList(userCount) {\n  if (!userCount || userCount === 0) return [];\n\n  const retUsers = [];\n\n  for (let i = 0; i < userCount; i++) {\n    retUsers.push({\n      id: i,\n      username: i % 2 === 0 ? \"User Name\" + i : \"用户名\" + i,\n      fullName: i % 2 === 0 ? \"User Name\" + i : \"用户名\" + i,\n      avatar: \"avatar\",\n      avatarUrl: '',\n      memberType: 'normal',\n    });\n  }\n\n  return retUsers;\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport AlarmOutlinedIcon from '@material-ui/icons/AlarmOutlined';\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport SortOutlinedIcon from '@material-ui/icons/SortOutlined';\n\nimport type { Record } from '../../types';\n\nconst useStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    paper: {\n      minHeight: 80,\n      maxHeight: 480,\n      padding: '8px 0 8px 12px',\n      border: `1px solid rgba(15, 15, 15, 0.12)`,\n      '&:hover .cardMoreActionsIcon': {\n        visibility: 'visible',\n      },\n      '& .cardMoreActionsIcon': {\n        visibility: 'hidden',\n      },\n    },\n    paperNoBoder: {\n      border: 0,\n    },\n    description: {\n      color: theme.palette.text.secondary,\n      maxHeight: '5rem',\n      minHeight: '5rem',\n      overflow: 'hidden',\n      whiteSpace: 'pre-line',\n    },\n    cardTitle: {},\n    tagBtn: {\n      backgroundColor: '#eee8fd',\n      // backgroundColor: '#a2eeef',\n      textTransform: 'none',\n      '&:hover': {\n        backgroundColor: '#eee8fd',\n      },\n      marginRight: theme.spacing(0.5),\n      marginBottom: theme.spacing(0.5),\n    },\n    tagBtnFullPage: {\n      backgroundColor: '#d4c5f9',\n      '&:hover': {\n        backgroundColor: '#d4c5f9',\n      },\n    },\n    taskDueTimeBtn: {\n      backgroundColor: '#eef3fc',\n    },\n    subTaskListBtn: {\n      // backgroundColor: '#eef3fc',\n      color: theme.palette.text.secondary,\n    },\n    relatedDocsTitle: {\n      color: theme.palette.text.secondary,\n    },\n    relatedDocsItemIcon: {\n      opacity: 0.75,\n      minWidth: 24,\n      // fontSize: '1rem',\n    },\n    relatedDocsDocIcon: {\n      fontSize: '1rem',\n    },\n    relatedDocListItem: {\n      // paddingLeft: theme.spacing(2),\n      padding: '0 0 0 16px',\n    },\n    relatedDocsCollapseBtn: {\n      color: theme.palette.text.secondary,\n    },\n    cardBottomIconBtn: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      '&:hover': {\n        backgroundColor: '#fff',\n      },\n    },\n  }),\n);\n\ntype CardProps = {\n  record: Record;\n  className?: string;\n  style?: any;\n  innerRef?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  onDelete?: any;\n  onEdit?: any;\n  forceColumnUpdate?: Function;\n  kanbanVariant?: string;\n};\n\n/**\n * 看板中一个分组列面板上的一个卡片\n */\nexport function Card(props: CardProps) {\n  const classes = useStyles();\n\n  const {\n    record,\n    className,\n    innerRef,\n    style,\n    showEditAction,\n    showDeleteAction,\n    onDelete,\n    onEdit,\n    forceColumnUpdate,\n    kanbanVariant,\n    ...rest\n  } = props;\n  const {\n    cardTitle,\n    cardTitleEmoji,\n    desc,\n    status,\n    priority,\n    createdAt,\n    cardLabels,\n    cardMembers,\n    cardChecklists,\n    cardRelatedDocs,\n    cardDueTime,\n  } = record;\n\n  const handleEdit = useCallback(() => onEdit(record), [record, onEdit]);\n  const handleDelete = useCallback(() => onDelete(record), [record, onDelete]);\n\n  const doesSubTaskListExist =\n    cardChecklists &&\n    cardChecklists.length > 0 &&\n    cardChecklists[0]['checkItems'] &&\n    cardChecklists[0]['checkItems'].length > 0;\n  let cardSubTasksTotalCount = 0;\n  let cardSubTasksDoneCount = 0;\n  if (doesSubTaskListExist) {\n    cardSubTasksTotalCount = cardChecklists[0]['checkItems'].length;\n    cardChecklists[0]['checkItems'].forEach((task) => {\n      // console.log(';;subTask-record ', record);\n      if (task.state === 'done') {\n        cardSubTasksDoneCount++;\n      }\n    });\n  }\n  // console.log(';;cardSubTasksDoneCount ', cardSubTasksDoneCount);\n\n  const doesRelatedDocsExist =\n    cardRelatedDocs &&\n    cardRelatedDocs.length > 0 &&\n    cardRelatedDocs[0]['docList'] &&\n    cardRelatedDocs[0]['docList'].length > 0;\n  const [isRelatedDocsListOpen, setIsRelatedDocsListOpen] = useState(true);\n  const handleToggleRelatedDocsListOpen = useCallback((e) => {\n    setIsRelatedDocsListOpen((prev) => !prev);\n    e.stopPropagation();\n  }, []);\n\n  return (\n    <Paper\n      onClick={handleEdit}\n      elevation={0}\n      // elevation={1}\n      className={cx(\n        classes.paper,\n        { [classes.paperNoBoder]: kanbanVariant === 'fullPage' },\n        className,\n      )}\n      style={style}\n      ref={innerRef}\n      {...rest}\n    >\n      <Grid container spacing={1}>\n        <Grid item container alignItems='center' justifyContent='space-between'>\n          <Box display='flex' style={{ padding: `12px 12px 12px 8px` }}>\n            <Typography title={cardTitle} className={classes.cardTitle}>\n              {cardTitleEmoji && cardTitleEmoji.trim()\n                ? cardTitleEmoji + ' '\n                : null}\n              {cardTitle}\n            </Typography>\n          </Box>\n        </Grid>\n\n        {cardLabels && cardLabels.length > 0 ? (\n          <Grid item container>\n            <Grid item>\n              {cardLabels.map((tag) => {\n                const { name } = tag;\n                return name && name.trim() ? (\n                  <Button\n                    onClick={(e) => e.stopPropagation()}\n                    variant='contained'\n                    className={cx(classes.tagBtn, {\n                      [classes.tagBtnFullPage]: kanbanVariant === 'fullPage',\n                    })}\n                    disableElevation\n                    disableRipple\n                    key={name}\n                  >\n                    {name}\n                  </Button>\n                ) : null;\n              })}\n            </Grid>\n          </Grid>\n        ) : null}\n\n        {cardDueTime || doesSubTaskListExist ? (\n          <Grid item container>\n            {cardDueTime ? (\n              <Grid item>\n                <Button\n                  onClick={(e) => e.stopPropagation()}\n                  variant='contained'\n                  className={classes.taskDueTimeBtn}\n                  startIcon={<AlarmOutlinedIcon />}\n                  title='截止日期'\n                  disableElevation\n                >\n                  {cardDueTime}\n                </Button>\n              </Grid>\n            ) : null}\n            {doesSubTaskListExist ? (\n              <Grid item>\n                <Button\n                  onClick={(e) => e.stopPropagation()}\n                  disableElevation\n                  className={classes.subTaskListBtn}\n                  // todo 修改任务全部完成时的图标为绿色\n                  startIcon={<AssignmentTurnedInOutlinedIcon />}\n                  title={`待办事件(子任务)清单: 已完成 ${cardSubTasksDoneCount} / 总事项 ${cardSubTasksTotalCount};    未完成 ${\n                    Number(cardSubTasksTotalCount) -\n                    Number(cardSubTasksDoneCount)\n                  } `}\n                >\n                  {cardSubTasksDoneCount}/{cardSubTasksTotalCount}\n                </Button>\n              </Grid>\n            ) : null}\n          </Grid>\n        ) : null}\n\n        {priority ? (\n          <Grid item container>\n            <Grid item>\n              <Button\n                onClick={(e) => e.stopPropagation()}\n                disableElevation\n                className={classes.subTaskListBtn}\n                startIcon={<SortOutlinedIcon />}\n                title={`当前优先级: ${priority}，任务默认优先级为普通-10`}\n              >\n                优先级: {priority}\n              </Button>\n            </Grid>\n          </Grid>\n        ) : null}\n\n        {doesRelatedDocsExist ? (\n          <Grid item container>\n            <Grid item container>\n              <Button\n                onClick={handleToggleRelatedDocsListOpen}\n                variant='text'\n                className={classes.relatedDocsCollapseBtn}\n                startIcon={\n                  isRelatedDocsListOpen ? <ExpandMore /> : <ChevronRightIcon />\n                }\n              >\n                相关文档/文献\n              </Button>\n            </Grid>\n            <Grid item container>\n              <Collapse in={isRelatedDocsListOpen} timeout='auto' unmountOnExit>\n                <List aria-label='相关文档列表' disablePadding>\n                  {cardRelatedDocs[0]['docList'].map((doc) => {\n                    const { docId, docTitle } = doc;\n\n                    return (\n                      <ListItem\n                        onClick={(e) => e.stopPropagation()}\n                        key={docId}\n                        button\n                        disableGutters\n                        className={classes.relatedDocListItem}\n                      >\n                        <ListItemIcon className={classes.relatedDocsItemIcon}>\n                          <DescriptionOutlinedIcon\n                            className={classes.relatedDocsDocIcon}\n                          />\n                        </ListItemIcon>\n                        <ListItemText>\n                          <a\n                            className={classes.relatedDocsTitle}\n                            title={docTitle}\n                            // href='#'\n                          >\n                            {docTitle.length > 24\n                              ? docTitle.slice(0, 24) + '...'\n                              : docTitle}\n                          </a>\n                        </ListItemText>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </Collapse>\n            </Grid>\n          </Grid>\n        ) : null}\n\n        <Grid item container alignItems='center' justifyContent='space-between'>\n          {cardMembers && cardMembers.length > 0 ? (\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation();\n                alert('选择其他成员，开发中...');\n              }}\n              aria-label='任务负责人 owner member'\n              disableRipple\n              className={classes.cardBottomIconBtn}\n              title={cardMembers[0]['fullName']}\n            >\n              <AccountCircleOutlinedIcon />\n            </IconButton>\n          ) : (\n            <span></span>\n          )}\n          <IconButton\n            onClick={(e) => {\n              e.stopPropagation();\n              alert('更多卡片操作，开发中...');\n            }}\n            disableRipple\n            aria-label='更多任务卡片操作'\n            className={`cardMoreActionsIcon ${classes.cardBottomIconBtn}`}\n          >\n            <MoreHorizOutlinedIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Card;\n","import Card from \"./Card\";\n\nexport default Card;\n","import clsx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton as MIconButton,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nimport Card from '../../components/Card';\nimport ColumnForm from '../../components/ColumnForm';\nimport IconButton from '../../components/IconButton';\nimport RecordForm from '../../components/RecordForm';\nimport { ColumnColor, DarkColumnColor } from '../../constants';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport type { Column as ColumnType, Record } from '../../types';\nimport { RecordDetails } from '../RecordDetails';\nimport { ColumnHeader } from './ColumnHeader';\n\nconst useColumnCardListStyles = makeStyles((theme) => ({\n  card: {\n    // marginBottom: theme.spacing(2),\n    marginBottom: 12,\n  },\n}));\n\ntype ColumnCardListProps = {\n  column: ColumnType;\n  innerRef?: any;\n  CardComponent?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  forceColumnUpdate?: Function;\n  kanbanVariant?: string;\n};\n\nexport function ColumnCardList(props: ColumnCardListProps) {\n  const {\n    column,\n    innerRef,\n    CardComponent = Card,\n    onRecordEdit,\n    onRecordDelete,\n    forceColumnUpdate,\n    kanbanVariant,\n  } = props;\n\n  const classes = useColumnCardListStyles();\n\n  const { cardsRecords = [] } = column;\n\n  return (\n    <div ref={innerRef}>\n      {cardsRecords && cardsRecords.length\n        ? cardsRecords.map((record: Record, index) => (\n            <CardComponent\n              key={record.id}\n              record={record}\n              className={classes.card}\n              index={index}\n              onEdit={onRecordEdit}\n              onDelete={onRecordDelete}\n              showEditAction={false}\n              showDeleteAction={false}\n              forceColumnUpdate={forceColumnUpdate}\n              kanbanVariant={kanbanVariant}\n            />\n          ))\n        : // <Typography>{t('noRecord')}</Typography>\n          null}\n    </div>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton as MIconButton,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nimport Card from '../../components/Card';\nimport ColumnForm from '../../components/ColumnForm';\nimport IconButton from '../../components/IconButton';\nimport RecordForm from '../../components/RecordForm';\nimport { ColumnColor, DarkColumnColor } from '../../constants';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport type { Column as ColumnType, Record } from '../../types';\nimport { RecordDetails } from '../RecordDetails';\nimport { ColumnCardList } from './ColumnCardList';\nimport { ColumnHeader } from './ColumnHeader';\n\nconst useColumnFooterStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(0.5),\n  },\n  addCardButton: {\n    width: 280,\n    height: 36,\n    color: theme.palette.text.secondary,\n    backgroundColor: '#fff',\n    borderColor: 'rgba(15, 15, 15, 0.12)',\n  },\n  noBorder: {\n    border: 0,\n  },\n}));\n\ntype ColumnFooterProps = {\n  content?: string;\n  handleOpenAddRecordDialog?: Function;\n  kanbanVariant?: string;\n};\n\nexport const ColumnFooter: React.FC<ColumnFooterProps> = (props) => {\n  const { content, handleOpenAddRecordDialog, kanbanVariant } = props;\n\n  const classes = useColumnFooterStyles();\n  return (\n    <>\n      <Typography variant='caption' component='p' title={content} noWrap>\n        {/* {content} */}\n      </Typography>\n\n      <Button\n        onClick={handleOpenAddRecordDialog as any}\n        variant='outlined'\n        size='large'\n        // color='secondary'\n        className={cx(classes.addCardButton, {\n          [classes.noBorder]: kanbanVariant === 'fullPage',\n        })}\n        startIcon={<AddIcon />}\n      >\n        {/* 添加新任务卡片 */}\n      </Button>\n    </>\n  );\n};\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nconst useColumnHeaderStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: '#fff',\n    border: `1px solid rgba(15, 15, 15, 0.12)`,\n    '& .groupMoreActions': {\n      visibility: 'hidden',\n    },\n    '&:hover .groupMoreActions': {\n      visibility: 'visible',\n    },\n  },\n  headerBorder: {\n    border: 0,\n  },\n  divider: {\n    marginTop: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  columnMoreActionsBtn: {\n    '&:hover': {\n      backgroundColor: '#fff',\n      color: theme.palette.primary.main,\n    },\n  },\n}));\n\ntype ColumnHeaderProps = {\n  title: string;\n  description?: string;\n  onEdit?: any;\n  onDelete?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  kanbanVariant?: string;\n};\n\nexport function ColumnHeader(props: ColumnHeaderProps) {\n  const {\n    title,\n    description,\n    showEditAction = true,\n    showDeleteAction = true,\n    onEdit,\n    onDelete,\n    kanbanVariant,\n  } = props;\n\n  const classes = useColumnHeaderStyles();\n  return (\n    <>\n      <Box\n        className={cx(classes.root, {\n          [classes.headerBorder]: kanbanVariant === 'fullPage',\n        })}\n        bgcolor='#fff'\n        display='flex'\n        alignItems='center'\n        justifyContent='space-between'\n        padding='0 0 0 12px'\n        marginBottom='12px'\n      >\n        <Typography\n          // variant='h6'\n          title={title}\n          noWrap\n          style={{ fontWeight: 500 }}\n        >\n          {title}\n        </Typography>\n        <Box display='flex' alignItems='center'>\n          <IconButton\n            onClick={(e) => {\n              e.stopPropagation();\n              alert('更多分组操作，开发中...');\n            }}\n            className={cx('groupMoreActions', classes.columnMoreActionsBtn)}\n            aria-label='更多分组操作'\n            disableRipple\n          >\n            <MoreHorizIcon />\n          </IconButton>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton as MIconButton,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nimport Card from '../../components/Card';\nimport ColumnForm from '../../components/ColumnForm';\nimport IconButton from '../../components/IconButton';\nimport RecordForm from '../../components/RecordForm';\nimport { ColumnColor, DarkColumnColor } from '../../constants';\nimport { useTheme } from '../../providers/ThemeProvider';\nimport type { Column as ColumnType, Record } from '../../types';\nimport { RecordDetails } from '../RecordDetails';\nimport { ColumnCardList } from './ColumnCardList';\nimport { ColumnFooter } from './ColumnFooter';\nimport { ColumnHeader } from './ColumnHeader';\n\nconst useColumnStyles = makeStyles(() => ({\n  paper: (props: any) => {\n    // console.log(';;col-props ', props);\n    const bgColor = props.backgroundColor || 'transparent';\n    return {\n      backgroundColor: bgColor,\n    };\n  },\n\n  dialogPaper: {\n    maxHeight: '80vh',\n    maxWidth: '65vh',\n    // overflow: 'hidden',\n  },\n  dialogContent: {\n    overflow: 'hidden',\n    // minHeight: 860,\n  },\n}));\n\ntype ColumnProps = {\n  column: ColumnType;\n  className?: string;\n  innerRef?: any;\n  onEdit?: any;\n  onDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  showAddRecordAction?: boolean;\n  showDeleteAllRecordAction?: boolean;\n  ColumnHeaderComponent?: any;\n  ColumnActionComponent?: any;\n  ColumnCardListComponent?: any;\n  ColumnFooterComponent?: any;\n  forceBoardUpdate?: Function;\n  kanbanVariant?: string;\n};\n\n/** 看板的一列，是一个面板，上面可以放置多个卡片 */\nexport function Column(props: ColumnProps) {\n  const {\n    column,\n    className,\n    innerRef,\n    onEdit,\n    onDelete,\n    onAddRecord,\n    onAllRecordDelete,\n    showDeleteAction,\n    showEditAction,\n    onRecordEdit,\n    onRecordDelete,\n    showAddRecordAction,\n    showDeleteAllRecordAction,\n    forceBoardUpdate,\n    ColumnHeaderComponent = ColumnHeader,\n    ColumnActionComponent,\n    ColumnCardListComponent = ColumnCardList,\n    ColumnFooterComponent = ColumnFooter,\n    kanbanVariant,\n    ...rest\n  } = props;\n\n  const {\n    listGroupTitle,\n    desc,\n    caption,\n    color,\n    cardsRecords = [],\n    wipEnabled,\n    wipLimit = Infinity,\n  } = column;\n\n  // const [__, forceColumnUpdate] = useReducer((x) => x + 1, 0);\n  // console.log(';;Column-forceBoardUpdate ', forceBoardUpdate, column);\n\n  const disableAddRecordAction = wipEnabled && wipLimit <= cardsRecords.length;\n  const disableAllRecordDeleteAction = !cardsRecords.length;\n\n  const columnColor = color as keyof typeof ColumnColor;\n\n  const { darkTheme } = useTheme();\n\n  const classes = useColumnStyles({\n    backgroundColor: darkTheme\n      ? DarkColumnColor[columnColor]\n      : ColumnColor[columnColor],\n  });\n\n  const [dialog, setDialog] = useState({\n    open: false,\n    title: '',\n    content: null,\n    actions: null,\n  });\n\n  const handleDelete = useCallback(\n    (e) => {\n      onDelete && onDelete({ column, e });\n    },\n    [column, onDelete],\n  );\n\n  const handleEdit = useCallback(\n    (column: ColumnType) => {\n      onEdit && onEdit({ column });\n    },\n    [onEdit],\n  );\n\n  const handleAddRecord = useCallback(\n    (record: Record) => {\n      onAddRecord && onAddRecord({ column, record });\n    },\n    [column, onAddRecord],\n  );\n\n  /** 更新看板数据的方法，会传入column和record作为参数 */\n  const handleRecordEdit = useCallback(\n    (record: Record) => {\n      onRecordEdit({ column, record });\n    },\n    [column, onRecordEdit],\n  );\n\n  const handleRecordDelete = useCallback(\n    (record: Record) => {\n      onRecordDelete({ column, record });\n    },\n    [column, onRecordDelete],\n  );\n\n  const handleAllRecordDelete = useCallback(() => {\n    onAllRecordDelete({ column });\n  }, [column, onAllRecordDelete]);\n\n  const handleOpenDialog = useCallback(({ content, title, actions }) => {\n    setDialog({ content, title, actions, open: true });\n  }, []);\n\n  const handleCloseDialog = useCallback(() => {\n    setDialog(() => ({ content: null, title: '', actions: null, open: false }));\n  }, []);\n\n  const handleOpenDeleteDialog = useCallback(() => {\n    const content = (\n      <Typography>\n        {\n          // t('deleteColumnConfirmation')\n          '是否要删除列？'\n        }\n      </Typography>\n    );\n    const actions = (\n      <>\n        <Button variant='outlined' onClick={handleCloseDialog}>\n          {/* {t('cancel')} */}\n          取消\n        </Button>\n        &nbsp;\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={(e) => {\n            handleCloseDialog();\n            handleDelete(e);\n          }}\n        >\n          删除\n          {/* {t('delete')} */}\n        </Button>\n      </>\n    );\n\n    handleOpenDialog({\n      content,\n      actions,\n      title: '删除分组', // t('deleteColumn')\n    });\n  }, [handleOpenDialog, handleDelete, handleCloseDialog]);\n\n  const handleOpenEditDialog = useCallback(() => {\n    const content = (\n      <ColumnForm\n        column={column}\n        // formTitle={t('editColumn')}\n        formTitle='编辑分组'\n        onSubmit={(column: any) => {\n          handleCloseDialog();\n          handleEdit(column);\n        }}\n        onCancel={handleCloseDialog}\n      ></ColumnForm>\n    );\n\n    handleOpenDialog({ content });\n  }, [column, handleOpenDialog, handleCloseDialog, handleEdit]);\n\n  const handleOpenAddRecordDialog = useCallback(() => {\n    const content = (\n      <RecordForm\n        onSubmit={(record: Record) => {\n          handleCloseDialog();\n          handleAddRecord(record);\n        }}\n        onCancel={handleCloseDialog}\n      ></RecordForm>\n    );\n\n    handleOpenDialog({ content });\n  }, [handleOpenDialog, handleCloseDialog, handleAddRecord]);\n\n  /**\n   * * 打开弹窗，在弹窗中可编辑一个任务卡片的字段信息\n   */\n  const handleOpenEditRecordDialog = useCallback(\n    (record: Record) => {\n      const content = (\n        <RecordDetails\n          record={record}\n          onSubmit={(record: Record) => {\n            // console.log(';;RecordDetails-onSubmit ', record);\n            handleCloseDialog();\n            handleRecordEdit(record);\n          }}\n          onSubmitDataWithDialogOpen={(record: Record) => {\n            // console.log(';;RecordDetails-onSubmit ', record);\n            handleRecordEdit(record);\n          }}\n          onCancel={handleCloseDialog}\n          // forceBoardUpdate={forceBoardUpdate}\n        ></RecordDetails>\n      );\n\n      handleOpenDialog({ content });\n    },\n    [handleCloseDialog, handleOpenDialog, handleRecordEdit],\n  );\n\n  const handleOpenDeleteRecordDialog = useCallback(\n    (record: Record) => {\n      const content = (\n        <Typography>\n          {\n            // t('deleteRecordConfirmation')\n            '确定要删除当前卡片？'\n          }\n        </Typography>\n      );\n      const actions = (\n        <>\n          <Button variant='outlined' onClick={handleCloseDialog}>\n            取消\n          </Button>\n          &nbsp;\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={(e) => {\n              handleCloseDialog();\n              handleRecordDelete(record);\n            }}\n          >\n            删除当前卡片\n          </Button>\n        </>\n      );\n\n      handleOpenDialog({\n        content,\n        actions,\n        title: '删除卡片',\n        // t('deleteRecord')\n      });\n    },\n    [handleOpenDialog, handleCloseDialog, handleRecordDelete],\n  );\n\n  const handleOpenDeleteAllRecordDialog = useCallback(\n    (record: Record) => {\n      const content = (\n        <Typography>\n          {\n            // t('deleteAllRecordConfirmation')\n            '确定要删除所有卡片？'\n          }\n        </Typography>\n      );\n      const actions = (\n        <>\n          <Button variant='outlined' onClick={handleCloseDialog}>\n            {/* {t('cancel')} */}\n            取消\n          </Button>\n          &nbsp;\n          <Button\n            variant='contained'\n            color='primary'\n            onClick={(e) => {\n              handleCloseDialog();\n              handleAllRecordDelete();\n            }}\n          >\n            {/* {t('delete')} */}\n            删除\n          </Button>\n        </>\n      );\n\n      handleOpenDialog({\n        content,\n        actions,\n        title: '删除所有卡片', // t('deleteAllRecord')\n      });\n    },\n    [handleOpenDialog, handleCloseDialog, handleAllRecordDelete],\n  );\n\n  return (\n    <Paper\n      elevation={0}\n      className={cx(classes.paper, className)}\n      ref={innerRef}\n      {...rest}\n    >\n      <ColumnHeaderComponent\n        title={listGroupTitle}\n        description={desc}\n        showEditAction={showEditAction}\n        showDeleteAction={showDeleteAction}\n        onEdit={handleOpenEditDialog}\n        onDelete={handleOpenDeleteDialog}\n        kanbanVariant={kanbanVariant}\n      />\n      <ColumnCardListComponent\n        column={column}\n        onRecordEdit={handleOpenEditRecordDialog}\n        onRecordDelete={handleOpenDeleteRecordDialog}\n        forceBoardUpdate={forceBoardUpdate}\n        kanbanVariant={kanbanVariant}\n      />\n      <ColumnFooterComponent\n        content={caption}\n        handleOpenAddRecordDialog={handleOpenAddRecordDialog}\n        kanbanVariant={kanbanVariant}\n      />\n      <Dialog\n        open={dialog.open}\n        onClose={handleCloseDialog}\n        classes={{ paper: classes.dialogPaper }}\n      >\n        {/* <DialogTitle>{dialog.title}</DialogTitle> */}\n        <DialogContent className={classes.dialogContent}>\n          {dialog.content}\n        </DialogContent>\n        <DialogActions>{dialog.actions}</DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default Column;\n","import Column from \"./Column\";\n\nexport { ColumnHeader } from \"./ColumnHeader\";\nexport { ColumnCardList } from \"./ColumnCardList\";\nexport { ColumnFooter } from \"./ColumnFooter\";\n\nexport default Column;\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { COLUMN_WIDTH } from '../../constants';\nimport { Column as ColumnType } from '../../types';\nimport Column from '../Column';\n\nconst useBoardStyles = makeStyles((theme) => ({\n  root: {\n    display: 'inline-flex',\n    // width: 'fit-content',\n    // width: '100wh',\n    // height: '100vh',\n  },\n  column: {\n    width: COLUMN_WIDTH,\n    height: 'fit-content',\n    // margin: theme.spacing(),\n  },\n  addColButton: {\n    width: 280,\n    height: 50,\n    margin: theme.spacing(1),\n    // margin: '8px 16px',\n    backgroundColor: '#fff',\n    color: theme.palette.text.secondary,\n    borderColor: 'rgba(15, 15, 15, 0.12)',\n  },\n  noBorder: {\n    border: 0,\n  },\n}));\n\ntype BoardProps = {\n  columns: ColumnType[];\n  innerRef: any;\n  ColumnComponent: any;\n  placeholder?: any;\n  onColumnEdit?: any;\n  onColumnDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  handleOpenAddColumnDialog?: Function;\n  forceBoardUpdate?: Function;\n  kanbanVariant?: string;\n};\n\n/** 看板组件 */\nexport function Board(props: BoardProps) {\n  const {\n    columns,\n    innerRef,\n    ColumnComponent = Column,\n    placeholder,\n    onColumnEdit,\n    onColumnDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    handleOpenAddColumnDialog,\n    forceBoardUpdate,\n    kanbanVariant,\n    ...rest\n  } = props;\n\n  const classes = useBoardStyles();\n\n  // const [__, forceUpdate] = useReducer((x) => x + 1, 0);\n  // console.log(';;Board-forceUpdate ', forceUpdate);\n\n  return (\n    <div className={classes.root} ref={innerRef} {...rest}>\n      {columns && columns.length ? (\n        columns.map((column, index) => (\n          <ColumnComponent\n            index={index}\n            key={column.id}\n            column={column}\n            className={classes.column}\n            onEdit={onColumnEdit}\n            onDelete={onColumnDelete}\n            onAddRecord={onAddRecord}\n            onRecordEdit={onRecordEdit}\n            onRecordDelete={onRecordDelete}\n            onAllRecordDelete={onAllRecordDelete}\n            forceBoardUpdate={forceBoardUpdate}\n            kanbanVariant={kanbanVariant}\n          />\n        ))\n      ) : (\n        <Box display='flex' justifyContent='center'>\n          {/* <Typography>{t('noColumn')}</Typography> */}\n        </Box>\n      )}\n      {placeholder}\n      <Button\n        onClick={handleOpenAddColumnDialog as any}\n        variant='outlined'\n        size='large'\n        className={cx(classes.addColButton, {\n          [classes.noBorder]: kanbanVariant === 'fullPage',\n        })}\n        startIcon={<AddIcon />}\n      >\n        添加分组\n      </Button>\n    </div>\n  );\n}\n\nexport default Board;\n","import Board from \"./Board\";\n\nexport default Board;\n","import KanbanCard from \"./KanbanCard\";\n\nexport default KanbanCard;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport Card from \"../../components/Card\";\nimport { DarkRecordColor, RecordColor } from \"../../constants\";\nimport { useTheme } from \"../../providers/ThemeProvider\";\nimport type { Record } from \"../../types\";\n\ntype KanbanCardProps = {\n  record: Record;\n  index: number;\n  className?: string;\n  onEdit?: any;\n  onDelete?: any;\n};\n\nconst KanbanCard: React.FC<KanbanCardProps> = (props) => {\n  const { record, index, className, onEdit, onDelete } = props;\n\n  const recordColor = record.color as keyof typeof RecordColor;\n\n  const { darkTheme } = useTheme();\n\n  return (\n    <Draggable draggableId={record.id} index={index}>\n      {(provided) => (\n        <Card\n          key={record.id}\n          innerRef={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            ...provided.draggableProps.style,\n            backgroundColor: darkTheme\n              ? DarkRecordColor[recordColor]\n              : RecordColor[recordColor],\n          }}\n          record={record}\n          className={className}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nexport default KanbanCard;\n","import React from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\nimport Column, { ColumnCardList } from '../../components/Column';\nimport KanbanCard from '../../components/KanbanCard';\nimport { Column as ColumnType } from '../../types';\n\ntype KanbanInnerColumnCardListProps = {\n  column: ColumnType;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nconst KanbanInnerColumnCardList: React.FC<KanbanInnerColumnCardListProps> =\n  React.memo((props) => {\n    const { column, onRecordEdit, onRecordDelete } = props;\n    return (\n      <ColumnCardList\n        column={column}\n        CardComponent={KanbanCard}\n        onRecordEdit={onRecordEdit}\n        onRecordDelete={onRecordDelete}\n      />\n    );\n  });\n\ntype KanbanColumnCardListProps = {\n  column: ColumnType;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nconst KanbanColumnCardList: React.FC<KanbanColumnCardListProps> = (props) => {\n  const { column, onRecordEdit, onRecordDelete } = props;\n  const {\n    id: columnId,\n    cardsRecords = [],\n    wipEnabled,\n    wipLimit = false,\n  } = column;\n  const isDropDisabled = wipEnabled && wipLimit <= cardsRecords?.length;\n  return (\n    <Droppable droppableId={columnId} isDropDisabled={isDropDisabled}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps}>\n          <KanbanInnerColumnCardList\n            column={column}\n            onRecordEdit={onRecordEdit}\n            onRecordDelete={onRecordDelete}\n          />\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\ntype KanbanColumnProps = {\n  column: ColumnType;\n  index: number;\n  className?: string;\n  onEdit?: any;\n  onDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  forceBoardUpdate?: Function;\n};\n\n/**\n * * 在Column组件外层加上了Draggable组件。\n */\nexport function KanbanColumn(props: KanbanColumnProps) {\n  const {\n    column,\n    index,\n    className,\n    onEdit,\n    onDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    forceBoardUpdate,\n  } = props;\n\n  const _column = Object.assign({}, column, {\n    caption: column.wipEnabled\n      ? // ? `${t('wipLimit')} :${column.wipLimit}`\n        ` wipLimit :${column.wipLimit}`\n      : column.createdAt,\n  });\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided) => (\n        <Column\n          innerRef={provided.innerRef}\n          column={_column}\n          className={className}\n          ColumnCardListComponent={KanbanColumnCardList}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onAddRecord={onAddRecord}\n          onRecordEdit={onRecordEdit}\n          onRecordDelete={onRecordDelete}\n          onAllRecordDelete={onAllRecordDelete}\n          forceBoardUpdate={forceBoardUpdate}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        />\n      )}\n    </Draggable>\n  );\n}\n\nexport default KanbanColumn;\n","import KanbanColumn from \"./KanbanColumn\";\n\nexport default KanbanColumn;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport Board from \"../../components/Board\";\nimport KanbanColumn from \"../../components/KanbanColumn\";\nimport type { Column } from \"../../types\";\n\ntype KanbanBoardProps = {\n  columns: Column[];\n  onCardMove?: any;\n  onColumnMove?: any;\n  onColumnEdit?: any;\n  onColumnDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  ColumnComponent?: any;\n  handleOpenAddColumnDialog?: Function;\n  forceBoardUpdate?: Function;\n  kanbanVariant?:string;\n};\n\n/**\n * * 在Board组件外层加上了DragDropContext和Droppable。\n * * 看板中每列分组组件使用的是KanbanColumn，而不是默认的Column。\n */\nexport function KanbanBoard(props: KanbanBoardProps) {\n  const {\n    columns,\n    onCardMove,\n    onColumnMove,\n    onColumnEdit,\n    onColumnDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    ColumnComponent = KanbanColumn,\n    handleOpenAddColumnDialog,\n    forceBoardUpdate,\n    kanbanVariant\n  } = props;\n\n  const getColumnById = useCallback(\n    (columnId) => columns.find((column) => column.id === columnId),\n    [columns]\n  );\n\n  const getColumnByIndex = useCallback((index) => columns[index], [columns]);\n\n  const handleDragEnd = useCallback(\n    (result) => {\n      const { source, destination, type } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      ) {\n        // Drop position is same as original\n        return;\n      }\n\n      if (type === \"COLUMN\") {\n        onColumnMove({\n          column: getColumnByIndex(source.index),\n          index: destination.index,\n        });\n        return;\n      }\n\n      const record = getColumnById(source.droppableId)?.cardsRecords?.[source.index];\n\n      onCardMove({\n        source: getColumnById(source.droppableId),\n        column: getColumnById(destination.droppableId),\n        record,\n        index: destination.index,\n      });\n    },\n    [onColumnMove, onCardMove, getColumnByIndex, getColumnById]\n  );\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"BOARD\" type=\"COLUMN\" direction=\"horizontal\">\n        {(provided) => (\n          <>\n            <Board\n              innerRef={provided.innerRef}\n              // * 这里使用了自定义组件KanbanColumn，而不是Column\n              ColumnComponent={ColumnComponent}\n              {...provided.droppableProps}\n              columns={columns}\n              placeholder={provided.placeholder}\n              onColumnEdit={onColumnEdit}\n              onColumnDelete={onColumnDelete}\n              handleOpenAddColumnDialog={handleOpenAddColumnDialog}\n              onAddRecord={onAddRecord}\n              onRecordEdit={onRecordEdit}\n              onRecordDelete={onRecordDelete}\n              onAllRecordDelete={onAllRecordDelete}\n              forceBoardUpdate={forceBoardUpdate}\n              kanbanVariant={kanbanVariant}\n            />\n          </>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n\nexport default KanbanBoard;\n","import KanbanBoard from \"./KanbanBoard\";\n\nexport default KanbanBoard;\n","import React from \"react\";\n\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\nimport InvertColorsOffIcon from \"@material-ui/icons/InvertColorsOff\";\nimport LanguageIcon from \"@material-ui/icons/Translate\";\n\nconst icons = {\n  edit: EditIcon,\n  delete: DeleteIcon,\n  add: AddIcon,\n  deleteSweep: DeleteSweepIcon,\n  deleteForever: DeleteForeverIcon,\n  invertColors: InvertColorsIcon,\n  invertColorsOff: InvertColorsOffIcon,\n  gitHub: GitHubIcon,\n  language: LanguageIcon,\n  personalKanban: DeveloperBoardIcon,\n  info: InfoIcon,\n};\n\ntype IconButtonProps = MuiIconButtonProps & {\n  icon: keyof typeof icons;\n  iconProps?: any;\n  component?: any;\n  href?: string;\n  target?: string;\n};\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const { icon, iconProps = {}, ...rest } = props;\n  const Icon = icons[icon];\n  return Icon ? (\n    <MuiIconButton size=\"small\" {...rest}>\n      <Icon fontSize=\"small\" {...iconProps} />\n    </MuiIconButton>\n  ) : null;\n};\n\nexport default IconButton;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import React, { useState } from \"react\";\n\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  Dialog,\n  DialogContent,\n  Divider,\n  Grid,\n  Link,\n  IconButton as MIconButton,\n  Menu,\n  MenuItem,\n  Paper,\n  Popover,\n  Typography,\n} from \"@material-ui/core\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles, useTheme as useMuiTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nimport ColumnForm from \"../../components/ColumnForm\";\nimport IconButton from \"../../components/IconButton\";\nimport { useTheme } from \"../../providers/ThemeProvider\";\nimport type { Column } from \"../../types\";\n\ntype AddColumnButtonProps = {\n  onSubmit: any;\n};\n\nconst AddColumnButton: React.FC<AddColumnButtonProps> = (props) => {\n  const { onSubmit } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenDialog = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleSubmit = React.useCallback(\n    (column: Column) => {\n      onSubmit({ column });\n      handleCloseDialog();\n    },\n    [onSubmit, handleCloseDialog]\n  );\n\n  return (\n    <Box display=\"block\">\n      <IconButton icon=\"add\" color=\"primary\" onClick={handleOpenDialog}>\n        {/* {t('addColumn')} */}\n        添加分组\n      </IconButton>\n      <Dialog onClose={handleCloseDialog} open={open}>\n        <DialogContent>\n          <ColumnForm onSubmit={handleSubmit} onCancel={handleCloseDialog} />\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\ntype ClearBoardButtonProps = {\n  onClear: any;\n  disabled?: boolean;\n};\n\nconst ClearBoardButton: React.FC<ClearBoardButtonProps> = (props) => {\n  const { disabled, onClear } = props;\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenDialog = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleClear = React.useCallback(\n    (e) => {\n      onClear({ e });\n      handleCloseDialog();\n    },\n    [onClear, handleCloseDialog]\n  );\n\n  return (\n    <Box display=\"flex\">\n      <IconButton\n        icon=\"delete\"\n        color=\"primary\"\n        disabled={disabled}\n        onClick={handleOpenDialog}\n      ></IconButton>\n      <Dialog onClose={handleCloseDialog} open={open}>\n        <DialogContent>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Typography gutterBottom variant=\"h6\">\n                {/* {t('clearBoard')} */}\n                是否删除所有分组和所有卡片 ？\n              </Typography>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              {/* <Typography gutterBottom>\n                {t('clearBoardConfirmation')}\n                是否要删除所有分组和所有卡片？\n              </Typography> */}\n            </Grid>\n            <Grid item xs={12}>\n              <Button variant=\"outlined\" onClick={handleCloseDialog}>\n                {/* {t('cancel')} */}\n                取消\n              </Button>\n              &emsp;\n              <Button color=\"primary\" variant=\"contained\" onClick={handleClear}>\n                {/* {t('clear')} */}\n                确认删除\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\ntype LanguageButtonProps = {};\n\nconst LanguageButton: React.FC<LanguageButtonProps> = (props) => {\n  // const { i18n } = useTranslation();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChangeLanguage = (lng: string) => () => {\n    // i18n.changeLanguage(lng);\n    handleClose();\n  };\n\n  return (\n    <Box display=\"block\">\n      <IconButton\n        icon={\"language\"}\n        aria-controls=\"language-menu\"\n        aria-haspopup=\"true\"\n        color=\"inherit\"\n        onClick={handleClick}\n      />\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleChangeLanguage(\"en\")}>English</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"fr\")}>Français</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"es\")}>Español</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"ru\")}>Pусский</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"de\")}>Deutsch</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"in\")}>हिंदी</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"jp\")}>日本語</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"cn\")}>中文</MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nconst DarkThemeButton: React.FC<{}> = () => {\n  const { darkTheme, handleToggleDarkTheme } = useTheme();\n\n  return (\n    <IconButton\n      color=\"inherit\"\n      icon={darkTheme ? \"invertColors\" : \"invertColorsOff\"}\n      onClick={handleToggleDarkTheme}\n    />\n  );\n};\n\nconst GitHubButton: React.FC<{}> = () => {\n  return (\n    <IconButton\n      color=\"inherit\"\n      icon=\"gitHub\"\n      component={Link}\n      href=\"https://github.com/nishantpainter/personal-kanban\"\n      target=\"_blank\"\n    />\n  );\n};\n\nconst useInfoButtonStyles = makeStyles((theme) => ({\n  paper: {\n    maxWidth: 300,\n    minWidth: 300,\n    maxHeight: 300,\n    minHeight: 300,\n    padding: theme.spacing(),\n  },\n  buttonGridItem: {\n    textAlign: \"center\",\n  },\n}));\n\nconst InfoButton: React.FC<{}> = () => {\n  const classes = useInfoButtonStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const openInfo = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeInfo = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const id = open ? \"info-popover\" : undefined;\n\n  return (\n    <>\n      <IconButton icon=\"info\" color=\"primary\" onClick={openInfo} />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={closeInfo}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        PaperProps={{ className: classes.paper }}\n      >\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Box marginTop={2} textAlign=\"center\">\n              <img\n                src=\"https://stacks.rocks/site/templates/assets/images/stacks-logo-dark.svg\"\n                height=\"30\"\n                alt=\"Stacks\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\">\n              <Link href=\"https://stacks.rocks/\" target=\"_blank\">\n                Stacks\n              </Link>\n              &nbsp;is a cross-platform all-in-one project management tool that\n              works on top of a local folder.\n              <br />\n              <br />\n              Get 20% off on your order by applying coupon{\" \"}\n              <strong>NISHANT20</strong>\n              <br />\n              <br />\n            </Typography>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonGridItem}>\n            <Button variant=\"contained\" color=\"primary\">\n              <Link\n                color=\"inherit\"\n                href=\"https://stacks.rocks/store/?coupon=NISHANT20\"\n                target=\"_blank\"\n              >\n                Order Now\n              </Link>\n            </Button>\n          </Grid>\n        </Grid>\n      </Popover>\n    </>\n  );\n};\nconst useToolbarStyles = makeStyles((theme) => ({\n  paper: {\n    padding: 0,\n    backgroundColor: \"#fff\",\n    color: theme.palette.text.primary,\n  },\n}));\n\ntype ToolbarProps = {\n  clearButtonDisabled?: boolean;\n  onNewColumn: any;\n  onClearBoard: any;\n};\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const { clearButtonDisabled, onNewColumn, onClearBoard } = props;\n\n  // const { t } = useTranslation();\n\n  const classes = useToolbarStyles();\n\n  const muiTheme = useMuiTheme();\n\n  const isMobile = useMediaQuery(muiTheme.breakpoints.down(\"sm\"));\n\n  return (\n    <AppBar elevation={0} className={classes.paper}>\n      <MuiToolbar>\n        <Box display=\"flex\" alignItems=\"center\">\n          <MIconButton\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"taskBoardLogoIcon\"\n          >\n            <DashboardIcon />\n          </MIconButton>\n          &nbsp;\n          <Typography variant={isMobile ? \"body1\" : \"h6\"}>\n            示例看板 - 任务管理 ( 👉 看板内容就是使用教程)\n          </Typography>\n        </Box>\n        <Box display=\"flex\" flexGrow={1} />\n        <Box display=\"flex\">\n          <AddColumnButton onSubmit={onNewColumn} />\n          &emsp;\n          <ClearBoardButton\n            disabled={clearButtonDisabled}\n            onClear={onClearBoard}\n          />\n          &emsp;\n          {/* <InfoButton /> */}\n          {/* &nbsp; */}\n          {/* <DarkThemeButton /> &nbsp; */}\n          {/* <LanguageButton /> &nbsp; */}\n          {/* <GitHubButton /> */}\n        </Box>\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import { v4 as uuidv4 } from 'uuid';\n\nimport type { Column } from '../types';\n\nexport const getId = (): string => {\n  return uuidv4();\n};\n\n/** 获取ISO格式的当前时间，返回值示例 2021-11-17T15:45:56 */\nexport function getDateNowISOStrWithTimezone() {\n  //offset in milliseconds\n  const timezoneOffset = new Date().getTimezoneOffset() * 60000;\n  const dateISOStr = new Date(Date.now() - timezoneOffset).toISOString();\n  return dateISOStr.slice(0, -5);\n}\n\nexport function getCreatedAt() {\n  //   return `${moment().format('DD-MM-YYYY')} ${moment().format('h:mm:ss a')}`;\n  return getDateNowISOStrWithTimezone();\n}\n\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nexport const reorderCards = ({\n  columns,\n  sourceColumn,\n  destinationColumn,\n  sourceIndex,\n  destinationIndex,\n}: {\n  columns: Column[];\n  sourceColumn: Column;\n  destinationColumn: Column;\n  sourceIndex: number;\n  destinationIndex: number;\n}) => {\n  const getColumnIndex = (columnId: string) =>\n    columns.findIndex((c) => c.id === columnId);\n\n  const getRecords = (columnId: string) => [\n    ...columns.find((c) => c.id === columnId)?.cardsRecords!,\n  ];\n\n  const current = getRecords(sourceColumn.id);\n  const next = getRecords(destinationColumn.id);\n  const target = current[sourceIndex];\n\n  // moving to same list\n  if (sourceColumn.id === destinationColumn.id) {\n    const reordered = reorder(current, sourceIndex, destinationIndex);\n    const newColumns = columns.map((c) => ({ ...c }));\n    newColumns[getColumnIndex(sourceColumn.id)].cardsRecords = reordered;\n    return newColumns;\n  }\n\n  // moving to different list\n  current.splice(sourceIndex, 1);\n  next.splice(destinationIndex, 0, target);\n  const newColumns = columns.map((c) => ({ ...c }));\n  newColumns[getColumnIndex(sourceColumn.id)].cardsRecords = current;\n  newColumns[getColumnIndex(destinationColumn.id)].cardsRecords = next;\n  return newColumns;\n};\n\nexport const getInitialState = () => {\n  return [\n    // 这里是一个分组列\n    {\n      id: 'listGroupId' + getId(),\n      listGroupTitle: '看板示例说明',\n      // color: \"Orange\",\n      // cardsRecords包含一个分组面板中的所有卡片\n      cardsRecords: [\n        // 这里是一个卡片\n        {\n          id: 'cardId' + getId(),\n          cardTitle: '这是一个全功能的卡片示例，其他卡片是使用教程',\n          cardTitleEmoji: '✨',\n          desc: 'Make a fresh start by erasing this board. Click delete button on main toolbar.',\n          status: 'done',\n          priority: '11',\n          cardStartTime: getDateNowISOStrWithTimezone().slice(0, 10),\n          cardDueTime: getDateNowISOStrWithTimezone().slice(0, 10),\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '全功能卡片',\n              color: 'purple',\n            },\n          ],\n          cardMembers: [\n            {\n              id: 'idUser1',\n              username: 'uptonking1',\n              fullName: 'uptonking',\n              avatarUrl: '',\n              memberType: 'normal',\n            },\n          ],\n          cardChecklists: [\n            {\n              id: 'idChecklist',\n              name: 'test checklist 子任务',\n              idCard: 'cardId',\n              checkItems: [\n                {\n                  idChecklist: 'idChecklist',\n                  id: '61b316a7dce17a5b97006b16',\n                  name: 'ckeditor',\n                  nameData: {\n                    emoji: {},\n                  },\n                  state: 'complete',\n                  pos: 16879,\n                  due: null,\n                  idMember: null,\n                },\n                {\n                  idChecklist: 'idChecklist',\n                  id: '61b316ab877ce337dbc11e2e',\n                  name: 'prosemirror',\n                  nameData: {\n                    emoji: {},\n                  },\n                  state: 'incomplete',\n                  pos: 33786,\n                  due: null,\n                  idMember: null,\n                },\n              ],\n            },\n          ],\n          cardRelatedDocs: [\n            {\n              id:'idRelatedDocsList',\n              title: '相关文档',\n              docList: [\n                {\n                  docTitle: 'ckeditor architecture core',\n                  docId: 'unique-doc-id1',\n                  url: '',\n                },\n                {\n                  docTitle: 'ckeditor editing engine',\n                  docId: 'unique-doc-id2',\n                  url: '',\n                },\n              ],\n            },\n          ],\n          attachments: [],\n          comments: {},\n          createdAt: getCreatedAt(),\n        },\n        {\n          id: getId(),\n          cardTitle: '看板结构：分组列(代表一组任务) + 卡片(代表一个任务)',\n          desc: 'Rate and Star Personal Kanban',\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '每个分组列可向下添加多个卡片',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '点击卡片会出现卡片详情弹窗',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '分组列和卡片都可拖拽移动',\n              color: 'purple',\n            },\n          ],\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      listGroupTitle: '看板核心功能',\n      // cardsRecords包含一个分组面板中的所有卡片\n      cardsRecords: [\n        {\n          id: getId(),\n          cardTitle: '紫色块是标签，可在卡片详情弹窗中添加标签',\n          cardTitleEmoji: '💡',\n          desc: 'Rate and Star Personal Kanban',\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '教程',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '这里是标签',\n              color: 'purple',\n            },\n          ],\n          createdAt: getCreatedAt(),\n        },\n        {\n          id: getId(),\n          cardTitle:\n            '在卡片详情弹窗中设置卡片负责人后，卡片右下角会显示负责人头像',\n          cardTitleEmoji: '💡',\n          desc: 'Rock the world with your creativity !',\n          cardMembers: ['userId1'],\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '教程',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '添加成员/负责人',\n              color: 'purple',\n            },\n          ],\n          createdAt: getCreatedAt(),\n        },\n        {\n          id: getId(),\n          cardTitle: '标签下面是 截止日期 + 任务进度，鼠标悬浮会提示意义',\n          cardTitleEmoji: '💡',\n          desc: 'Rate and Star Personal Kanban',\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '教程',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '截止日期',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '待办事项/任务进度',\n              color: '',\n            },\n          ],\n          cardChecklists: [\n            {\n              id: 'idChecklist',\n              name: 'test checklist 子任务',\n              idCard: 'cardId',\n              checkItems: [\n                {\n                  idChecklist: 'idChecklist',\n                  state: 'complete',\n                  id: '61b316a7dce17a5b97006b16',\n                  name: 'ckeditor',\n                  nameData: {\n                    emoji: {},\n                  },\n                  pos: 16879,\n                  due: null,\n                  idMember: null,\n                },\n                {\n                  idChecklist: 'idChecklist',\n                  state: 'incomplete',\n                  id: '61b316ab877ce337dbc11e2e',\n                  name: 'prosemirror',\n                  nameData: {\n                    emoji: {},\n                  },\n                  pos: 33786,\n                  due: null,\n                  idMember: null,\n                },\n              ],\n            },\n          ],\n          createdAt: getCreatedAt(),\n          taskDueTime: getDateNowISOStrWithTimezone().slice(0, 10),\n        },\n        {\n          id: getId(),\n          cardTitle:\n            '小卡片能展示的信息有限，可在卡片上直接显示相关的详情文档/双链文档，可折叠',\n          cardTitleEmoji: '💡',\n          desc: 'Rate and Star Personal Kanban',\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '教程',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '相关文档',\n              color: 'purple',\n            },\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '双链文档',\n              color: 'purple',\n            },\n          ],\n          cardRelatedDocs: [\n            {\n              title: '相关文档',\n              docList: [\n                {\n                  docTitle: 'ckeditor architecture core',\n                  docId: 'unique-doc-id1',\n                  url: '',\n                },\n                {\n                  docTitle: 'ckeditor editing engine',\n                  docId: 'unique-doc-id2',\n                  url: '',\n                },\n              ],\n            },\n          ],\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      listGroupTitle: '看板使用小技巧',\n      cardsRecords: [\n        {\n          id: getId(),\n          cardTitle: '在卡片详情弹窗中点击标题文字可直接编辑标题',\n          desc: 'Rock the world with your creativity !',\n          createdAt: getCreatedAt(),\n        },\n        {\n          id: getId(),\n          cardTitle: '标题文字前放个emoji更醒目',\n          cardTitleEmoji: '👉',\n          desc: `Accepts a function that contains imperative, possibly effectful code.Mutations, subscriptions, timers, logging, and other side effects are not allowed inside the main body of a function component (referred to as React’s render phase). Doing so will lead to confusing bugs and inconsistencies in the UI.\n          \n          Instead, use useEffect. The function passed to useEffect will run after the render is committed to the screen. Think of effects as an escape hatch from React’s purely functional world into the imperative world.\n          \n          By default, effects run after every completed render, but you can choose to fire them only when certain values have changed.\n          \n          Cleaning up an effect\n          Often, effects create resources that need to be cleaned up before the component leaves the screen, such as a subscription or timer ID. To do this, the function passed to useEffect may return a clean-up function. For example, to create a subscription:`,\n          createdAt: getCreatedAt(),\n        },\n        {\n          id: getId(),\n          // color: \"Indigo\",\n          cardTitle:\n            '一个很长很长的标题，长到必须要换行了，甚至超过2行，显示更多行，也超过了详情弹窗中标题输入框的长度； ',\n          cardLabels: [\n            {\n              id: 'idLabel1',\n              idBoard: 'idBoard',\n              name: '可将内容全放在标题，而不放在描述',\n              color: 'purple',\n            },\n          ],\n          desc: 'Rock the world with your creativity !',\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      listGroupTitle: '看板功能和设计仅供参考',\n      cardsRecords: [\n        {\n          id: getId(),\n          cardTitle: '不足1：卡片详情弹窗中部分按钮不可用，功能开发中...',\n          desc: 'Rock the world with your creativity !',\n          cardMembers: [\n            {\n              id: 'idUser1',\n              username: 'uptonking1',\n              fullName: 'uptonking',\n              avatarUrl: '',\n              memberType: 'normal',\n            },\n          ],\n          createdAt: getCreatedAt(),\n        },\n        {\n          id: getId(),\n          cardTitle: '不足2：很多功能只实现了添加，暂未实现修改和删除',\n          desc: 'Rock the world with your creativity !',\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n  ];\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Dialog, DialogContent, Grid, Toolbar } from '@material-ui/core';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport ColumnForm from '../../components/ColumnForm/ColumnForm';\nimport type { Column } from '../../types';\n\nexport type AddColumnDialogProps = {\n  /** 添加分组列的弹窗是否打开 */\n  open?: boolean;\n  /** 弹窗关闭时的事件处理函数 */\n  onClose?: Function;\n  /** 点击提交按钮时的事件处理函数 */\n  onSubmit?: Function;\n};\n\n/** 添加分组/任务清单的弹窗 */\nexport function AddColumnDialog(props: AddColumnDialogProps) {\n  const { open, onClose, onSubmit } = props;\n\n  const handleCloseDialog = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleSubmit = useCallback(\n    (column: Column) => {\n      onSubmit({ column });\n      handleCloseDialog();\n    },\n    [handleCloseDialog, onSubmit],\n  );\n\n  return (\n    <Dialog onClose={handleCloseDialog} open={open}>\n      <DialogContent>\n        <ColumnForm onSubmit={handleSubmit} onCancel={handleCloseDialog} />\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nexport default AddColumnDialog;\n","import cx from 'clsx';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport KanbanBoard from '../../components/KanbanBoard';\nimport Toolbar from '../../containers/Toolbar';\nimport ThemeProvider from '../../providers/ThemeProvider';\nimport StorageService from '../../services/StorageService';\nimport {\n  getCreatedAt,\n  getId,\n  getInitialState,\n  reorder,\n  reorderCards,\n} from '../../services/utils';\nimport type { Column, Record } from '../../types';\nimport { AddColumnDialog } from './AddColumnDialog';\n\nlet initialState = StorageService.getColumns();\nif (!initialState) {\n  initialState = getInitialState();\n}\n\nconst useKanbanBoardStyles = makeStyles<Theme>((theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fullPageRoot: {\n      height: '100vh',\n      backgroundColor: '#eef3fc',\n    },\n    toolbar: theme.mixins.toolbar,\n  }),\n);\n\ntype KanbanBoardContainerProps = {\n  kanbanData?: any;\n  updateKanbanData?: Function;\n  variant?: 'fullPage' | 'kanbanInPvtTable';\n};\n\n/**\n * * 创建看板数据的state，将更新逻辑setState传下去。\n */\nexport function KanbanBoardContainer(props: KanbanBoardContainerProps) {\n  const classes = useKanbanBoardStyles();\n  const { kanbanData, updateKanbanData, variant } = props;\n\n  const [columns, setColumns] = useState<Column[]>(initialState);\n\n  const cloneColumns = useCallback((columns: Column[]) => {\n    return columns.map((column: Column) => ({\n      ...column,\n      cardsRecords: [...column.cardsRecords!],\n    }));\n  }, []);\n\n  const getColumnIndex = useCallback(\n    (id: string) => {\n      return columns.findIndex((c: Column) => c.id === id);\n    },\n    [columns],\n  );\n\n  const getRecordIndex = useCallback(\n    (recordId: string, columnId: string) => {\n      return columns[getColumnIndex(columnId)]?.cardsRecords?.findIndex(\n        (r: Record) => r.id === recordId,\n      );\n    },\n    [columns, getColumnIndex],\n  );\n\n  const handleClearBoard = useCallback(() => {\n    setColumns([]);\n  }, []);\n\n  /** 在看板中添加一个新的分组列 */\n  const handleAddColumn = useCallback(({ column }: { column: Column }) => {\n    setColumns((columns: Column[]) => [\n      ...columns,\n      Object.assign(\n        { id: getId(), cardsRecords: [], createdAt: getCreatedAt() },\n        column,\n      ),\n    ]);\n  }, []);\n\n  const handleColumnMove = useCallback(\n    ({ column, index }: { column: Column; index: number }) => {\n      const updatedColumns = reorder(columns, getColumnIndex(column.id), index);\n      setColumns(updatedColumns);\n    },\n    [columns, getColumnIndex],\n  );\n\n  const handleColumnEdit = useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((_columns: Column[]) => {\n        const columnIndex = getColumnIndex(column.id);\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].listGroupTitle = column.listGroupTitle;\n        columns[columnIndex].desc = column.desc;\n        columns[columnIndex].color = column.color;\n        columns[columnIndex].wipEnabled = column.wipEnabled;\n        columns[columnIndex].wipLimit = column.wipLimit;\n        return columns;\n      });\n    },\n    [getColumnIndex, cloneColumns],\n  );\n\n  const handleColumnDelete = useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((_columns: Column[]) => {\n        const columns = cloneColumns(_columns);\n        columns.splice(getColumnIndex(column.id), 1);\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex],\n  );\n\n  const handleCardMove = useCallback(\n    ({\n      column,\n      index,\n      source,\n      record,\n    }: {\n      column: Column;\n      index: number;\n      source: Column;\n      record: Record;\n    }) => {\n      const updatedColumns = reorderCards({\n        columns,\n        destinationColumn: column,\n        destinationIndex: index,\n        sourceColumn: source,\n        sourceIndex: getRecordIndex(record.id, source.id)!,\n      });\n\n      setColumns(updatedColumns);\n    },\n    [columns, getRecordIndex],\n  );\n\n  const handleAddRecord = useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      setColumns((_columns: Column[]) => {\n        const columns = cloneColumns(_columns);\n\n        columns[columnIndex].cardsRecords = [\n          ...columns[columnIndex].cardsRecords,\n          {\n            id: getId(),\n            cardTitle: record.cardTitle,\n            desc: record.desc,\n            color: record.color,\n            createdAt: getCreatedAt(),\n          },\n        ];\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex],\n  );\n\n  /**\n   * * 更新一个任务卡片的信息。\n   */\n  const handleRecordEdit = useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      const recordIndex = getRecordIndex(record.id, column.id);\n\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        const _record = columns[columnIndex].cardsRecords[recordIndex!];\n\n        Object.assign(_record, record);\n        return columns;\n      });\n    },\n    [getColumnIndex, getRecordIndex, cloneColumns],\n  );\n\n  const handleRecordDelete = useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      const recordIndex = getRecordIndex(record.id, column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].cardsRecords.splice(recordIndex!, 1);\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex, getRecordIndex],\n  );\n\n  const handleAllRecordDelete = useCallback(\n    ({ column }: { column: Column }) => {\n      const columnIndex = getColumnIndex(column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].cardsRecords = [];\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex],\n  );\n\n  const [isAddColumnDialogOpen, setIsAddColumnDialogOpen] = useState(false);\n  const handleOpenAddColumnDialog = useCallback(() => {\n    setIsAddColumnDialogOpen(true);\n  }, []);\n  const handleCloseAddColumnDialog = useCallback(() => {\n    setIsAddColumnDialogOpen(false);\n  }, []);\n\n  useEffect(() => {\n    StorageService.setColumns(columns);\n  }, [columns]);\n\n  return (\n    <ThemeProvider>\n      <div\n        className={cx(classes.root, {\n          [classes.fullPageRoot]: variant === 'fullPage',\n        })}\n      >\n        {variant === 'fullPage' ? (\n          <>\n            <Toolbar\n              clearButtonDisabled={!columns.length}\n              onNewColumn={handleAddColumn}\n              onClearBoard={handleClearBoard}\n            />\n            <div className={classes.toolbar} />\n          </>\n        ) : null}\n        <Box padding={variant === 'fullPage' ? 1 : 0}>\n          <KanbanBoard\n            columns={columns}\n            onColumnMove={handleColumnMove}\n            onColumnEdit={handleColumnEdit}\n            onColumnDelete={handleColumnDelete}\n            handleOpenAddColumnDialog={handleOpenAddColumnDialog}\n            onCardMove={handleCardMove}\n            onAddRecord={handleAddRecord}\n            onRecordEdit={handleRecordEdit}\n            onRecordDelete={handleRecordDelete}\n            onAllRecordDelete={handleAllRecordDelete}\n            kanbanVariant={variant}\n            // forceBoardUpdate={forceUpdate}\n          />\n        </Box>\n        <AddColumnDialog\n          open={isAddColumnDialogOpen}\n          onClose={handleCloseAddColumnDialog}\n          onSubmit={handleAddColumn}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default KanbanBoardContainer;\n","import React from \"react\";\n\nimport KanbanBoardContainer from \"./containers/KanbanBoard\";\n\ninterface PersonalKanbanProps {}\n\nexport function PersonalKanban(props) {\n  return <KanbanBoardContainer />;\n}\n\nexport default PersonalKanban;\n","export const NOOP = () => {};\n","import cx from 'clsx';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport {\n  Button,\n  Checkbox,\n  Collapse,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  Paper,\n  Popover,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FilterListOutlinedIcon from '@material-ui/icons/FilterListOutlined';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ViewAgendaOutlinedIcon from '@material-ui/icons/ViewAgendaOutlined';\nimport ViewColumnOutlinedIcon from '@material-ui/icons/ViewColumnOutlined';\nimport ViewListOutlinedIcon from '@material-ui/icons/ViewListOutlined';\nimport WidgetsOutlinedIcon from '@material-ui/icons/WidgetsOutlined';\n\nimport { NOOP } from '../utils/constants';\n\nexport type ToolbarProps = {\n  showToolbar?: boolean;\n  showToolbarActionsMenuButtons?: boolean;\n  setToggleShowGroupedTable?: Function;\n  pvtViews?: any[];\n  setPvtViews?: Function;\n};\n\n/**\n * * 工具条的结构：左边 名称+切换+重命名； 右边 字段配置+过滤+分组+排序+搜索+更多+undo\n * * 更多菜单可考虑：行高、保存模板、复制拷贝、链接拷贝、单元格换行\n */\nexport function Toolbar(props) {\n  const {\n    showToolbar = true,\n    showToolbarActionsMenuButtons = true,\n    setToggleShowGroupedTable,\n    pvtViews,\n    setPvtViews,\n  } = props;\n\n  const handleClickGroupTableMenu = useCallback(() => {\n    setToggleShowGroupedTable((prev) => !prev);\n  }, [setToggleShowGroupedTable]);\n\n  const toolbarActionsMenuData = useMemo(\n    () => [\n      {\n        name: '分组',\n        icon: <ViewAgendaOutlinedIcon />,\n        handler: handleClickGroupTableMenu,\n      },\n      { name: '字段', icon: <WidgetsOutlinedIcon />, handler: NOOP },\n      { name: '筛选', icon: <FilterListOutlinedIcon />, handler: NOOP },\n      { name: '排序', icon: <ImportExportIcon />, handler: NOOP },\n      { name: '搜索', icon: <SearchIcon />, handler: NOOP },\n      { name: '更多', icon: <MoreHorizIcon />, handler: NOOP },\n    ],\n    [handleClickGroupTableMenu],\n  );\n\n  const handlePvtTitleClick = useCallback(() => {\n    setPvtViews((prev) => {\n      return [prev[1], prev[0]];\n    });\n  }, [setPvtViews]);\n\n  const toolbarActionsMenuButtonsReElem = useMemo(() => {\n    return toolbarActionsMenuData.map((actionMenu) => {\n      const { name, icon: IconElem, handler } = actionMenu;\n      return (\n        <Button\n          onClick={handler}\n          // variant='contained'\n          // color='primary'\n          size='small'\n          className='pvt-toolbarActionsBtn'\n          startIcon={IconElem ? IconElem : null}\n          key={name}\n        >\n          {name}\n        </Button>\n      );\n    });\n  }, [toolbarActionsMenuData]);\n\n  const toolbarRootReElem = useMemo(() => {\n    // todo 右边的按钮组不能一直右对齐，对于很多列的情况和很少分组的情况，最右边太远了\n    return (\n      <div className='pvt-toolbar'>\n        <div className='pvt-toolbarTitle'>\n          <Button\n            onClick={handlePvtTitleClick}\n            // variant='contained'\n            // color='primary'\n            startIcon={<ViewListOutlinedIcon />}\n            endIcon={<ExpandMoreIcon />}\n          >\n            {pvtViews[0].name}\n          </Button>\n        </div>\n        <div\n          className={cx({\n            'pvt-toolbarActionsMenuButtons': !showToolbarActionsMenuButtons,\n          })}\n        >\n          {toolbarActionsMenuButtonsReElem}\n        </div>\n      </div>\n    );\n  }, [\n    handlePvtTitleClick,\n    pvtViews,\n    showToolbarActionsMenuButtons,\n    toolbarActionsMenuButtonsReElem,\n  ]);\n\n  return showToolbar ? toolbarRootReElem : null;\n}\n\nexport default Toolbar;\n","import * as React from 'react';\nimport * as ReactTable from 'react-table';\nimport { ensurePluginOrder } from 'react-table';\n\nimport type { TableInstance } from '../../types/Table';\n\nconst useInstance = <D extends {}>(instance: TableInstance<D>) => {\n  const { data, expandedRows, toggleRowExpanded, plugins } = instance;\n\n  React.useLayoutEffect(() => {\n    expandedRows.map(({ id }) => {\n      return toggleRowExpanded(id as any, true);\n    });\n  }, [data, toggleRowExpanded]); // eslint-disable-line\n\n  ensurePluginOrder(plugins, ['useExpanded'], 'useExpandAll');\n};\n\nexport const useExpandAll = (hooks: ReactTable.Hooks<any>) => {\n  hooks.useInstance.push(useInstance as any);\n};\n\nuseExpandAll.pluginName = 'useExpandAll';\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nexport const HeaderCellContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-right: 12px;\n  }\n`;\n\nexport const HeaderCell: React.FunctionComponent<any> = ({ icon, content }) => (\n  <HeaderCellContainer>\n    {icon}\n    {content}\n  </HeaderCellContainer>\n);\n","import { debounce } from \"lodash\";\nimport * as React from \"react\";\n\nimport { Icon, TextInput } from \"@habx/ui-core\";\n\nimport { ColumnInstance } from \"../../types/Table\";\n\nexport const TextFilter: React.FunctionComponent<{\n  column: ColumnInstance<any>;\n}> = ({ column }) => {\n  const [liveValue, setLiveValue] = React.useState<string | undefined>(\n    column.filterValue\n  );\n\n  const handleSetFilter = React.useMemo(() => {\n    if (!column.setFilter) {\n      return null;\n    }\n    return debounce(column.setFilter, 500);\n  }, [column.setFilter]);\n\n  if (!column.setFilter) {\n    return null;\n  }\n\n  const handleSetValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value || undefined;\n    setLiveValue(value);\n    handleSetFilter!(value);\n  };\n\n  return (\n    <TextInput\n      bare\n      small\n      elementLeft={<Icon icon=\"search\" />}\n      value={liveValue}\n      onChange={handleSetValue}\n      placeholder=\"Rechercher\"\n    />\n  );\n};\n","import { isEqual } from \"lodash\";\nimport * as ReactTable from \"react-table\";\n\nimport { TableInstance, TableState } from \"../../types/Table\";\n\nconst EMPTY_FILTERS: any[] = [];\n\nconst useControlledState = <D extends {}>(\n  rawState: ReactTable.TableState<D>,\n  meta: ReactTable.MetaBase<D>\n) => {\n  const instance = meta.instance as TableInstance<D>;\n  const state = rawState as TableState<D>;\n  const { filters } = instance;\n  return {\n    ...state,\n    filters: filters ?? EMPTY_FILTERS,\n  };\n};\n\nconst reducer = <D extends {}>(\n  rawState: ReactTable.TableState<D>,\n  action: ReactTable.ActionType,\n  rawPrevState?: ReactTable.TableState<D>,\n  rawInstance?: ReactTable.TableInstance<D>\n) => {\n  const state = rawState as TableState<D>;\n  const prevState = rawPrevState as TableState<D>;\n\n  const {\n    onFiltersChange,\n    filters,\n    shouldIgnoreEmptyFilter = true,\n  } = rawInstance as TableInstance<D>;\n  const initialized = !(!prevState?.filters && filters);\n  if (initialized && !isEqual(prevState?.filters, state.filters)) {\n    let newFilters = state.filters;\n    if (shouldIgnoreEmptyFilter) {\n      newFilters = state.filters.filter(({ value }) =>\n        Array.isArray(value) ? !!value.length : !!value\n      );\n    }\n    onFiltersChange?.(newFilters);\n  }\n\n  return state;\n};\n\nexport const useControlledFilters = (hooks: ReactTable.Hooks<any>) => {\n  hooks.stateReducers.push(reducer);\n  hooks.useControlledState.push(useControlledState);\n};\n\nuseControlledFilters.pluginName = \"useControlledFilters\";\n","import * as ReactTable from \"react-table\";\n\nimport { TableInstance, TableState } from \"../../types/Table\";\n\nconst useControlledState = <D extends {}>(\n  rawState: ReactTable.TableState<D>,\n  meta: ReactTable.MetaBase<D>\n) => {\n  const instance = meta.instance as TableInstance<D>;\n  const state = rawState as TableState<D>;\n  const { pagination } = instance;\n  return {\n    ...state,\n    ...pagination,\n  };\n};\n\nconst useInstance = <D extends {}>(\n  rawInstance: ReactTable.TableInstance<D>\n) => {\n  const instance = rawInstance as TableInstance<D>;\n  const { onPaginationChange, state } = instance;\n  if (onPaginationChange !== undefined) {\n    instance.gotoPage = (updater) => {\n      onPaginationChange({\n        pageIndex:\n          typeof updater === \"number\" ? updater : updater(state.pageIndex),\n        pageSize: instance.state.pageSize,\n      });\n    };\n    instance.setPageSize = (pageSize: number) => {\n      onPaginationChange({\n        pageIndex: instance.state.pageIndex,\n        pageSize,\n      });\n    };\n  }\n};\n\nexport const useControlledPagination = (hooks: ReactTable.Hooks<any>) => {\n  hooks.useInstance.push(useInstance);\n  hooks.useControlledState.push(useControlledState);\n};\n\nuseControlledPagination.pluginName = \"useControlledPagination\";\n","import { isEqual } from \"lodash\";\nimport * as ReactTable from \"react-table\";\n\nimport { TableInstance, TableState } from \"../../types/Table\";\n\nconst EMPTY_SORT_BY: any[] = [];\n\nconst useControlledState = <D extends {}>(\n  rawState: ReactTable.TableState<D>,\n  meta: ReactTable.MetaBase<D>\n) => {\n  const instance = meta.instance as TableInstance<D>;\n  const state = rawState as TableState<D>;\n  const { sortBy } = instance;\n  return {\n    ...state,\n    sortBy: sortBy ?? EMPTY_SORT_BY,\n  };\n};\n\nconst reducer = <D extends {}>(\n  rawState: ReactTable.TableState<D>,\n  action: ReactTable.ActionType,\n  rawPrevState?: ReactTable.TableState<D>,\n  rawInstance?: ReactTable.TableInstance<D>\n) => {\n  const state = rawState as TableState<D>;\n  const prevState = rawPrevState as TableState<D>;\n\n  const instance = rawInstance as TableInstance<D>;\n  const initialized = !(!prevState?.sortBy && instance.sortBy);\n  if (initialized && !isEqual(prevState?.sortBy, state.sortBy)) {\n    instance?.onSortByChange?.(state.sortBy);\n  }\n\n  return state;\n};\n\nexport const useControlledSortBy = (hooks: ReactTable.Hooks<any>) => {\n  hooks.stateReducers.push(reducer);\n  hooks.useControlledState.push(useControlledState);\n};\n\nuseControlledSortBy.pluginName = \"useControlledFilters\";\n","export const zIndex = {\n  checkbox: 100,\n  overlay: 100000,\n};\n","import styled from \"styled-components\";\n\nimport { zIndex } from \"../../_internal/zIndex\";\n\nexport const CheckboxContainer = styled.div`\n  z-index: ${zIndex.checkbox};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n\n  // Prevent onRowClick trigger when clicking on cell\n  &:before {\n    content: \" \";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n  }\n`;\n","import * as React from \"react\";\n\nimport { Checkbox, Tooltip } from \"@habx/ui-core\";\n\nimport {\n  CellProps,\n  HeaderProps,\n  Hooks,\n  TableInstance,\n} from \"../../types/Table\";\n\nimport { CheckboxContainer } from \"./useRowSelect.style\";\n\nexport const useRowSelect = <D extends object>(hooks: Hooks<D>) => {\n  hooks.visibleColumns.push((columns, { instance: _instance }) => {\n    const instance = _instance as TableInstance<D>;\n    return [\n      {\n        id: \"selection\",\n        Header: ({ getToggleAllRowsSelectedProps }: HeaderProps<D>) =>\n          instance.canSelectAll === false ? null : (\n            <Tooltip title=\"Tout sélectionner\">\n              <CheckboxContainer onClick={(e) => e.stopPropagation()}>\n                <Checkbox small {...getToggleAllRowsSelectedProps()} />\n              </CheckboxContainer>\n            </Tooltip>\n          ),\n        Cell: ({ row, getCheckboxProps = () => ({}) }: CellProps<D>) => {\n          return (\n            <CheckboxContainer onClick={(e) => e.stopPropagation()}>\n              <Checkbox\n                small\n                {...(row.getToggleRowSelectedProps\n                  ? row.getToggleRowSelectedProps()\n                  : {})}\n                {...getCheckboxProps(row)}\n              />\n            </CheckboxContainer>\n          );\n        },\n      },\n      ...columns,\n    ];\n  });\n};\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport * as ReactTable from 'react-table';\n\nimport { HeaderCell } from '../Table/HeaderCell';\nimport { TextFilter } from '../filter/TextFilter';\nimport { IMEXColumn } from '../imex/imex.interface';\nimport { useControlledFilters } from '../plugin/useControlledFilters';\nimport { useControlledPagination } from '../plugin/useControlledPagination';\nimport { useControlledSortBy } from '../plugin/useControlledSortBy';\nimport { useRowSelect } from '../plugin/useRowSelect';\nimport type {\n  Column,\n  ColumnEnabledCondition,\n  TableInstance,\n  TableOptions,\n} from '../types/Table';\n\n/** 空数组 [] */\nconst EMPTY_DATA: any[] = [];\n\nconst COLUMN_ENABLED_CONDITION: ColumnEnabledCondition[] = ['always'];\n\n/**\n * 封装了react-table的useTable hook，进行配置预处理。\n */\nexport const useTable = <D extends object = {}>(\n  options: TableOptions<D>,\n  ...plugins: Array<ReactTable.PluginHook<D>>\n) => {\n  const {\n    data: rawData,\n    columns: rawColumns,\n    defaultColumn: rawDefaultColumn,\n    ...restOptions\n  } = options;\n\n  const data: D[] = rawData ?? EMPTY_DATA;\n\n  const columns = useMemo<ReactTable.Column<D>[]>(() => {\n    const isValidColumn = (column: Column<D> | IMEXColumn<D>) =>\n      COLUMN_ENABLED_CONDITION.includes(column.enabled ?? 'always');\n\n    const preProcessColumn = (\n      column: Column<D> | IMEXColumn<D>,\n    ): ReactTable.Column<D> => {\n      const {\n        HeaderIcon,\n        Header,\n        id,\n        columns: subColumns,\n        ...restColumn\n      } = column;\n\n      const preProcessedColumn: ReactTable.Column<D> = {\n        ...(restColumn as ReactTable.Column<D>),\n        id: (id ?? restColumn.accessor) as ReactTable.IdType<D>,\n        Header: HeaderIcon\n          ? () => <HeaderCell icon={HeaderIcon} content={Header} />\n          : (Header as ReactTable.Renderer<ReactTable.HeaderProps<D>>),\n      };\n\n      if (Array.isArray(subColumns)) {\n        return {\n          ...preProcessedColumn,\n          columns: (subColumns as (Column<D> | IMEXColumn<D>)[])\n            .filter(isValidColumn)\n            .map(preProcessColumn),\n        };\n      }\n\n      return preProcessedColumn;\n    };\n\n    return rawColumns.filter(isValidColumn).map(preProcessColumn);\n  }, [rawColumns]);\n\n  const defaultColumn = useMemo<Partial<Column<D>>>(\n    () => ({\n      Filter: TextFilter,\n      ...rawDefaultColumn,\n    }),\n    [rawDefaultColumn],\n  );\n\n  if (plugins.find((plugin) => plugin.pluginName === 'useRowSelect')) {\n    plugins.push(useRowSelect as unknown as ReactTable.PluginHook<D>);\n  }\n\n  if (options.manualPagination) {\n    plugins.push(\n      useControlledPagination as unknown as ReactTable.PluginHook<D>,\n    );\n  }\n\n  if (options.manualFilters) {\n    plugins.push(useControlledFilters as unknown as ReactTable.PluginHook<D>);\n  }\n\n  if (options.manualSortBy) {\n    plugins.push(useControlledSortBy as unknown as ReactTable.PluginHook<D>);\n  }\n\n  return ReactTable.useTable<D>(\n    {\n      data,\n      columns,\n      defaultColumn: defaultColumn as Partial<ReactTable.Column<D>>,\n      ...restOptions,\n    },\n    ...plugins,\n  ) as any as TableInstance<D>;\n};\n","import * as React from \"react\";\n\nexport const useMergedRef = <RefElement>(\n  ref: React.Ref<RefElement> | null | undefined\n): React.RefObject<RefElement> => {\n  const innerRef = React.useRef<RefElement>(null);\n\n  return (ref ? ref : innerRef) as React.RefObject<RefElement>;\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Loader, theme } from \"@habx/ui-core\";\n\nexport const LoadingContainer = styled.div`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: ${theme.color(\"background\")};\n  opacity: 0.8;\n`;\n\nexport const LoadingOverlay: React.VoidFunctionComponent = () => (\n  <LoadingContainer>\n    <Loader size=\"large\" outline />\n  </LoadingContainer>\n);\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { theme } from \"@habx/ui-core\";\n\nimport { TableInstance } from \"../types/Table\";\n\nconst LoaderContainer = styled.div`\n  margin: 4px 12px;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  display: grid;\n  grid-template-columns: var(--table-grid-template-columns);\n  grid-gap: var(--table-grid-gap);\n`;\n\nconst Loader = styled.div`\n  border-radius: 3px;\n  max-width: 400px;\n  height: 50%;\n  max-height: 16px;\n  background: linear-gradient(\n    to right,\n    ${theme.neutralColor(200)} 20%,\n    ${theme.neutralColor(300)} 50%,\n    ${theme.neutralColor(200)} 80%\n  );\n  animation: fading 2s linear infinite;\n  background-size: 500px 100px;\n\n  @keyframes fading {\n    0% {\n      background-position: -250px 0;\n    }\n    100% {\n      background-position: 250px 0;\n    }\n  }\n`;\n\nexport const LoadingRow: React.FunctionComponent<{\n  instance: TableInstance<any>;\n}> = ({ instance }) => (\n  <LoaderContainer>\n    {instance.columns.map((column) => (\n      <Loader key={column.id} style={{ width: column.width }} />\n    ))}\n  </LoaderContainer>\n);\n","import styled, { css } from 'styled-components';\n\nimport { Text, theme } from '@habx/ui-core';\n\nimport { zIndex } from '../_internal/zIndex';\nimport { CheckboxContainer } from '../plugin/useRowSelect/useRowSelect.style';\n\nconst alignItems = css`\n  &[data-align='center'] {\n    justify-content: center;\n  }\n\n  &[data-align='left'] {\n    justify-content: flex-start;\n  }\n\n  &[data-align='right'] {\n    justify-content: flex-end;\n  }\n`;\n\n/**\n * * 这里是`<table>`元素，默认布局是 `display: grid`\n */\nexport const TableContent = styled.table`\n  position: relative;\n  display: grid;\n  border-collapse: collapse;\n\n  overflow-y: hidden;\n  overflow-x: auto;\n\n  font-family: ${theme.font()};\n`;\n\nexport const TableHead = styled.thead`\n  display: block;\n\n  margin-right: var(--table-scrollbar-width);\n\n  ${CheckboxContainer} {\n    margin-top: 4px;\n  }\n`;\n\nexport const TableHeadRow = styled.tr`\n  display: grid;\n  grid-template-columns: var(--table-grid-template-columns);\n  grid-gap: var(--table-grid-gap);\n\n  border-left: solid 1px ${theme.color('secondary', { opacity: 0.1 })};\n`;\n\nexport const TableHeadCell = styled.th<{ size: number }>`\n  display: flex;\n  flex-direction: column;\n\n  padding: 12px;\n  grid-column-end: span ${({ size }) => size};\n  text-align: left;\n\n  --table-header-font-size: 12px;\n  --table-header-color: ${theme.neutralColor(400)};\n\n  border-top: solid 1px ${theme.color('secondary', { opacity: 0.1 })};\n  border-right: solid 1px ${theme.color('secondary', { opacity: 0.1 })};\n  border-bottom: solid 1px ${theme.color('secondary', { opacity: 0.1 })};\n\n  &[data-big='true'] {\n    font-size: 16px;\n    border-bottom: solid 1px ${theme.neutralColor(300)};\n    --table-header-font-size: 16px;\n    --table-header-color: ${theme.neutralColor(900)};\n  }\n`;\n\nexport const TableBodyRow = styled.tr`\n  display: grid;\n\n  grid-template-columns: var(--table-grid-template-columns);\n  grid-gap: var(--table-grid-gap);\n\n  /* border-bottom: solid 1px ${theme.neutralColor(900, { opacity: 0.1 })}; */\n\n  &[data-active='true'] {\n    background-color: ${theme.neutralColor(100)};\n\n    &[data-clickable='true'] {\n      &:hover {\n        background-color: ${theme.neutralColor(200)};\n      }\n    }\n  }\n\n  &:not([data-active='true'])[data-clickable='true'] {\n    &:hover {\n      background-color: ${theme.neutralColor(200)};\n    }\n  }\n\n  &[data-clickable='true'] {\n    cursor: pointer;\n  }\n\n  &[data-section='true'] {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background-color: ${theme.color('background')};\n    /* border-bottom: solid 1px ${theme.color('secondary', {\n      opacity: 0.1,\n    })}; */\n    border-top: solid 1px ${theme.color('secondary', { opacity: 0.1 })};\n    border-left: solid 1px ${theme.color('secondary', { opacity: 0.1 })};\n  }\n`;\n\nexport const TableBody = styled.tbody<{ rowsHeight?: number }>`\n  // https://stackoverflow.com/questions/14962468/how-can-i-combine-flexbox-and-vertical-scroll-in-a-full-height-app\n  flex: 1 1 auto;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 100%;\n  width: fit-content;\n  overflow-x: hidden;\n  overflow-y: auto;\n  scroll-margin: var(--table-scrollbar-width);\n\n  --table-body-font-size: 14px;\n  ${({ rowsHeight }) =>\n    rowsHeight &&\n    css`\n      ${TableBodyRow} {\n        height: ${rowsHeight}px;\n      }\n    `}\n\n  & > tr:not(.subRowCompTr) {\n    border-left: solid 1px ${theme.neutralColor(900, { opacity: 0.1 })};\n  }\n`;\n\n/** `<table>`的容器元素 */\nexport const TableContainer = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  height: 100%;\n  width: 100%;\n\n  /* --table-grid-gap: 0 12px; */\n\n  &[data-scrollable='true'] {\n    ${TableBody} {\n      overflow-y: scroll;\n    }\n  }\n  &[data-virtualized='true'] {\n    > div {\n      width: 100% !important;\n    }\n    // Take full available height only if virtualized\n    ${TableContent} {\n      flex: 1 1 auto;\n      display: flex;\n      flex-direction: column;\n      min-height: 0;\n    }\n    ${TableBody} {\n      overflow-y: hidden;\n      > div {\n        overflow-x: hidden !important;\n      }\n    }\n  }\n`;\n\nexport const TableBodySubRow = styled.tr`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TableCellZoom = styled.div`\n  display: none;\n\n  margin: 0 32px;\n\n  z-index: ${zIndex.overlay};\n\n  position: absolute;\n  top: calc(100% + 8px);\n\n  background: ${theme.color('background')};\n\n  box-shadow: ${theme.shadow('regular')};\n`;\n\nexport const TableCellContainer = styled.td`\n  position: relative;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n\n  padding: 12px;\n  /* border: solid 1px ${theme.neutralColor(900, { opacity: 0.1 })}; */\n  border-bottom: solid 1px ${theme.neutralColor(900, { opacity: 0.1 })};\n  border-right: solid 1px ${theme.neutralColor(900, { opacity: 0.1 })};\n\n  &[data-large='true'] {\n    align-items: flex-start;\n    * {\n      text-overflow: ellipsis;\n      flex-flow: nowrap;\n      overflow: hidden;\n      white-space: nowrap;\n    }\n    &:hover {\n      background: ${theme.color('secondary', { opacity: 0.1 })};\n      + ${TableCellZoom} {\n        display: block;\n      }\n    }\n  }\n\n  img {\n    align-items: flex-start;\n  }\n\n  &[data-density='low'] {\n    padding: 18px 12px;\n  }\n\n  &[data-density='high'] {\n    padding: 6px 12px;\n  }\n\n  ${alignItems};\n\n  > div {\n    font-size: var(--table-body-font-size);\n    color: ${theme.neutralColor(700)};\n    width: 100%;\n  }\n`;\n\nexport const TableHeaderCellContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  user-select: none;\n\n  width: 100%;\n  height: 100%;\n  min-width: 0;\n\n  font-size: var(--table-header-font-size);\n  color: var(--table-header-color);\n\n  ${alignItems}\n`;\n\n/* export const TableHeadCellContent = styled.span` */\nexport const TableHeadCellContent = styled(Text)`\n  /* user-select: none; */\n  position: relative;\n  width: 100%;\n  overflow-x: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  > * {\n    display: inline-flex;\n  }\n\n  & > span:last-child {\n    padding-left: 8px;\n  }\n\n  /* font-size: var(--table-header-font-size) !important; */\n  /* color: var(--table-header-color); */\n`;\n\nexport const TableHeaderCellSort = styled.div`\n  margin-top: 6px;\n  min-width: 0;\n`;\n\nexport const TableOptionBar = styled.div`\n  margin-top: auto;\n  height: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-top: solid 1px ${theme.neutralColor(300)};\n`;\n\nexport const ExpandToggleContainer = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n`;\n\nexport const NoDataContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 200px;\n\n  flex: 1 1 auto;\n  flex-direction: column;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n\n  position: relative;\n`;\n\nexport const SearchBarContainer = styled.div`\n  margin: 12px 8px;\n`;\n\nexport const TableFooterContainer = styled.tfoot`\n  --table-footer-font-size: 12px;\n  --table-footer-color: ${theme.neutralColor(500)};\n`;\n\nexport const TableFooterRow = styled.tr`\n  display: grid;\n\n  grid-template-columns: var(--table-grid-template-columns);\n  grid-gap: var(--table-grid-gap);\n\n  font-size: var(--table-footer-font-size);\n  color: var(--table-footer-color);\n\n  border-top: solid 1px ${theme.neutralColor(900, { opacity: 0.2 })};\n`;\n","import * as React from \"react\";\n\nimport { TableCellContainer, TableCellZoom } from \"./Table.style\";\n\nexport const TableCell: React.FunctionComponent<TableCellProps> = ({\n  children,\n  ...props\n}) => {\n  const [isLargerThanCell, setLargerThanCell] = React.useState(false);\n  const cellRefCallback = React.useCallback(\n    (cellRef: HTMLTableCellElement | null) => {\n      if (\n        ((cellRef?.firstChild as HTMLDivElement)?.clientHeight ?? 0) >\n        (cellRef?.clientHeight ?? 0)\n      ) {\n        setLargerThanCell(true);\n      }\n    },\n    []\n  );\n\n  return (\n    <React.Fragment>\n      <TableCellContainer\n        ref={cellRefCallback}\n        {...props}\n        data-large={isLargerThanCell}\n      >\n        {children}\n      </TableCellContainer>\n      {isLargerThanCell && (\n        <TableCellZoom>\n          <TableCellContainer {...props}>{children}</TableCellContainer>\n        </TableCellZoom>\n      )}\n    </React.Fragment>\n  );\n};\n\ninterface TableCellProps extends React.HTMLAttributes<HTMLTableCellElement> {}\n","import * as React from \"react\";\nimport { HeaderGroup, emptyRenderer } from \"react-table\";\n\nimport { TableFooterRow, TableFooterContainer } from \"./Table.style\";\nimport { TableCell } from \"./TableCell\";\n\nexport const TableFooter = <D extends {}>({\n  footerGroups,\n}: React.PropsWithChildren<TableFooterProps<D>>) => {\n  return (\n    <TableFooterContainer>\n      {footerGroups.map((group) => {\n        if (\n          group.headers.every((column) => {\n            const Footer = (column as unknown as { Footer: Function }).Footer;\n            return !Footer || Footer === emptyRenderer;\n          })\n        ) {\n          return null;\n        }\n        return (\n          <TableFooterRow {...group.getFooterGroupProps()}>\n            {group.headers.map((column) => {\n              if (column.headers) {\n                return null; // TODO: manage footer for sub columns\n              }\n              return (\n                <TableCell {...column.getFooterProps()}>\n                  {column.render(\"Footer\")}\n                </TableCell>\n              );\n            })}\n          </TableFooterRow>\n        );\n      })}\n    </TableFooterContainer>\n  );\n};\n\ninterface TableFooterProps<D extends {}> {\n  footerGroups: HeaderGroup<D>[];\n}\n","import styled from \"styled-components\";\n\nimport { IconButton, Text, theme } from \"@habx/ui-core\";\n\nexport const PaginationContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px 12px;\n  width: 100%;\n`;\n\nexport const PagesPagination = styled(Text).attrs(() => ({ type: \"caption\" }))`\n  padding-top: 2px;\n`;\n\nexport const PagesChevrons = styled.div`\n  display: flex;\n  width: 64px;\n  justify-content: space-between;\n  font-size: 24px;\n  margin-left: auto;\n`;\n\nexport const PageSizeContainer = styled.div`\n  margin-left: 12px;\n  span {\n    color: ${theme.neutralColor(400)};\n    font-size: 14px;\n  }\n`;\n\nexport const DensityIcon = styled(IconButton).attrs(() => ({ tiny: true }))`\n  &[data-active=\"true\"] {\n    color: ${theme.color(\"primary\")};\n    background-color: ${theme.color(\"primary\", { variation: \"calmer\" })};\n    transition: all ease-in-out 150ms;\n  }\n`;\n\nexport const DensityContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 12px;\n  padding: 8px 12px;\n`;\n","import * as React from \"react\";\n\nimport { Tooltip } from \"@habx/ui-core\";\n\nimport { TableInstance } from \"../../types/Table\";\n\nimport { DensityContainer, DensityIcon } from \"./TableOptions.style\";\n\nexport const TableDensity: React.FunctionComponent<DensityProps> = ({\n  instance,\n}) => (\n  <DensityContainer>\n    <Tooltip small title=\"Low\">\n      <DensityIcon\n        icon=\"density-low\"\n        data-active={instance.state.density === \"low\"}\n        onClick={() => instance.setDensity(\"low\")}\n      />\n    </Tooltip>\n    <Tooltip small title=\"Medium\">\n      <DensityIcon\n        icon=\"density-medium\"\n        data-active={instance.state.density === \"medium\"}\n        onClick={() => instance.setDensity(\"medium\")}\n      />\n    </Tooltip>\n    <Tooltip small title=\"High\">\n      <DensityIcon\n        icon=\"density-high\"\n        data-active={instance.state.density === \"high\"}\n        onClick={() => instance.setDensity(\"high\")}\n      />\n    </Tooltip>\n  </DensityContainer>\n);\n\ninterface DensityProps {\n  instance: TableInstance<any>;\n}\n","import * as React from \"react\";\n\nimport { Select, RoundIconButton, Tooltip } from \"@habx/ui-core\";\n\nimport { TableInstance } from \"../../types/Table\";\n\nimport {\n  PagesChevrons,\n  PageSizeContainer,\n  PagesPagination,\n  PaginationContainer,\n} from \"./TableOptions.style\";\n\nconst PAGE_SIZE_OPTIONS = [10, 20, 30, 40, 50].map((value) => ({\n  value,\n  label: `${value}`,\n}));\n\nexport const TablePagination: React.FunctionComponent<PaginationProps> = ({\n  instance,\n  children,\n}) => (\n  <PaginationContainer>\n    {instance.pageCount > 1 && (\n      <React.Fragment>\n        <PagesPagination>\n          {instance.state.pageIndex * instance.state.pageSize + 1} -{\" \"}\n          {instance.state.pageIndex * instance.state.pageSize +\n            instance.page.length}{\" \"}\n          / {instance.total ?? instance.rows.length}\n        </PagesPagination>\n        <PageSizeContainer>\n          <Select\n            tiny\n            canReset={false}\n            value={instance.state.pageSize}\n            onChange={(size) => instance.setPageSize(size as number)}\n            options={\n              instance.pageSizeOptions?.map((value) => ({\n                value,\n                label: `${value}`,\n              })) ?? PAGE_SIZE_OPTIONS\n            }\n          />\n        </PageSizeContainer>\n        {children}\n        <PagesChevrons>\n          <Tooltip\n            title={`${\n              (instance.state.pageIndex - 1) * instance.state.pageSize + 1\n            } - ${instance.state.pageIndex * instance.state.pageSize}`}\n            small\n            disabled={!instance.canPreviousPage}\n          >\n            <RoundIconButton\n              small\n              icon=\"chevron-west\"\n              disabled={!instance.canPreviousPage}\n              onClick={() => instance.gotoPage((page) => page - 1)}\n            />\n          </Tooltip>\n          <Tooltip\n            small\n            disabled={!instance.canNextPage}\n            title={`${\n              (instance.state.pageIndex + 1) * instance.state.pageSize + 1\n            } - ${\n              instance.rows.length <\n              (instance.state.pageIndex + 2) * instance.state.pageSize\n                ? instance.rows.length\n                : (instance.state.pageIndex + 2) * instance.state.pageSize\n            }`}\n          >\n            <RoundIconButton\n              small\n              icon=\"chevron-east\"\n              disabled={!instance.canNextPage}\n              onClick={() => instance.gotoPage((page) => page + 1)}\n            />\n          </Tooltip>\n        </PagesChevrons>\n      </React.Fragment>\n    )}\n  </PaginationContainer>\n);\n\ninterface PaginationProps {\n  instance: TableInstance<any>;\n}\n","import cx from 'clsx';\nimport * as React from 'react';\n\nimport { Icon, Text } from '@habx/ui-core';\n\nimport type { ColumnInstance, Row, TableInstance } from '../types/Table';\nimport type { RowCharacteristics } from './Table.interface';\nimport {\n  ExpandToggleContainer,\n  TableBodyRow,\n  TableBodySubRow,\n} from './Table.style';\nimport { TableCell } from './TableCell';\n\nexport const TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  TableRowProps<any>\n>((props, ref) => {\n  const {\n    prepareRow,\n    getRowCharacteristics,\n    row,\n    instance,\n    index,\n    onClick,\n\n    renderRowSubComponent,\n    isRowSubComponentAboveRow,\n    ...rest\n  } = props;\n\n  prepareRow(row);\n\n  const {\n    isActive = false,\n    isInteractive = true,\n    backgroundColor,\n  } = React.useMemo<Partial<RowCharacteristics>>(() => {\n    let temp: Partial<RowCharacteristics> = {};\n\n    if (getRowCharacteristics) {\n      temp = getRowCharacteristics(row);\n    }\n\n    return temp;\n  }, [getRowCharacteristics, row]);\n\n  const rowProps = row.getRowProps();\n\n  const style = React.useMemo<React.CSSProperties>(\n    () => ({\n      ...(rest.style ?? {}),\n      ...(rowProps.style ?? {}),\n      ...(backgroundColor ? { backgroundColor } : {}),\n    }),\n    [backgroundColor, rest.style, rowProps.style],\n  );\n\n  return (\n    <React.Fragment>\n      {\n        // 每行元素的展开行元素\n        renderRowSubComponent &&\n          (row.isExpanded || (!row.isExpanded && row.isGrouped)) &&\n          isRowSubComponentAboveRow && (\n            <TableBodySubRow className='subRowCompTr'>\n              {renderRowSubComponent(row)}\n            </TableBodySubRow>\n          )\n      }\n      <TableBodyRow\n        {...rowProps}\n        {...rest}\n        ref={ref}\n        style={style}\n        key={`row-${index}`}\n        onClick={onClick && !row.isGrouped ? (e) => onClick(row, e) : undefined}\n        data-clickable={!row.isGrouped && !!onClick && isInteractive}\n        data-section={row.isExpanded}\n        data-active={isActive}\n        className={cx({\n          'pvt-row-GroupedAndCollapsed': !row.isExpanded && row.isGrouped,\n        })}\n      >\n        {row.cells.map((cell, cellIndex) => {\n          const expandedToggleProps = row.getToggleRowExpandedProps\n            ? row.getToggleRowExpandedProps()\n            : {};\n\n          const column = cell.column as ColumnInstance<any>;\n\n          const cellProps = {\n            ...cell.getCellProps(),\n            'data-density': instance.state.density,\n            'data-align': column.align ?? 'flex-start',\n          };\n\n          if (cell.isGrouped) {\n            return (\n              <TableCell\n                data-section='true'\n                {...cellProps}\n                key={`cell-${cellIndex}`}\n              >\n                <ExpandToggleContainer {...expandedToggleProps}>\n                  {row.isExpanded ? (\n                    <Icon icon='chevron-south' />\n                  ) : (\n                    <Icon icon='chevron-east' />\n                  )}\n                </ExpandToggleContainer>\n                {cell.render('Cell')}\n              </TableCell>\n            );\n          }\n\n          if (cell.isAggregated) {\n            return (\n              <TableCell\n                data-section='true'\n                {...cellProps}\n                key={`cell-${cellIndex}`}\n              >\n                {cell.render('Aggregated')}\n              </TableCell>\n            );\n          }\n\n          if (cell.isPlaceholder) {\n            return <TableCell {...cellProps} key={`cell-${cellIndex}`} />;\n          }\n\n          return (\n            <TableCell {...cellProps} key={`cell-${cellIndex}`}>\n              <Text variation='title'>{cell.render('Cell')}</Text>\n            </TableCell>\n          );\n        })}\n      </TableBodyRow>\n      {\n        // 每行元素的展开行元素\n        renderRowSubComponent &&\n          !isRowSubComponentAboveRow &&\n          row.isExpanded && (\n            <TableBodySubRow>{renderRowSubComponent(row)}</TableBodySubRow>\n          )\n      }\n    </React.Fragment>\n  );\n});\n\ninterface TableRowProps<D extends {}>\n  extends Omit<React.HTMLAttributes<HTMLTableRowElement>, 'onClick'> {\n  prepareRow: (row: Row<D>) => void;\n  getRowCharacteristics?: (row: Row<D>) => Partial<RowCharacteristics>;\n  row: Row<D>;\n  instance: TableInstance<D>;\n  index: number;\n  onClick?: (row: Row<D>, event: React.MouseEvent<HTMLTableRowElement>) => void;\n  renderRowSubComponent?: (row: Row<D>) => React.ReactNode;\n  isRowSubComponentAboveRow?: boolean;\n}\n","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { FixedSizeList, ListChildComponentProps } from 'react-window';\nimport InfiniteLoader from 'react-window-infinite-loader';\n\nimport { Icon, SearchBar, Tooltip } from '@habx/ui-core';\n\nimport { useMergedRef } from '../_internal/useMergedRef';\nimport { ColumnInstance } from '../types/Table';\nimport { LoadingOverlay } from './LoadingOverlay';\nimport { LoadingRow } from './LoadingRow';\nimport { TableProps } from './Table.interface';\nimport {\n  NoDataContainer,\n  SearchBarContainer,\n  TableBody,\n  TableContainer,\n  TableContent,\n  TableHead,\n  TableHeadCell,\n  TableHeadCellContent,\n  TableHeadRow,\n  TableHeaderCellContainer,\n  TableHeaderCellSort,\n  TableOptionBar,\n} from './Table.style';\nimport { TableFooter } from './TableFooter';\nimport { TableDensity } from './TableOptions/TableDensity';\nimport { TablePagination } from './TableOptions/TablePagination';\nimport { TableRow } from './TableRow';\nimport { useGridTemplateColumns } from './hooks/useGridTemplateColumns';\nimport { useScrollbarWidth } from './hooks/useScrollbarWidth';\nimport { useVirtualize } from './hooks/useVirtualize';\n\nconst DEFAULT_LOAD_MORE = () => {};\n\nexport const Table = <D extends {}>({\n  loading,\n  instance,\n  noDataComponent: NoDataComponent,\n  showToolbar = true,\n  showToolbarActionsMenuButtons = true,\n  pvtViews,\n  setPvtViews,\n  renderHeaderGroups,\n  onRowClick,\n  getRowCharacteristics,\n  renderRowSubComponent,\n  isRowSubComponentAboveRow,\n  setToggleShowGroupedTable,\n  rowsHeight: rawRowsHeight,\n  virtualized = false,\n}: React.PropsWithChildren<TableProps<D>>) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    page,\n    footerGroups,\n    prepareRow,\n    columns,\n    plugins,\n  } = instance;\n\n  const hasPagination = !!instance.pageOptions;\n  const hasDensity = !!instance.setDensity;\n\n  const gridTemplateColumns = useGridTemplateColumns({ plugins, columns });\n\n  const rowsHeight = !rawRowsHeight && virtualized ? 60 : rawRowsHeight;\n  const virtualState = useVirtualize(instance, { virtualized, rowsHeight });\n\n  const currentRows = hasPagination ? page : rows;\n  const isItemLoaded = (index: number) => !!currentRows[index];\n\n  const VirtualRow = ({\n    index: rowIndex,\n    style: rawStyle,\n  }: ListChildComponentProps) => {\n    const row = currentRows[rowIndex];\n\n    if (!row) {\n      return (\n        <div key={`loadingRow-${rowIndex}`} style={rawStyle}>\n          {instance.loadingRowComponent ?? <LoadingRow instance={instance} />}\n        </div>\n      );\n    }\n\n    return (\n      <TableRow\n        index={rowIndex}\n        row={row}\n        getRowCharacteristics={getRowCharacteristics}\n        instance={instance}\n        onClick={onRowClick}\n        style={rawStyle}\n        prepareRow={prepareRow}\n        renderRowSubComponent={renderRowSubComponent}\n        key={`row-${rowIndex}`}\n      />\n    );\n  };\n\n  const tableBodyRef = useMergedRef(virtualState.scrollContainerRef);\n  const scrollbarWidth = useScrollbarWidth(\n    (virtualized\n      ? tableBodyRef?.current?.firstElementChild\n      : tableBodyRef?.current) as HTMLElement,\n  );\n\n  const handleInputChangeGlobalSearch = useCallback(\n    (event) => instance.setGlobalFilter(event.target.value),\n    [instance],\n  );\n\n  // console.log(';;rows, ', rows);\n\n  const currentTableReElem = useMemo(() => {\n    // const firstPvtView = pvtViews[0];\n\n    let currPvtView = null;\n    // if (firstPvtView.type === 'kanban') {\n    //   currPvtView = <PersonalKanban />;\n    // }\n\n    // if (firstPvtView.type === 'table' || !firstPvtView.type) {\n    currPvtView = (\n      <>\n        <TableContent {...getTableProps()}>\n          <TableHead>\n            {renderHeaderGroups?.(headerGroups) ??\n              headerGroups.map((headerGroup, headerGroupIndex) => (\n                <TableHeadRow {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((col, headerCellIndex) => {\n                    const column = col as unknown as ColumnInstance<D>;\n\n                    const headerProps = column.getHeaderProps(\n                      ...(column.getSortByToggleProps\n                        ? [column.getSortByToggleProps()]\n                        : []),\n                    );\n\n                    const renderHeader =\n                      column.Header && column.render('Header');\n                    const isBig =\n                      headerGroups.length > 1 &&\n                      headerGroupIndex < headerGroups.length - 1;\n\n                    return (\n                      <TableHeadCell\n                        data-big={isBig}\n                        key={`headerCell-${headerCellIndex}`}\n                        size={column.columns?.length ?? 1}\n                      >\n                        {renderHeader && (\n                          // <Tooltip\n                          //   title={renderHeader as string}\n                          //   disabled={!isString(renderHeader) || isBig}\n                          // >\n                          <TableHeaderCellContainer\n                            data-align={column.align ?? 'flex-start'}\n                          >\n                            <TableHeadCellContent\n                              // variation='lowContrast'\n                              {...headerProps}\n                            >\n                              {renderHeader}\n                            </TableHeadCellContent>\n                            {column.isSorted && (\n                              <Icon\n                                icon={\n                                  column.isSortedDesc\n                                    ? 'arrow-south'\n                                    : 'arrow-north'\n                                }\n                              />\n                            )}\n                          </TableHeaderCellContainer>\n                          // </Tooltip>\n                        )}\n                        {column.canFilter ? (\n                          <TableHeaderCellSort>\n                            {column.render('Filter')}\n                          </TableHeaderCellSort>\n                        ) : null}\n                      </TableHeadCell>\n                    );\n                  })}\n                </TableHeadRow>\n              ))}\n          </TableHead>\n          {!loading && NoDataComponent && rows.length === 0 && (\n            <NoDataContainer>\n              <NoDataComponent />\n            </NoDataContainer>\n          )}\n          <TableBody\n            {...getTableBodyProps()}\n            ref={tableBodyRef}\n            rowsHeight={rowsHeight}\n          >\n            {virtualState.initialized ? (\n              <InfiniteLoader\n                isItemLoaded={isItemLoaded}\n                itemCount={instance.total ?? currentRows.length}\n                loadMoreItems={instance.loadMore ?? DEFAULT_LOAD_MORE}\n              >\n                {({ onItemsRendered, ref }) => {\n                  return (\n                    <FixedSizeList\n                      ref={ref}\n                      onItemsRendered={onItemsRendered}\n                      width={virtualState.width ?? 0}\n                      itemCount={instance.total ?? currentRows.length}\n                      height={virtualState.height ?? 0}\n                      itemSize={virtualState.itemSize ?? 0}\n                    >\n                      {VirtualRow}\n                    </FixedSizeList>\n                  );\n                }}\n              </InfiniteLoader>\n            ) : (\n              currentRows.map((row, rowIndex) => (\n                <TableRow\n                  index={rowIndex}\n                  row={row}\n                  getRowCharacteristics={getRowCharacteristics}\n                  instance={instance}\n                  onClick={onRowClick}\n                  prepareRow={prepareRow}\n                  renderRowSubComponent={renderRowSubComponent}\n                  isRowSubComponentAboveRow={isRowSubComponentAboveRow}\n                  key={`row-${rowIndex}`}\n                />\n              ))\n            )}\n          </TableBody>\n          <TableFooter<D> footerGroups={footerGroups} />\n        </TableContent>\n\n        {(hasPagination || hasDensity) && (\n          <TableOptionBar>\n            {hasPagination && (\n              <TablePagination instance={instance}>\n                {hasDensity && <TableDensity instance={instance} />}\n              </TablePagination>\n            )}\n            {!hasPagination && hasDensity && (\n              <TableDensity instance={instance} />\n            )}\n          </TableOptionBar>\n        )}\n      </>\n    );\n    // }\n\n    return currPvtView;\n  }, [\n    NoDataComponent,\n    VirtualRow,\n    currentRows,\n    footerGroups,\n    getRowCharacteristics,\n    getTableBodyProps,\n    getTableProps,\n    hasDensity,\n    hasPagination,\n    headerGroups,\n    instance,\n    isItemLoaded,\n    isRowSubComponentAboveRow,\n    loading,\n    onRowClick,\n    prepareRow,\n    renderHeaderGroups,\n    renderRowSubComponent,\n    rows.length,\n    rowsHeight,\n    tableBodyRef,\n    virtualState,\n  ]);\n\n  return (\n    <TableContainer\n      // 一个简单的div，style只是css变量，传到内层布局，内层是 display: grid\n      style={\n        {\n          '--table-grid-template-columns': gridTemplateColumns,\n          '--table-scrollbar-width': `${scrollbarWidth}px`,\n        } as React.CSSProperties\n      }\n      data-scrollable={!!scrollbarWidth}\n      data-virtualized={virtualized}\n    >\n      {loading && <LoadingOverlay />}\n\n      {currentTableReElem}\n    </TableContainer>\n  );\n};\n","import * as React from \"react\";\nimport { PluginHook } from \"react-table\";\n\nimport { ColumnInstance } from \"../../types/Table\";\n\ntype UseGridTemplateColumnsConfig = {\n  plugins: PluginHook<any>[];\n  columns: ColumnInstance<any>[];\n};\n\nconst DEFAULT_COLUMN_WIDTH = 100;\n\nexport const useGridTemplateColumns = ({\n  plugins,\n  columns,\n}: UseGridTemplateColumnsConfig) => {\n  const hasRowSelectPlugin = plugins.some(\n    (plugin) => plugin.pluginName === \"useRowSelect\"\n  );\n\n  return React.useMemo(() => {\n    const flatColumns = columns.flatMap((column) => column?.columns ?? column);\n\n    return `${hasRowSelectPlugin ? \"45px\" : \"\"} ${flatColumns\n      .map(({ minWidth, maxWidth }) => {\n        const screenWidth =\n          typeof window === \"object\" ? window.innerWidth : 10000;\n        const realMaxWidth =\n          maxWidth && maxWidth > screenWidth ? \"1fr\" : `${maxWidth}px`;\n        return `minmax(${\n          minWidth\n            ? `${minWidth}px`\n            : `${\n                maxWidth && maxWidth < DEFAULT_COLUMN_WIDTH\n                  ? maxWidth\n                  : DEFAULT_COLUMN_WIDTH\n              }px`\n        }, ${realMaxWidth})`;\n      })\n      .join(\" \")}`;\n  }, [columns, hasRowSelectPlugin]);\n};\n","import { isEmpty } from 'lodash';\nimport * as React from 'react';\n\nimport type { TableInstance } from '../../types/Table';\n\ninterface UseVirtualizeConfig {\n  virtualized?: boolean;\n  rowsHeight?: number;\n}\n\nexport const useVirtualize = <D extends object>(\n  instance: TableInstance<D>,\n  config: UseVirtualizeConfig,\n) => {\n  const scrollContainerRef = React.useRef<HTMLTableSectionElement>(null);\n\n  const [dimensions, setDimensions] = React.useState<{\n    height?: number;\n    width?: number;\n    itemSize?: number;\n  }>({});\n\n  const skip =\n    (!config.virtualized && !instance.infiniteScroll) ||\n    instance.rows.length === 0;\n\n  React.useEffect(() => {\n    if (!skip && isEmpty(dimensions)) {\n      setDimensions({\n        height: scrollContainerRef.current?.clientHeight,\n        width: scrollContainerRef.current?.clientWidth,\n        itemSize: config.rowsHeight,\n      });\n    }\n\n    const handleResize = () => setDimensions({});\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [config.rowsHeight, dimensions, skip]);\n\n  return {\n    scrollContainerRef,\n    initialized: !isEmpty(dimensions),\n    ...dimensions,\n  };\n};\n","import * as React from \"react\";\n\nexport const useScrollbarWidth = (container: HTMLElement) => {\n  const scrollbarWidth = React.useRef<number>(0);\n  if (!scrollbarWidth.current) {\n    scrollbarWidth.current = container\n      ? container.offsetWidth - container.clientWidth\n      : 0;\n  }\n\n  return scrollbarWidth.current;\n};\n","import * as React from \"react\";\n\nimport { Select } from \"@habx/ui-core\";\n\nimport { ColumnInstance } from \"../../types/Table\";\n\nconst OPTIONS_WITHOUT_NULL = [\n  { label: \"Oui\", value: true },\n  { label: \"Non\", value: false },\n];\n\nconst OPTIONS_WITH_NULL = [\n  { label: \"Tout\", value: null },\n  ...OPTIONS_WITHOUT_NULL,\n];\n\nexport const BooleanFilter: React.FunctionComponent<BooleanFilterProps> = ({\n  column,\n  canBeNull = true,\n}) => {\n  const rawValue = column.filterValue ?? null;\n\n  return (\n    <Select\n      small\n      bare\n      canReset={false}\n      value={canBeNull ? rawValue : !!rawValue}\n      onChange={(newValue) => column.setFilter(newValue)}\n      options={canBeNull ? OPTIONS_WITH_NULL : OPTIONS_WITHOUT_NULL}\n    />\n  );\n};\n\ninterface BooleanFilterProps {\n  column: ColumnInstance<any>;\n  canBeNull?: boolean;\n}\n","import styled, { css } from \"styled-components\";\n\nimport { Text, theme } from \"@habx/ui-core\";\n\nexport const IconCellContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const IconContainer = styled.div<{ color?: string }>`\n  &[data-large=\"true\"] {\n    font-size: 24px;\n  }\n\n  ${({ color }) =>\n    color\n      ? css`\n          color: ${color};\n        `\n      : css`\n          color: ${theme.textColor()};\n        `};\n`;\n\nexport const LabelContainer = styled(Text)`\n  margin-left: 8px;\n`;\n","import { isFunction } from \"lodash\";\nimport * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  TogglePanel,\n  menuDefaultPositionSetter,\n  TogglePanelStyleSetter,\n  theme,\n  inputStyle,\n  Slider,\n  SliderProps,\n} from \"@habx/ui-core\";\n\nimport { ColumnInstance } from \"../../types/Table\";\n\nconst togglePanelStyleSetter: TogglePanelStyleSetter = (\n  dimensions,\n  triggerDimensions\n) =>\n  menuDefaultPositionSetter({\n    menuHeight: dimensions.height,\n    menuWidth: dimensions.width,\n    position: \"vertical\",\n    triggerDimensions,\n  });\n\nconst RangeFilterTrigger = styled.div`\n  ${inputStyle};\n\n  border: solid 1px ${theme.neutralColor(300)};\n  background-color: ${theme.color(\"background\")};\n\n  position: relative;\n  color: ${theme.textColor()};\n  display: flex;\n  align-items: center;\n  padding: 0 12px;\n  height: 36px;\n`;\n\nconst RangeFilterPanel = styled.div`\n  padding: 0 60px 24px 24px;\n  min-width: 360px;\n`;\n\nexport const RangeFilter: React.FunctionComponent<RangeFilterProps> = ({\n  column,\n  tooltipFormatter,\n  ...rest\n}) => {\n  const value: Range | null = column.filterValue;\n\n  const { min, max } = React.useMemo(() => {\n    let tempMin = Infinity;\n    let tempMax = -Infinity;\n\n    for (const row of column.preFilteredRows) {\n      const rowValue = row.values[column.id];\n\n      if (rowValue > tempMax) {\n        tempMax = rowValue;\n      }\n\n      if (rowValue < tempMin) {\n        tempMin = rowValue;\n      }\n    }\n\n    return { min: tempMin, max: tempMax };\n  }, [column.id, column.preFilteredRows]);\n\n  if (min >= max) {\n    return null;\n  }\n\n  const buildTooltip = (tooltipValue: number | null | undefined) => {\n    if (tooltipValue == null) {\n      return \"?\";\n    }\n\n    const raw = `${tooltipValue}`;\n\n    return isFunction(tooltipFormatter)\n      ? tooltipFormatter(tooltipValue, raw)\n      : raw;\n  };\n\n  return (\n    <TogglePanel\n      setStyle={togglePanelStyleSetter}\n      triggerElement={\n        <RangeFilterTrigger>\n          {buildTooltip(value?.[0])} - {buildTooltip(value?.[1])}\n        </RangeFilterTrigger>\n      }\n    >\n      {(modal) =>\n        modal.state !== \"closed\" && (\n          <RangeFilterPanel>\n            <Slider\n              min={min}\n              max={max}\n              value={value}\n              onChange={column.setFilter}\n              range\n              tooltipFormatter={tooltipFormatter}\n              {...rest}\n            />\n          </RangeFilterPanel>\n        )\n      }\n    </TogglePanel>\n  );\n};\n\ntype Range = [number | null, number | null];\n\ninterface RangeFilterProps\n  extends Omit<\n    SliderProps,\n    \"value\" | \"range\" | \"onChange\" | \"min\" | \"max\" | \"customValues\"\n  > {\n  column: ColumnInstance<any>;\n}\n","import * as React from \"react\";\n\nimport { Icon } from \"@habx/ui-core\";\n\nimport { IconCellProps } from \"./IconCell.interface\";\nimport {\n  IconCellContainer,\n  IconContainer,\n  LabelContainer,\n} from \"./IconCell.style\";\n\nexport const IconCell = React.forwardRef<HTMLDivElement, IconCellProps>(\n  (props, ref) => {\n    const { icon, color, label, large = false, ...rest } = props;\n\n    return (\n      <IconCellContainer {...rest} ref={ref}>\n        <IconContainer color={color} data-large={large}>\n          <Icon icon={icon} />\n        </IconContainer>\n        {label && <LabelContainer color={color}>{label}</LabelContainer>}\n      </IconCellContainer>\n    );\n  }\n);\n","import styled from \"styled-components\";\n\nimport { zIndex } from \"../../_internal/zIndex\";\n\nexport const IMAGE_ZOOM_SIZE = 120;\nexport const IMAGE_SIZE = 36;\n\nexport const ImageZoom = styled.img`\n  border-radius: 2px;\n  height: ${IMAGE_ZOOM_SIZE}px;\n  width: ${IMAGE_ZOOM_SIZE}px;\n  object-fit: contain;\n  position: fixed;\n\n  z-index: ${zIndex.overlay};\n\n  margin-left: 8px;\n  margin-top: -16px;\n  animation: fadein 200ms;\n\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ImageCellContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px;\n  height: ${IMAGE_SIZE}px;\n  width: ${IMAGE_SIZE}px;\n  object-fit: cover;\n`;\n","import styled from \"styled-components\";\n\nexport const BooleanCellContainer = styled.div`\n  display: flex;\n  > :first-child {\n    margin-right: 12px;\n    width: auto;\n  }\n`;\n","import * as React from \"react\";\nimport * as ReactTable from \"react-table\";\n\nimport { TableState, TableInstance } from \"../../types/Table\";\n\nimport { Densities, UseDensityInstanceProps } from \"./useDensity.interface\";\n\nReactTable.actions.setDensity = \"setDensity\";\n\nconst useInstance = <D extends {}>(\n  rawInstance: ReactTable.TableInstance<D>\n) => {\n  const _instance = rawInstance as TableInstance<D>;\n\n  const { dispatch } = _instance;\n\n  const setDensity = React.useCallback(\n    (density: Densities) =>\n      dispatch({ type: ReactTable.actions.setDensity, density }),\n    [dispatch]\n  );\n\n  const pluginInstance: UseDensityInstanceProps = {\n    setDensity,\n  };\n\n  Object.assign(_instance, pluginInstance);\n};\n\nconst reducer = <D extends {}>(\n  rawState: ReactTable.TableState<D>,\n  action: ReactTable.ActionType,\n  _prevState?: ReactTable.TableState<D>,\n  rawInstance?: ReactTable.TableInstance<D>\n) => {\n  const state = rawState as TableState<D>;\n  const instance = rawInstance as TableInstance<D>;\n\n  const getState = () => {\n    switch (action.type) {\n      case ReactTable.actions.init: {\n        return {\n          ...state,\n          density: instance.initialState.density || \"medium\",\n        };\n      }\n\n      case ReactTable.actions.setDensity: {\n        return {\n          ...state,\n          density: action.density,\n        };\n      }\n\n      default: {\n        return state;\n      }\n    }\n  };\n\n  return getState() as ReactTable.TableState<D>;\n};\n\nexport const useDensity = (hooks: ReactTable.Hooks<any>) => {\n  hooks.useInstance.push(useInstance);\n  hooks.stateReducers.push(reducer);\n};\n\nuseDensity.pluginName = \"useDensity\";\n","import * as React from \"react\";\n\nimport { useInterval } from \"./useInterval\";\n\nexport enum ActionTypes {\n  setActionsCount,\n  actionDone,\n  onInitLoad,\n  retrieveRemainingTime,\n  onError,\n}\ntype Actions =\n  | { type: ActionTypes.setActionsCount; value: number }\n  | { type: ActionTypes.actionDone }\n  | { type: ActionTypes.onInitLoad }\n  | { type: ActionTypes.onError }\n  | { type: ActionTypes.retrieveRemainingTime; value: number | null };\n\ntype State = {\n  loading: boolean;\n  total: number;\n  done: number;\n\n  startTime: number | undefined;\n  remainingTime: number | undefined | null;\n};\nexport const reducer = (state: State, action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.actionDone: {\n      const done = state.done + 1;\n      const newRemainingTime =\n        ((new Date().getTime() - (state.startTime ?? 0)) / done) *\n        (state.total - done);\n      return {\n        ...state,\n        done,\n        loading: done < state.total,\n        remainingTime: newRemainingTime,\n      };\n    }\n    case ActionTypes.setActionsCount:\n      return {\n        ...state,\n        total: action.value,\n      };\n    case ActionTypes.onError: {\n      return {\n        ...state,\n        loading: false,\n        total: 0,\n        done: 0,\n        startTime: undefined,\n        remainingTime: 0,\n      };\n    }\n    case ActionTypes.retrieveRemainingTime:\n      const remainingTime =\n        state.remainingTime && action.value\n          ? state.remainingTime - action.value\n          : 0;\n      return {\n        ...state,\n        remainingTime: remainingTime > 0 ? remainingTime : 0,\n      };\n    case ActionTypes.onInitLoad: {\n      return {\n        ...state,\n        startTime: new Date().getTime(),\n        done: 0,\n        loading: true,\n        lastDoneTime: null,\n        deltaTimes: [],\n        remainingTime: undefined,\n      };\n    }\n  }\n};\n\nconst INITIAL_STATE: State = {\n  loading: false,\n  total: 0,\n  done: 0,\n\n  startTime: undefined,\n  remainingTime: undefined,\n};\n\nexport const useRemainingActionsTime = () => {\n  const [state, dispatch] = React.useReducer(reducer, INITIAL_STATE);\n\n  const intervalTime = state.loading ? 1000 : null;\n\n  useInterval(\n    () =>\n      dispatch({\n        type: ActionTypes.retrieveRemainingTime,\n        value: intervalTime,\n      }),\n    intervalTime\n  );\n\n  const onActionDone = React.useCallback(\n    () => dispatch({ type: ActionTypes.actionDone }),\n    []\n  );\n  const setActionsCount = React.useCallback(\n    (value: number) => dispatch({ type: ActionTypes.setActionsCount, value }),\n    []\n  );\n  const initLoading = React.useCallback(\n    () => dispatch({ type: ActionTypes.onInitLoad }),\n    []\n  );\n  const onError = React.useCallback(\n    () => dispatch({ type: ActionTypes.onError }),\n    []\n  );\n  return [\n    state,\n    {\n      onError,\n      onActionDone,\n      setActionsCount,\n      initLoading,\n    },\n  ] as const;\n};\n","export const FORBIDDEN_PLUGIN_NAMES = [\n  \"usePagination\",\n  \"useExpanded\",\n  \"useOrderBy\",\n];\nexport class ForbiddenPluginError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ForbiddenPluginError\";\n  }\n}\n","import { get, isFinite } from \"lodash\";\nimport * as React from \"react\";\n\nimport { getImexColumns } from \"../getImexColumns\";\nimport {\n  IMEXColumn,\n  IMEXFileExtensionTypes,\n  RowValueTypes,\n} from \"../imex.interface\";\n\nimport { exportData, ExportDataOptions } from \"./useExportTable.utils\";\n\nexport interface UseExportTableParams<D extends { [key: string]: any } = any>\n  extends Omit<ExportDataOptions, \"type\"> {\n  data?: D[];\n  columns: IMEXColumn<D>[];\n  type?: IMEXFileExtensionTypes;\n}\n\nconst ARRAY_TYPES = new Set<RowValueTypes>([\"string[]\", \"number[]\"]);\n\nexport const useExportTable = <D extends { [key: string]: any } = any>(\n  params: UseExportTableParams<D>\n) => {\n  // Put params in ref to avoid useless changes of `onFiles` function\n  const paramsRef = React.useRef(params);\n  paramsRef.current = params;\n\n  const downloadTableData = React.useCallback(\n    (title: string, options?: Partial<UseExportTableParams<D>>) => {\n      const { data, columns, ...exportOptions } = {\n        data: [],\n        type: \"xls\",\n        ...paramsRef.current,\n        ...options,\n      } as const;\n\n      const imexColumns = getImexColumns(columns);\n      const imexData = data.map((row) =>\n        imexColumns.map((column) => {\n          const meta = column.meta?.imex;\n          const valueType = meta?.type;\n\n          let value = get(row, column.accessor as string);\n\n          if (meta?.parse) {\n            value = meta.parse(value, Object.values(row));\n          } else if (ARRAY_TYPES.has(valueType!) && Array.isArray(value)) {\n            value = value.join(\",\");\n          }\n\n          return exportOptions.type === \"xls\" &&\n            valueType === \"number\" &&\n            !isFinite(value) &&\n            value != null\n            ? Number(value)\n            : value;\n        })\n      );\n\n      return exportData(title, imexColumns, imexData, exportOptions);\n    },\n    []\n  );\n\n  return [downloadTableData] as const;\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { theme } from \"@habx/ui-core\";\n\nexport const LoadingBarStyled = styled.div`\n  width: 300px;\n  height: 8px;\n  --loading-bar-progress: 0%;\n  position: relative;\n\n  background: ${theme.neutralColor(300)};\n\n  &:after {\n    transition: width ease-in-out 150ms;\n\n    content: \"\";\n    position: absolute;\n    left: 0;\n    height: 100%;\n    width: var(--loading-bar-progress);\n    background: ${theme.color(\"primary\")};\n  }\n`;\n\nexport const LoadingBar: React.FunctionComponent<LoadingBarInterface> = ({\n  loaded,\n  total,\n}) => (\n  <LoadingBarStyled\n    style={\n      {\n        \"--loading-bar-progress\": `${(loaded / total) * 100}%`,\n      } as React.CSSProperties\n    }\n  />\n);\n\ninterface LoadingBarInterface {\n  loaded: number;\n  total: number;\n}\n","import styled from \"styled-components\";\n\nimport { theme } from \"@habx/ui-core\";\n\nimport { zIndex } from \"../../_internal/zIndex\";\n\nexport const OverlayContainer = styled.div`\n  position: fixed;\n  top: 0;\n  height: 100vh;\n  width: 100vw;\n  left: 0;\n  background-color: ${theme.color(\"background\", { opacity: 0.5 })};\n  display: grid;\n  justify-items: center;\n  align-items: center;\n  z-index: ${zIndex.overlay};\n  text-align: center;\n`;\n","import {\n  deburr,\n  difference,\n  get,\n  lowerCase,\n  reduce,\n  set,\n  groupBy,\n} from \"lodash\";\n\nimport {\n  IMEXColumn,\n  ImportedRow,\n  ImportedRowMeta,\n  RowValueTypes,\n  UseImportTableOptions,\n  UseImportTableParams,\n} from \"../imex.interface\";\n\nexport enum ParseCellError {\n  NOT_A_NUMBER,\n  INVALID,\n  REQUIRED,\n}\nexport const ParsingErrors: Record<ParseCellError, string> = {\n  [ParseCellError.NOT_A_NUMBER]: \"Nombre invalide\",\n  [ParseCellError.INVALID]: \"Valeur invalide\",\n  [ParseCellError.REQUIRED]: \"Valeur requise\",\n};\n\nexport const softCompare = (a: any, b: any): boolean =>\n  typeof a !== \"object\"\n    ? a === b\n    : reduce(\n        a,\n        (ctx: boolean, value, key) => {\n          if (Array.isArray(value)) {\n            return (\n              value?.length === get(b, key, [])?.length &&\n              value.reduce(\n                (arrayCtx, v) => arrayCtx && get(b, key, []).includes(v),\n                true\n              ) &&\n              ctx\n            );\n          }\n          if (typeof value === \"object\") {\n            return softCompare(value, get(b, key)) && ctx;\n          }\n          return `${value}` === `${get(b, key)}` && ctx;\n        },\n        true\n      );\n\nconst isNotEmptyCell = (cell: any) => cell !== \"\" && cell != null;\n\nexport const parseCell = (\n  rawCell: any,\n  type: RowValueTypes,\n  options: { format: (value: any) => any }\n): string | number | string[] | number[] | undefined => {\n  switch (type) {\n    case \"number\":\n      if (!isNotEmptyCell(rawCell)) {\n        return undefined;\n      }\n      if (typeof rawCell === \"number\") {\n        return Number(options.format(rawCell));\n      }\n      const newCellValue = Number(options.format(rawCell.replace(\",\", \".\")));\n      if (Number.isNaN(newCellValue)) {\n        throw new Error(ParsingErrors[ParseCellError.NOT_A_NUMBER]);\n      }\n      return newCellValue;\n    case \"number[]\":\n      if (!isNotEmptyCell(rawCell)) {\n        return [];\n      }\n      let formattedNumberArrayCell = options.format(rawCell);\n      if (!Array.isArray(formattedNumberArrayCell)) {\n        if (typeof formattedNumberArrayCell !== \"string\") {\n          throw new Error(ParsingErrors[ParseCellError.INVALID]);\n        }\n        formattedNumberArrayCell = formattedNumberArrayCell.split(\",\");\n      }\n      return formattedNumberArrayCell\n        .filter(isNotEmptyCell)\n        .map((value: string | number) => {\n          const transformedValue = Number(value);\n          if (Number.isNaN(transformedValue)) {\n            throw new Error(ParsingErrors[ParseCellError.NOT_A_NUMBER]);\n          }\n          return transformedValue;\n        });\n\n    case \"string[]\":\n      if (!isNotEmptyCell(rawCell)) {\n        return [];\n      }\n      let formattedStringArrayCell = options.format(rawCell);\n      if (!Array.isArray(formattedStringArrayCell)) {\n        if (typeof formattedStringArrayCell !== \"string\") {\n          throw new Error(ParsingErrors[ParseCellError.INVALID]);\n        }\n        formattedStringArrayCell = formattedStringArrayCell.split(\",\");\n      }\n      return formattedStringArrayCell.filter(isNotEmptyCell);\n    default:\n      if (!isNotEmptyCell(rawCell)) {\n        return undefined;\n      }\n      return options.format(rawCell);\n  }\n};\n\nconst cleanHeader = (header: string | number | {}) =>\n  lowerCase(deburr(`${header}`));\n\ninterface ParseDataParams<D> {\n  data: any[][];\n  originalData: D[];\n  columns: IMEXColumn<ImportedRow<D>>[];\n}\nexport const parseRawData = async <D extends { id?: string | number }>(\n  params: ParseDataParams<D>,\n  options: Pick<\n    UseImportTableOptions,\n    \"findPrevValPredicate\" | \"filterRows\" | \"groupBy\"\n  >\n) => {\n  // clone original data array\n  const originalData = [...params.originalData];\n\n  const headers = params.data.shift()?.map(cleanHeader);\n  if (!headers) {\n    throw new Error(\"Missing headers row\");\n  }\n  const identifierColumn = params.columns.find(\n    (column) => column.meta?.imex?.identifier\n  );\n  if (!identifierColumn) {\n    throw new Error(\"Missing identifier column\");\n  }\n  const requiredColumnHeaders = params.columns\n    .filter((column) => column.meta?.imex?.required)\n    .map((column) => cleanHeader(column.Header as string));\n\n  const missingRequiredColumns = difference(\n    requiredColumnHeaders as string[],\n    headers\n  );\n  if (missingRequiredColumns.length > 0) {\n    throw new Error(`${missingRequiredColumns.join(\", \")} manquants`);\n  }\n\n  const ignoredColumns = [];\n  const orderedColumns = headers.map((header) => {\n    const column = params.columns.find((imexColumn) => {\n      const searchedHeader = cleanHeader(imexColumn.Header as string);\n      const cleanedHeader = requiredColumnHeaders.includes(searchedHeader)\n        ? header.replace(/\\*$/, \"\")\n        : header;\n\n      return searchedHeader === cleanedHeader;\n    });\n\n    if (!column) {\n      ignoredColumns.push(header);\n    }\n    return column;\n  });\n\n  const filteredData = params.data.filter(\n    (row: string[] | null) =>\n      row?.length === headers?.length && row.some((cell) => !!cell)\n  );\n\n  const parsedData: ImportedRow<D>[] = [];\n  for (const row of filteredData) {\n    const importedRowMeta: ImportedRowMeta<D> = {\n      hasDiff: false,\n      errors: {},\n      isIgnored: false,\n    };\n\n    const importedRowValue: Partial<D> = {};\n\n    const rawRowValues = Object.values(row);\n    for (let index = 0; index < rawRowValues.length; index++) {\n      const rawCell = rawRowValues[index];\n      if (!orderedColumns[index]) {\n        continue;\n      }\n\n      let cellError: string | null = null;\n\n      const format = (value: any) =>\n        orderedColumns[index]?.meta?.imex?.format?.(value, row) ?? value;\n\n      let newCellValue: string | number | string[] | number[] | undefined =\n        rawCell;\n\n      try {\n        newCellValue = parseCell(\n          rawCell,\n          orderedColumns[index]!.meta!.imex!.type as RowValueTypes,\n          { format }\n        );\n\n        // If parsed value is null, throw if required and ignore if not.\n        if (newCellValue == null) {\n          if (orderedColumns[index]?.meta?.imex?.required) {\n            throw new Error(ParsingErrors[ParseCellError.REQUIRED]);\n          } else {\n            continue;\n          }\n        }\n\n        const validate =\n          orderedColumns[index]?.meta?.imex?.validate ?? (() => true);\n        const validateResponse = validate(newCellValue, row);\n        const isValid =\n          typeof validateResponse === \"string\"\n            ? !validateResponse.length\n            : !!validateResponse;\n        if (!isValid) {\n          throw new Error(\n            typeof validateResponse === \"string\"\n              ? validateResponse\n              : ParsingErrors[ParseCellError.INVALID]\n          );\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          cellError = e.message;\n        }\n      }\n\n      /**\n       * Add errors on row and add ignore flag\n       */\n      if (cellError) {\n        importedRowMeta.isIgnored = true;\n        set(\n          importedRowMeta.errors,\n          orderedColumns[index]?.accessor as string,\n          cellError\n        );\n      }\n\n      set(\n        importedRowValue,\n        orderedColumns[index]?.accessor as string,\n        newCellValue\n      );\n    }\n\n    /**\n     * Previous value\n     */\n    const prevValIdentifier = get(\n      importedRowValue,\n      identifierColumn.accessor as string\n    );\n    const prevValIndex = originalData.findIndex((originalRow) => {\n      if (options.findPrevValPredicate) {\n        return options.findPrevValPredicate(originalRow, importedRowValue);\n      }\n      return (\n        get(originalRow, identifierColumn.accessor as string) ===\n        prevValIdentifier\n      );\n    });\n\n    importedRowMeta.prevVal = originalData[prevValIndex];\n    originalData.splice(prevValIndex, 1); // remove from original array\n\n    /**\n     * Diff\n     */\n    importedRowMeta.hasDiff = !softCompare(\n      importedRowValue,\n      importedRowMeta.prevVal\n    );\n\n    parsedData.push({\n      ...(importedRowValue as D),\n      _rowMeta: importedRowMeta as ImportedRowMeta<D>,\n      id: importedRowMeta.prevVal?.id ?? undefined,\n    });\n  }\n\n  /**\n   * If one of the row included in the group has been modified or added, we display existing values of the group.\n   */\n  if (options.groupBy) {\n    let filteredGroupedParsedData: ImportedRow<D>[][] = [];\n    const groupedParsedData = groupBy(parsedData, options.groupBy);\n    for (const rowGroup in groupedParsedData) {\n      if (groupedParsedData[rowGroup].some((row) => row._rowMeta.isIgnored)) {\n        // @ts-ignore do not know how to fix this\n        groupedParsedData[rowGroup] = groupedParsedData[rowGroup].map(\n          (row) => ({\n            ...row,\n            _rowMeta: {\n              ...row._rowMeta,\n              isIgnored: true,\n            },\n          })\n        );\n      }\n      if (\n        groupedParsedData[rowGroup].some(\n          (row) => row._rowMeta.hasDiff || options.filterRows?.(row)\n        )\n      ) {\n        filteredGroupedParsedData.push(groupedParsedData[rowGroup]);\n      }\n    }\n\n    return filteredGroupedParsedData.flat();\n  }\n\n  /**\n   * Display only modified rows or rows validated by the custom filter function\n   */\n  return parsedData.filter((imexRow) => {\n    if (imexRow._rowMeta.hasDiff) {\n      return true;\n    }\n    return options.filterRows?.(imexRow);\n  });\n};\n\nexport const validateOptions = <D>(options: UseImportTableParams<D>) => {\n  if (options.concurrency && options.concurrency < 1) {\n    throw new Error(\"concurrency should be greater than 1\");\n  }\n};\n","import styled from \"styled-components\";\n\nimport { Icon, Text, theme, ActionBar as BasActionBar } from \"@habx/ui-core\";\n\nimport { zIndex } from \"../../_internal/zIndex\";\n\nexport const OverlayContent = styled.div`\n  background: ${theme.color(\"background\")};\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  min-height: 0;\n  justify-content: center;\n  align-items: center;\n  img {\n    width: 200px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const DropzoneContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  max-height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: ${theme.color(\"primary\", { opacity: 0.8 })};\n  border: dashed 2px ${theme.color(\"primary\")};\n`;\n\nexport const ConfirmContainer = styled.div`\n  height: 100%;\n  min-height: 0;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ActionBar = styled(BasActionBar)`\n  z-index: ${zIndex.overlay};\n`;\n\nexport const NewCell = styled.div`\n  color: ${theme.color(\"primary\")};\n  &[data-new-row=\"true\"] {\n    display: flex;\n    align-items: center;\n    > span:first-child {\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const ChangedCell = styled.div`\n  display: flex;\n  color: ${theme.color(\"success\")};\n  flex-direction: column;\n`;\n\nexport const PrevCell = styled.div`\n  text-decoration: line-through;\n  color: ${theme.textColor()};\n  font-size: 12px;\n`;\n\nexport const StyledIMEXDropzone = styled.div`\n  height: 100%;\n  position: relative;\n  outline: none;\n`;\n\nexport const ErrorCellContent = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 100%;\n\n  &[data-error=\"false\"] {\n    opacity: 0.5;\n  }\n\n  &,\n  ${NewCell}, ${ChangedCell} {\n    color: ${theme.color(\"error\")};\n  }\n`;\n\nexport const ErrorIcon = styled(Icon)`\n  margin-right: 8px;\n  color: ${theme.color(\"error\")};\n`;\n\nexport const DataInfoContainer = styled.div`\n  display: flex;\n`;\n\nexport const DataInfo = styled(Text)`\n  display: flex;\n  align-items: center;\n  margin-right: 16px;\n  user-select: none;\n\n  > :last-child {\n    margin-left: 8px;\n  }\n\n  &[data-type=\"ignored\"] {\n    color: ${theme.color(\"error\")};\n  }\n  &[data-type=\"edition\"] {\n    color: ${theme.color(\"success\")};\n  }\n  &[data-type=\"addition\"] {\n    color: ${theme.color(\"primary\")};\n  }\n`;\n","import cx from 'clsx';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useExpanded, useGroupBy } from 'react-table';\n\nimport { BASIC_COLUMNS, FAKE_DATA } from '../_fakeData/storyFakeData';\nimport { useExpandAll } from '../plugin/useExpandAll/useExpandAll';\nimport { Table, useTable } from '..';\n\nexport type PivotTableStandardProps = {\n  tableData?: Array<any>;\n  tableColumns?: Array<any>;\n  tableOptions?: Record<string, any>;\n  tablePlugins?: Array<any>;\n\n  updateData?: Function;\n  showGroupedTable?: boolean;\n  setToggleShowGroupedTable?: Function;\n  groupOptions?: any;\n  showToolbar?: boolean;\n  showToolbarActionsMenuButtons?: boolean;\n  pvtViews?: any[];\n  setPvtViews?: Function;\n};\n\nexport function PivotTableStandard(props: PivotTableStandardProps) {\n  const {\n    tableData,\n    tableColumns,\n    tableOptions,\n    tablePlugins,\n    showGroupedTable = false,\n    setToggleShowGroupedTable,\n    groupOptions,\n    showToolbar = true,\n    showToolbarActionsMenuButtons = true,\n    pvtViews,\n    setPvtViews,\n  } = props;\n\n  const tableInstance = useTable<Faker.Card>(\n    {\n      data: tableData,\n      columns: tableColumns,\n      ...tableOptions,\n    },\n    ...tablePlugins,\n  );\n\n  // const tableActions = useMemo(() => {\n  //   const actions: any = {};\n  //   if (showGroupedTable) {\n  //     actions['setToggleShowGroupedTable'] = setToggleShowGroupedTable;\n  //   }\n  //   return actions;\n  // }, []);\n\n  const renderRowSubComponent = React.useCallback(\n    ({ row }) => <td> &nbsp;</td>,\n    [],\n  );\n\n  // <div\n  //   style={{\n  //     width: '100%',\n  //     height: '100%',\n  //   }}\n  // >\n\n  return (\n    <Table\n      instance={tableInstance}\n      renderRowSubComponent={renderRowSubComponent}\n      isRowSubComponentAboveRow={true}\n      showToolbar={showToolbar}\n      showToolbarActionsMenuButtons={showToolbarActionsMenuButtons}\n      setToggleShowGroupedTable={setToggleShowGroupedTable}\n      pvtViews={pvtViews}\n      setPvtViews={setPvtViews}\n    />\n  );\n  //  </div>\n}\n\nexport default PivotTableStandard;\n","import '../pivot-table.css';\n\nimport cx from 'clsx';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useExpanded, useGroupBy } from 'react-table';\n\nimport { PersonalKanban } from '../../PersonalKanban';\nimport { Toolbar } from '../Toolbar';\nimport { useExpandAll } from '../plugin/useExpandAll/useExpandAll';\nimport { PivotTableStandard } from './PivotTableStandard';\nimport {\n  defaultPvtData,\n  generateKanbanGuideDemoData,\n  getKanbanDataFromPvtData,\n  getPivotTableStandardColumns,\n  getTableColumnsForKanban,\n  getTableDataFromPvtData,\n} from './tableData';\n\nexport type PivotTableStandardProps = {\n  data?: Record<string, any>;\n  updateData?: Function;\n  showGroupedTable?: boolean;\n  setToggleShowGroupedTable?: Function;\n  groupOptions?: any;\n  showToolbar?: boolean;\n  showToolbarActionsMenuButtons?: boolean;\n};\n\nexport function PivotTable(props: PivotTableStandardProps) {\n  // 所有视图的源数据，初始默认的数据结构是适合在表格中直接使用的对象数组格式\n  const [pvtData, setPvtData] = useState({\n    // data: defaultPvtData,\n    data: generateKanbanGuideDemoData(5),\n  });\n  const [pvtViews, setPvtViews] = useState([\n    {\n      id: 'idKv',\n      name: '看板视图测试',\n      type: 'kanban',\n      tableColumns: {},\n      toolbarConfig: {},\n      kanbanConfig: {},\n    },\n    {\n      id: 'idTv',\n      name: '表格视图测试',\n      type: 'tableForKanban',\n      toolbarConfig: {},\n      tableConfig: {\n        columns: {},\n      },\n    },\n  ]);\n  // const updatepvtViews = useCallback(() => {}, []);\n  console.log(';;rendering PivotTable ', pvtViews);\n\n  // 这里控制全局工具条，每个视图可以定义自己的工具条配置\n  const [showToolbar, setToggleShowToolbar] = useState(true);\n  const [\n    showToolbarActionsMenuButtons,\n    setToggleShowToolbarActionsMenuButtons,\n  ] = useState(true);\n\n  const [showGroupedTable, setToggleShowGroupedTable] = useState(true);\n  // const [groupOptions, setGroupOptions] = useState({});\n\n  /** 改变key的时候，会强制重渲染整个table，要慎用，只有需要改变大部分table的时候才建议用 */\n  const tableKey = useMemo(() => cx({ showGroupedTable }), [showGroupedTable]);\n\n  const currentPvtView = useMemo(() => {\n    const firstView = pvtViews[0];\n\n    let retView = null;\n\n    if (firstView.type === 'kanban') {\n      const kanbanData = getKanbanDataFromPvtData(pvtData);\n\n      retView = <PersonalKanban />;\n    }\n\n    // ------------- 默认会显示普通表格视图\n    if (firstView.type.indexOf('table') !== -1 || !firstView.type) {\n      const tableData = getTableDataFromPvtData(pvtData['data']);\n      let groupField = '';\n      if (showGroupedTable) {\n        const dataFields = Object.keys(tableData[0]);\n        groupField = 'group';\n        // dataFields[Math.floor(Math.random() * dataFields.length)];\n\n        if (firstView.type === 'tableForKanban') {\n          groupField = 'idListDetails';\n        }\n        console.log(';;groupField, dataFields ', groupField, dataFields);\n      } else {\n        groupField = '';\n      }\n\n      let tableColumns;\n      if (firstView.type === 'tableForKanban') {\n        groupField = 'idListDetails';\n        tableColumns = getTableColumnsForKanban({\n          showGroupedTable,\n          groupOptions: showGroupedTable\n            ? {\n                groupField,\n                groupHeader: '分组',\n              }\n            : null,\n        });\n      } else {\n        // todo 支持添加多个分组列，暂时只支持单个分组字段\n        tableColumns = getPivotTableStandardColumns({\n          rowData: tableData[0],\n          showGroupedTable,\n          groupOptions: showGroupedTable\n            ? {\n                groupField,\n                // groupHeader: '分组列',\n              }\n            : null,\n        });\n      }\n      console.log(';;tableColumns ', tableColumns);\n\n      const tableOptions: any = {\n        initialState: {},\n      };\n      if (showGroupedTable) {\n        tableOptions.initialState.groupBy = [groupField];\n      }\n      const tablePlugins = [];\n      if (showGroupedTable) {\n        tablePlugins.push(useGroupBy, useExpanded, useExpandAll);\n      }\n\n      const tableProps = {\n        tableData,\n        tableColumns,\n        tableOptions,\n        tablePlugins,\n\n        showGroupedTable,\n        setToggleShowGroupedTable,\n        showToolbar,\n        showToolbarActionsMenuButtons,\n        pvtViews,\n        setPvtViews,\n      };\n      // console.log(';;tableProps ', tableProps);\n\n      retView = <PivotTableStandard {...tableProps} key={tableKey} />;\n    }\n\n    return retView;\n  }, [\n    pvtData,\n    pvtViews,\n    showGroupedTable,\n    showToolbar,\n    showToolbarActionsMenuButtons,\n    tableKey,\n  ]);\n\n  return (\n    <div className='pvt'>\n      <>\n        <Toolbar\n          showToolbar={showToolbar}\n          showToolbarActionsMenuButtons={showToolbarActionsMenuButtons}\n          setToggleShowGroupedTable={setToggleShowGroupedTable}\n          pvtViews={pvtViews}\n          setPvtViews={setPvtViews}\n        />\n        {/* todo 将搜索筛选移到toolbar，SearchBar来自ui-core */}\n        {\n          // instance.setGlobalFilter ? (\n          //   <SearchBarContainer>\n          //     <SearchBar\n          //       placeholder='全局搜索，请输入'\n          //       onChange={(e) => instance.setGlobalFilter(e.target.value)}\n          //       value={instance.state.globalFilter}\n          //     />\n          //   </SearchBarContainer>\n          // ) : null\n        }\n      </>\n      {currentPvtView}\n    </div>\n  );\n}\n\nexport default PivotTable;\n","import { Button } from '@material-ui/core';\n\nimport { IconCell } from '../cell/IconCell/IconCell';\n\nexport function generatePivotTableData(count) {\n  return {\n    pvTableName: 'testPivotTable',\n    pvData: [],\n  };\n}\n\nexport function getKanbanDataFromPvtData(data) {\n  return data;\n}\n\nexport function getTableDataFromPvtData<T>(\n  data: Array<T>,\n  processData?: (dataRef: Array<T>) => any[],\n) {\n  return typeof processData === 'function' ? processData(data) : data;\n}\n\n/**\n * * 计算出针对看板设计的table的columns列定义模型\n */\nexport function getTableColumnsForKanban(options?: Record<string, any>) {\n  const { showGroupedTable, groupOptions } = options;\n\n  let kanbanColumnsDefinitions = [\n    {\n      Header: '标题',\n      accessor: 'name',\n    },\n    {\n      Header: '描述',\n      accessor: 'desc',\n    },\n    {\n      Header: '任务分组',\n      accessor: 'idListDetails',\n      // accessor: (row, rowIndex) => row['idListDetails'],\n      // accessor: (row, rowIndex) => JSON.stringify(row['idListDetails']),\n      Cell: ({ cell: { value }, row }) => {\n        // return <span>{JSON.stringify(value)}</span>;\n        return <span>{value.name}</span>;\n      },\n    },\n    {\n      Header: '标签',\n      // accessor: 'idLabelsDetails',\n      // accessor: (row, rowIndex) => JSON.stringify(row['idLabelsDetails']),\n      accessor: (row, rowIndex) => row['idLabelsDetails'],\n      id: 'idLabelsDetails',\n      Cell: ({ cell: { value } }) => {\n        if (!value || value.length === 0) return null;\n        return value.map((tag) => {\n          const { name } = tag;\n          return name && name.trim() ? (\n            <Button\n              onClick={(e) => e.stopPropagation()}\n              variant='contained'\n              className={'pvt-tagBtn'}\n              disableElevation\n              disableRipple\n              key={name}\n            >\n              {name}\n            </Button>\n          ) : null;\n        });\n      },\n    },\n\n    {\n      Header: '负责人',\n      // accessor: 'idMembersDetails',\n      // accessor: (row, rowIndex) => JSON.stringify(row['idMembersDetails']),\n      accessor: (row, rowIndex) => row['idMembersDetails'],\n      id: 'idMembersDetails',\n      Cell: ({ cell: { value } }) =>\n        value && value.length > 0 ? (\n          <IconCell\n            icon={'person-outline'}\n            label={value[0].fullName}\n            large={true}\n          />\n        ) : null,\n    },\n    {\n      Header: '子任务',\n      // accessor: 'idChecklistsDetails',\n      // accessor: (row, rowIndex) => JSON.stringify(row['idChecklistsDetails']),\n      accessor: (row, rowIndex) => row['idChecklistsDetails'],\n      id: 'idChecklistsDetails',\n      Cell: ({ cell: { value } }) =>\n        value && value.length > 0 ? (\n          <IconCell\n            icon={'calendar-check-outline'}\n            label={`0 / ${value.length}`}\n            large={true}\n          />\n        ) : null,\n    },\n    {\n      Header: '相关文档',\n      // accessor: 'idRelatedDocsDetails',\n      // accessor: (row, rowIndex) => JSON.stringify(row['idRelatedDocsDetails']),\n      accessor: (row, rowIndex) => row['idRelatedDocsDetails'],\n      id: 'idRelatedDocsDetails',\n      Cell: ({ cell: { value } }) =>\n        value && value['docList'] && value['docList'].length > 0 ? (\n          <IconCell\n            icon={'sheet'}\n            label={`${value['docList'][0]['docTitle']}`}\n            large={true}\n          />\n        ) : null,\n    },\n    {\n      Header: '截止时间',\n      // accessor: 'due',\n      accessor: (row, rowIndex) => row['due'],\n      id: 'due',\n      Cell: ({ cell: { value } }) =>\n        value ? (\n          <IconCell\n            icon={'clock-outline'}\n            label={`${value.slice(0, 10)}`}\n            large={true}\n          />\n        ) : null,\n    },\n    {\n      Header: '优先级',\n      accessor: 'priority',\n    },\n    {\n      Header: '状态',\n      accessor: 'status',\n    },\n  ];\n\n  if (showGroupedTable && groupOptions) {\n    kanbanColumnsDefinitions = kanbanColumnsDefinitions.filter((col: any) =>\n      typeof col.accessor === 'function'\n        ? col.id !== groupOptions.groupField\n        : col.accessor !== groupOptions.groupField,\n    );\n\n    kanbanColumnsDefinitions.unshift({\n      Header: groupOptions.groupHeader || groupOptions.groupField,\n      accessor: (row, rowIndex) => row['idListDetails']['name'],\n      id: groupOptions.groupField,\n      Cell: ({ row: { groupByVal } }) => {\n        // return <h3>groupByVal</h3>;\n        return groupByVal;\n      },\n    } as any);\n  }\n\n  return kanbanColumnsDefinitions;\n}\n\n/**\n * * 计算出table的columns列定义模型\n */\nexport function getPivotTableStandardColumns(options) {\n  const { rowData, showGroupedTable, groupOptions } = options;\n\n  let tableDefaultColumns: any[] = [\n    {\n      Header: '第1列',\n      accessor: 'field1',\n    },\n    {\n      Header: '第2列',\n      accessor: 'field2',\n    },\n    {\n      Header: '第3列',\n      accessor: 'fieldN',\n    },\n  ];\n\n  if (rowData && Object.keys(rowData).length > 0) {\n    // 将传入数据的各个属性名作为表格的列名\n    tableDefaultColumns = Object.keys(rowData).map((field, idx) => ({\n      Header: field,\n      accessor: (row, rowIndex) => {\n        if (\n          ['string', 'number', 'boolean', 'null', 'undefined'].includes(\n            typeof row[field],\n          )\n        ) {\n          return row[field];\n        }\n\n        return JSON.stringify(row[field]);\n      },\n      id: field,\n    }));\n  }\n\n  if (showGroupedTable && groupOptions) {\n    tableDefaultColumns = tableDefaultColumns.filter((col) =>\n      typeof col.accessor === 'function'\n        ? col.id !== groupOptions.groupField\n        : col.accessor !== groupOptions.groupField,\n    );\n\n    tableDefaultColumns.unshift({\n      Header: groupOptions.groupHeader || groupOptions.groupField,\n      accessor: groupOptions.groupField,\n      Cell: ({ row: { groupByVal } }) => {\n        return groupByVal;\n      },\n    });\n  }\n\n  return tableDefaultColumns;\n}\n\nexport const defaultPvtData = [\n  {\n    recordId: 1,\n    field1: 'r1c1',\n    field2: 'r1c2',\n    fieldN: 'r1c3',\n    group: '分组A',\n  },\n  {\n    recordId: 2,\n    field1: 'r2c1',\n    field2: 'r2c2',\n    fieldN: 'r2c3',\n    group: '分组B',\n  },\n  {\n    recordId: 3,\n    field1: 'r3c1',\n    field2: 'r3c2',\n    fieldN: 'r3c3',\n    group: '分组A',\n  },\n];\n\n/**\n * * mock测试用的看板数据，动态生成，根据trello导出的数据修改而来。\n * https://trello.com/b/qoBz7TLE/hello-trello\n * https://trello.com/b/qoBz7TLE.json\n */\nexport function generateKanbanGuideDemoData(count?: number) {\n  if (!count) return [];\n\n  return Array(count)\n    .fill(1)\n    .map((__, idx) => {\n      return {\n        id: 'cardId' + idx,\n        name: '卡片标题 ' + idx,\n        desc: '',\n        descData: {\n          emoji: {},\n        },\n        status: 'normal',\n        priority: idx % 3 === 0 ? '最高' : '',\n        due: '2022-01-30T08:57:00.000Z',\n        dueReminder: 1440,\n        dueComplete: false,\n        closed: false,\n        idList: 'idList' + (idx % 3),\n        idListDetails: {\n          id: 'idList' + (idx % 3),\n          name: '分组' + (idx % 3),\n          closed: false,\n          idBoard: 'idBoard',\n        },\n        idBoard: 'idBoard',\n        idBoardDetails: {\n          id: 'idBoard',\n          name: '示例看板',\n        },\n        idLabels: idx % 3 === 1 ? ['idLabel1', 'idLabel2'] : [],\n        idLabelsDetails:\n          idx % 3 === 1\n            ? [\n                {\n                  id: 'idLabel1',\n                  idBoard: 'idBoard',\n                  name: '测试标签1',\n                  color: 'purple',\n                },\n                {\n                  id: 'idLabel2',\n                  idBoard: 'idBoard',\n                  name: '测试标签2',\n                  color: 'purple',\n                },\n              ]\n            : [],\n        idMembers: idx % 3 === 0 ? ['idUser1'] : [],\n        idMembersDetails:\n          idx % 3 === 0\n            ? [\n                {\n                  id: 'idUser1',\n                  username: 'uptonking1',\n                  fullName: 'uptonking' + idx,\n                  avatarUrl: '',\n                  memberType: 'normal',\n                },\n              ]\n            : [],\n        idMembersVoted: [],\n        idChecklists: ['idChecklist'],\n        idChecklistsDetails: [\n          {\n            id: 'idChecklist',\n            name: 'test checklist 子任务',\n            idCard: 'cardId' + idx,\n            checkItems: [\n              {\n                idChecklist: 'idChecklist',\n                state: 'complete',\n                id: '61b316a7dce17a5b97006b16',\n                name: 'ckeditor',\n                nameData: {\n                  emoji: {},\n                },\n                pos: 16879,\n                due: null,\n                idMember: null,\n              },\n              {\n                idChecklist: 'idChecklist',\n                state: 'incomplete',\n                id: '61b316ab877ce337dbc11e2e',\n                name: 'prosemirror',\n                nameData: {\n                  emoji: {},\n                },\n                pos: 33786,\n                due: null,\n                idMember: null,\n              },\n            ],\n          },\n        ],\n        idRelatedDocs: ['docId1', 'docId2'],\n        idRelatedDocsDetails: {\n          title: '相关文档',\n          docList: [\n            {\n              docTitle: 'ckeditor architecture core',\n              docId: 'docId1',\n              url: '',\n            },\n            {\n              docTitle: 'ckeditor editing engine',\n              docId: 'docId2',\n              url: '',\n            },\n          ],\n        },\n\n        isTemplate: false,\n        attachments: [],\n        pluginData: [],\n        customFieldItems: [],\n        group: '分组' + (idx % 3),\n        createdBy: '',\n        createdTime: '',\n      };\n    });\n}\n\n/**\n * * mock测试用的看板数据，静态文字版，根据trello导出的数据修改而来。\n * https://trello.com/b/qoBz7TLE/hello-trello\n */\nexport function generateKanbanGuideDemoDataStatic() {\n  // 数组中每项代表一个卡片\n  return [\n    {\n      id: 'card0101',\n      name: '这是一个全功能的卡片示例，其他卡片是使用教程',\n      nameData: {\n        emoji: { shortName: '', native: '✨' },\n      },\n      desc: 'Make a fresh start by erasing this board. Click delete button on main toolbar.',\n      descData: {\n        emoji: {},\n      },\n      status: 'done',\n      priority: '11',\n      due: '2022-01-30T08:57:00.000Z',\n      dueReminder: 1440,\n      dueComplete: false,\n      closed: false,\n      idList: 'listGroupId01',\n      idListDetails: {\n        id: 'listGroupId01',\n        name: '看板示例说明',\n        closed: false,\n        idBoard: 'idBoard',\n      },\n      idBoard: 'idBoard',\n      idBoardDetails: {\n        id: 'idBoard',\n        name: '示例看板',\n      },\n      idLabels: ['idLabel1', 'idLabel2'],\n      idLabelsDetails: [\n        {\n          id: 'idLabel1',\n          idBoard: 'idBoard',\n          name: '全功能卡片',\n          color: 'purple',\n        },\n        {\n          id: 'idLabel2',\n          idBoard: 'idBoard',\n          name: '教程',\n          color: 'purple',\n        },\n      ],\n      idMembers: ['idUser1'],\n      idMembersDetails: [\n        {\n          id: 'idUser1',\n          username: 'uptonking1',\n          fullName: 'uptonking',\n          avatarUrl: '',\n          memberType: 'normal',\n        },\n      ],\n      idMembersVoted: [],\n      idChecklists: ['idChecklist'],\n      idChecklistsDetails: [\n        {\n          id: 'idChecklist',\n          name: 'test checklist 子任务',\n          idCard: 'card0101',\n          checkItems: [\n            {\n              idChecklist: 'idChecklist',\n              id: '61b316a7dce17a5b97006b16',\n              name: 'ckeditor',\n              state: 'complete',\n              nameData: {\n                emoji: {},\n              },\n              pos: 16879,\n              due: null,\n              idMember: null,\n            },\n            {\n              idChecklist: 'idChecklist',\n              id: '61b316ab877ce337dbc11e2e',\n              name: 'prosemirror',\n              state: 'incomplete',\n              nameData: {\n                emoji: {},\n              },\n              pos: 33786,\n              due: null,\n              idMember: null,\n            },\n          ],\n        },\n      ],\n      idRelatedDocs: ['idRelatedDocsList'],\n      idRelatedDocsDetails: [\n        {\n          id: 'idRelatedDocsList',\n          title: '相关文档',\n          docList: [\n            {\n              docTitle: 'ckeditor architecture core',\n              docId: 'unique-doc-id1',\n              url: '',\n            },\n            {\n              docTitle: 'ckeditor editing engine',\n              docId: 'unique-doc-id2',\n              url: '',\n            },\n          ],\n        },\n      ],\n\n      isTemplate: false,\n      attachments: [],\n      pluginData: [],\n      customFieldItems: [],\n      group: '默认分组字段',\n      createdBy: '',\n      createdTime: '',\n    },\n  ];\n}\n","// import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { PivotTable } from './PivotTable/TableVariant';\n\n// import PersonalKanban from './PersonalKanban';\n// import { PivotTableFull } from './PivotTable/PivotTable';\n// import reportWebVitals from './reportWebVitals';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  // <PersonalKanban />,\n  <PivotTable />,\n  // </React.StrictMode>\n  document.getElementById('root'),\n);\n\n// serviceWorkerRegistration.register();\n// reportWebVitals();\n"],"sourceRoot":""}